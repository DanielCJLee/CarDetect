Processing recording: car
00000001110000
[array([ 0.04336116,  0.03926417, -0.03862036, -0.06972622, -0.08089367,
       -0.04213721, -0.0525008 , -0.01837722, -0.00451606, -0.08634964,
        0.02382812,  0.61920275,  0.37926105]), ['0']]
[array([ 0.28378476,  0.13020852,  0.0813722 ,  0.05151555,  0.04528263,
        0.03305764,  0.01598593,  0.04735694,  0.06576553, -0.00848152,
        0.01699219, -0.49914576,  0.3781531 ]), ['0']]
[array([ 0.32831441,  0.17576343,  0.09349741,  0.00587882,  0.0447219 ,
        0.04754638,  0.05388304,  0.05762702,  0.10235325,  0.0179968 ,
        0.01552734, -0.69364846,  0.37871061]), ['0']]
[array([ 0.35564806,  0.1989142 ,  0.10442212,  0.08658026,  0.07390362,
        0.06060218,  0.07262091,  0.08056466,  0.11391639,  0.03019384,
        0.01386719, -0.40537418,  0.37736036]), ['0']]
[array([ 0.38963892,  0.21408866,  0.13011993,  0.0971022 ,  0.09328046,
        0.06389251,  0.07242932,  0.09315902,  0.11321379,  0.04438356,
        0.00849609, -0.9923231 ,  0.37678513]), ['0']]
[array([ 0.36995915,  0.18344582,  0.12356268,  0.07628023,  0.12022749,
        0.12824759,  0.12348021,  0.11555453,  0.12764792,  0.03409028,
        0.00966797, -0.35454883,  0.37631939]), ['0']]
[array([ 0.45989955,  0.24608207,  0.14905234,  0.09265737,  0.10401951,
        0.05717136,  0.13656827,  0.11364929,  0.13343969,  0.07238223,
        0.00800781, -1.23739323,  0.37278461]), ['0']]
[array([ 0.45708184,  0.23922889,  0.17275657,  0.08938599,  0.10173792,
        0.10632714,  0.10374631,  0.11892402,  0.13551388,  0.05123242,
        0.00703125, -1.14891985,  0.37366455]), ['0']]
[array([ 0.45903836,  0.26930517,  0.12631699,  0.10002015,  0.07446658,
        0.05051893,  0.07208127,  0.08438423,  0.13351628,  0.04845335,
        0.00390625, -1.05602912,  0.34679779]), ['0']]
[array([ 0.4669821 ,  0.18863231,  0.11316453,  0.09487433,  0.080845  ,
        0.07089361,  0.05934403,  0.09438058,  0.13870178, -0.05569502,
        0.00166016, -0.42744865,  0.37871061]), ['0']]
[array([ 0.46831024,  0.22208566,  0.10662218,  0.10164311,  0.12648779,
        0.11735697,  0.10138603,  0.12706133,  0.11465841,  0.01868267,
        0.00361328,  0.10208252,  0.37525286]), ['0']]
[array([ 0.46680167,  0.21747559,  0.12146505,  0.08515696,  0.07528697,
        0.07323534,  0.03600324,  0.0755136 ,  0.09333739, -0.0381736 ,
        0.003125  , -0.51709083,  0.36709413]), ['0']]
[array([ 0.48079253,  0.27093297,  0.10246938,  0.13517308,  0.08630767,
        0.06039294,  0.07289478,  0.11678282,  0.12895377,  0.0188435 ,
        0.00595703, -0.32773912,  0.34816218]), ['0']]
[array([ 0.39511753,  0.17943832,  0.11116359,  0.08740343,  0.06717357,
        0.07523724,  0.09256489,  0.11012401,  0.12256007,  0.01721   ,
        0.00957031, -0.3854299 ,  0.37926105]), ['0']]
[array([ 0.27026898,  0.1709492 ,  0.08990347,  0.09312496,  0.0799591 ,
        0.08194902,  0.01416609,  0.10796896,  0.12391166,  0.02708493,
        0.01308594,  0.22459648,  0.37713118]), ['0']]
[array([-1.53525298,  0.18139662,  0.09625922,  0.1039444 ,  0.08830267,
        0.07462558,  0.07389353,  0.1198364 ,  0.1718838 ,  0.07972957,
        0.02255859, -0.5314064 ,  0.38181021]), ['0']]
[array([-1.53525298,  0.18571246,  0.11860421,  0.07253032,  0.08831738,
        0.05354309,  0.0454862 ,  0.1154288 ,  0.12144598,  0.02557539,
        0.01630859, -0.88674356,  0.37690079]), ['0']]
[array([ 0.35303628,  0.22105805,  0.04523113,  0.07115614,  0.08355386,
        0.09962177,  0.07430111,  0.1130534 ,  0.11301907,  0.04696169,
        0.01083984, -0.41630484,  0.37620218]), ['0']]
[array([ 0.20385748,  0.20899527,  0.12861531,  0.07070169,  0.04320759,
        0.09837756,  0.10866295,  0.10838914,  0.11781377, -0.01223623,
        0.01162109, -1.62646346,  0.37620218]), ['0']]
[array([-1.53525298,  0.18577485,  0.12195035,  0.10176593,  0.09180404,
        0.08432526,  0.14687669,  0.13267577,  0.11346302,  0.0314669 ,
        0.01816406,  0.26574086,  0.37724592]), ['0']]
[array([-1.53525298,  0.19184137,  0.15274248,  0.09814991,  0.10196785,
        0.11070458,  0.12648245,  0.10432538,  0.13666809,  0.03710799,
        0.00878906,  0.34894441,  0.37893162]), ['0']]
[array([-1.53525298,  0.19332656,  0.11772418,  0.08521083,  0.12026068,
        0.12198162,  0.08673222,  0.10437943,  0.11441543, -0.03004765,
        0.01152344, -0.42668489,  0.37525286]), ['0']]
[array([-1.53525298,  0.21316145,  0.10446289,  0.08492593,  0.10074244,
        0.07236953,  0.10631689,  0.10821041,  0.14073518,  0.01378527,
        0.02109375, -0.52968721,  0.38023461]), ['0']]
[array([-1.53525298,  0.20516439,  0.12401878,  0.09278225,  0.09278923,
        0.06528703,  0.10215676,  0.07944506,  0.09577452, -0.02343298,
        0.01767578, -0.54776977,  0.37240197]), ['0']]
[array([-1.53525298,  0.17569672,  0.10011832,  0.08075839,  0.08551083,
        0.0873701 ,  0.09052489,  0.08848666,  0.08200964, -0.03469836,
        0.01650391, -0.58331137,  0.37291141]), ['0']]
[array([-1.53525298,  0.19697821,  0.10683829,  0.07740532,  0.08698172,
        0.07955123,  0.07963265,  0.10327314,  0.10765016, -0.03256488,
        0.01767578, -0.66934625,  0.37464882]), ['0']]
[array([-1.53525298,  0.19369617,  0.12379981,  0.05401319,  0.066641  ,
        0.07066861,  0.00572937,  0.10041498,  0.10596508,  0.01722742,
        0.01835938, -0.65184095,  0.37573011]), ['0']]
[array([-1.53525298,  0.19670484,  0.12896767,  0.07048296,  0.08474624,
        0.07066901,  0.06344591,  0.09378392,  0.11496417,  0.00704547,
        0.01699219, -1.09989844,  0.37701614]), ['0']]
[array([ 0.10691701,  0.20538946,  0.07278025,  0.0837671 ,  0.04592757,
        0.09824577,  0.05645749,  0.08738873,  0.12070821,  0.02463214,
        0.0171875 ,  0.36297842,  0.37549214]), ['0']]
[array([ 0.11995886,  0.17290273,  0.13281407,  0.1050424 ,  0.07007685,
        0.00491694,  0.07498763,  0.08443344,  0.11262217,  0.01774112,
        0.02255859, -0.47352545,  0.37969644]), ['0']]
[array([-1.53525298,  0.19445196,  0.1283295 ,  0.05723953,  0.07254413,
        0.09962663,  0.08168631,  0.13186013,  0.11530102,  0.01571236,
        0.01650391,  0.01447091,  0.37690079]), ['0']]
[array([-1.53525298,  0.20250948,  0.07997244,  0.11101803,  0.07864391,
        0.08368403,  0.10363971,  0.069133  ,  0.13735361, -0.00663957,
        0.01640625, -0.79999998,  0.37736036]), ['0']]
[array([ 0.05231251,  0.1958883 ,  0.08973448,  0.10164708,  0.07249206,
        0.07407334,  0.07455248,  0.11424066,  0.10266523, -0.02807823,
        0.01914063, -0.47616548,  0.37353993]), ['0']]
[array([-1.53525298,  0.21823902,  0.12196854,  0.082093  ,  0.0751511 ,
        0.09598153,  0.09361756,  0.10721443,  0.12316879,  0.02274654,
        0.01689453, -0.48381642,  0.37792808]), ['0']]
[array([-1.53525298,  0.20040078,  0.10161362,  0.0370146 ,  0.08877377,
        0.09073885,  0.08634022,  0.09795493,  0.10341921,  0.01382932,
        0.02060547, -0.6257363 ,  0.37501225]), ['0']]
[array([-1.53525298,  0.20003148,  0.12874687,  0.07456174,  0.07082759,
        0.08736228,  0.09977223,  0.11394427,  0.11391748, -0.04178949,
        0.01855469, -0.6940084 ,  0.37608464]), ['0']]
[array([-1.53525298,  0.21947551,  0.14592056,  0.09301154,  0.0792923 ,
        0.08253512,  0.05530735,  0.07749525,  0.08738682, -0.02494564,
        0.0171875 ,  0.08540622,  0.36251838]), ['0']]
[array([ -1.53525298e+00,   2.04812115e-01,   1.29731999e-01,
         8.23853176e-02,   5.56079567e-02,   6.30931132e-02,
         8.48592806e-02,   1.08288284e-01,   9.05295630e-02,
        -6.20373164e-04,   1.77734375e-02,   2.50554026e+00,
         3.72144993e-01]), ['0']]
[array([ 0.15134165,  0.18268369,  0.0917612 ,  0.07261966,  0.08676268,
        0.07746866,  0.0752892 ,  0.09498533,  0.11731105,  0.045272  ,
        0.02246094, -0.58810169,  0.37871061]), ['0']]
[array([ 0.12325748,  0.20479144,  0.13167497,  0.04631126,  0.0826772 ,
        0.10485879,  0.09740066,  0.08607901,  0.10511527, -0.0334089 ,
        0.02607422, -0.16425899,  0.37391271]), ['0']]
[array([-1.53525298,  0.20429236,  0.14153326,  0.0796034 ,  0.08088038,
        0.08293393,  0.09754941,  0.10629869,  0.09575045, -0.01595586,
        0.021875  , -0.69079507,  0.37252989]), ['0']]
[array([-1.53525298,  0.16401629,  0.12414763,  0.07860321,  0.04493847,
        0.10632845,  0.09371639,  0.09060736,  0.11191   , -0.03226577,
        0.02089844, -0.87027506,  0.37631939]), ['0']]
[array([-1.53525298,  0.16355789,  0.12679025,  0.04770103,  0.05895348,
        0.0865366 ,  0.11264422,  0.0891703 ,  0.09217889,  0.04272174,
        0.02373047,  0.88053389,  0.37980461]), ['0']]
[array([-1.53525298,  0.18452641,  0.1037955 ,  0.09852345,  0.07082773,
        0.0704193 ,  0.08151144,  0.09786302,  0.10287299,  0.0076013 ,
        0.02060547, -0.25854338,  0.37608464]), ['0']]
[array([ 0.10306133,  0.19544573,  0.11776413,  0.10926691,  0.10874064,
        0.1019396 ,  0.06179778,  0.05157433,  0.10447356, -0.00851439,
        0.02080078, -0.63782953,  0.37549214]), ['0']]
[array([-1.53525298,  0.15857001,  0.0940584 ,  0.08485756,  0.0522043 ,
        0.06772694,  0.06026865,  0.09220039,  0.12886283, -0.01352678,
        0.02216797, -0.41392008,  0.37792808]), ['0']]
[array([-1.53525298,  0.18184492,  0.09658308,  0.08782158,  0.1114637 ,
        0.03477727,  0.07887585,  0.12900124,  0.11284324,  0.02428465,
        0.01669922, -0.43737203,  0.37573011]), ['0']]
[array([ -1.53525298e+00,   1.74578166e-01,   1.33614908e-01,
         9.58662531e-02,   6.03215311e-02,   7.70474298e-04,
         7.18324135e-02,   9.18811075e-02,   1.15793047e-01,
        -5.29402280e-03,   2.29492188e-02,   4.31757658e-02,
         3.79151521e-01]), ['0']]
[array([-1.53525298,  0.1264819 ,  0.12004707,  0.06805861,  0.06664208,
        0.07613159,  0.0832163 ,  0.12620835,  0.13853937,  0.01182253,
        0.02138672, -0.48042081,  0.38076618]), ['0']]
[array([-1.53525298,  0.19036361,  0.10398118,  0.05874232,  0.07375534,
        0.04534327,  0.10126951,  0.09830942,  0.1156065 ,  0.00772526,
        0.01757812, -0.50974816,  0.37736036]), ['0']]
[array([-1.53525298,  0.15789015,  0.12375638,  0.08537806,  0.08810901,
        0.06614225,  0.08567609,  0.09813509,  0.09398988,  0.04453413,
        0.02490234,  0.7260465 ,  0.37969644]), ['0']]
[array([-1.53525298,  0.17749127,  0.15518962,  0.10803785,  0.09093652,
        0.09155442, -0.03895874,  0.09891554,  0.13767302,  0.05513322,
        0.02744141, -0.24768801,  0.38118681]), ['0']]
[array([-1.53525298,  0.1474609 ,  0.16164035,  0.09464044,  0.07804688,
        0.07007952,  0.10712518,  0.12554232,  0.13248759,  0.07164549,
        0.02236328, -0.29251469,  0.38191325]), ['0']]
[array([ 0.47020787,  0.31842685,  0.0734429 ,  0.0590563 ,  0.06944018,
        0.05009219,  0.09180514,  0.11491747,  0.11905083,  0.06391031,
        0.00839844, -0.6958511 ,  0.28659179]), ['0']]
[array([ 0.42795008,  0.22813309,  0.11967695,  0.11377853,  0.05434252,
        0.07574779,  0.0974895 ,  0.13118833,  0.13287936,  0.0600646 ,
        0.00966797, -1.00931164,  0.37678513]), ['0']]
[array([ 0.21994105,  0.18523548,  0.11589478,  0.08586812,  0.06163942,
        0.09084343,  0.09474369,  0.10015312,  0.12291175, -0.00542471,
        0.01708984, -0.61901026,  0.37781513]), ['0']]
[array([ 0.19947086,  0.18356875,  0.13210042,  0.04843335, -0.02421873,
        0.11548636,  0.13075749,  0.11372261,  0.1294444 ,  0.00712101,
        0.01865234,  0.74186366,  0.38076618]), ['0']]
[array([ 0.1857884 ,  0.19361747,  0.13270429,  0.10492232,  0.03163336,
        0.08106613,  0.1019471 ,  0.09754114,  0.12813411,  0.04384029,
        0.01904297, -0.36228777,  0.37871061]), ['0']]
[array([ 0.10801913,  0.1789371 ,  0.14249036,  0.11994181,  0.03902271,
        0.10730366,  0.09141959,  0.08855302,  0.13339493,  0.05124133,
        0.01894531, -0.69774598,  0.37937031]), ['0']]
[array([ 0.39847973,  0.14724257,  0.12581211,  0.1358086 ,  0.10732657,
        0.04552344,  0.0514265 ,  0.0975729 ,  0.14747181,  0.06657922,
        0.01044922,  0.15746135,  0.38170693]), ['0']]
[array([ 0.28959959,  0.13759373,  0.14349242,  0.09014001,  0.08236841,
        0.10335674,  0.08791502,  0.09771848,  0.13844951,  0.02776508,
        0.01523437, -0.40904567,  0.3801275 ]), ['0']]
[array([ 0.34944742,  0.18477742,  0.14287665,  0.12227534,  0.07711495,
        0.07158878,  0.00292018,  0.11055789,  0.15076351,  0.05425339,
        0.01679687, -0.04501035,  0.38002014]), ['0']]
[array([ 0.275773  ,  0.16764079,  0.13420104,  0.05468256,  0.09126838,
        0.07273632,  0.10677294,  0.09746901,  0.14420402,  0.04603683,
        0.01484375, -0.89426641,  0.38034144]), ['0']]
[array([ 0.41848037,  0.20045865,  0.15696729,  0.10693961,  0.09697567,
        0.08392367,  0.10214836,  0.10172352,  0.13229854,  0.05223244,
        0.00546875,  0.79370718,  0.38023461]), ['0']]
[array([ 0.41991625,  0.20353447,  0.1573279 ,  0.13723325,  0.08562768,
        0.0872132 ,  0.09578727,  0.10905695,  0.14717486,  0.01564459,
        0.00302734, -0.49227803,  0.37947929]), ['0']]
[array([ 0.47772873,  0.18563222,  0.1505789 ,  0.11564183,  0.0625846 ,
        0.04744939,  0.11783844,  0.12508126,  0.1487686 ,  0.03874127,
        0.00429688,  0.12693206,  0.37848846]), ['0']]
[array([ 0.4936312 ,  0.34168827,  0.10675793,  0.06845598,  0.03723219,
        0.04633439,  0.03841997,  0.06425957,  0.10347757, -0.02311372,
        0.00507813, -0.70224552,  0.29013902]), ['0']]
[array([ 0.51018409,  0.34601952,  0.10822494,  0.07015557,  0.0256315 ,
        0.03785224,  0.09496091,  0.08669373,  0.10048169, -0.03513504,
        0.00507813, -1.53319782,  0.29496949]), ['0']]
[array([  4.86001439e-01,   3.44300057e-01,   1.27983867e-01,
         9.15650571e-02,  -4.77536834e-03,   9.78963985e-02,
         9.37401569e-02,   8.25224345e-02,   1.34261673e-01,
        -3.90133138e-04,   4.98046875e-03,  -1.67874123e+00,
         2.94200805e-01]), ['0']]
[array([ 0.45976389,  0.1517232 ,  0.14059642,  0.12070911,  0.07307627,
        0.10071082,  0.03792524,  0.11042918,  0.14006072,  0.02443898,
        0.00703125, -0.27948497,  0.3801275 ]), ['0']]
[array([ 0.42698532,  0.14647384,  0.11260417,  0.07075411,  0.07878375,
        0.07768952,  0.07013124,  0.09539787,  0.14407383,  0.02348161,
        0.00488281,  0.53962457,  0.37848846]), ['0']]
[array([ 0.49132563,  0.32419948,  0.12560821,  0.10748784,  0.03846764,
        0.0154125 ,  0.08469356,  0.09629162,  0.11583041,  0.03523017,
        0.00449219, -0.84492867,  0.29098234]), ['0']]
[array([ 0.49509006,  0.26275625,  0.14606628,  0.11964692,  0.07631136,
        0.09676865,  0.03553702,  0.06305477,  0.09434582,  0.02858534,
        0.00546875,  0.5009773 ,  0.32024202]), ['0']]
[array([ 0.45099812,  0.19715745,  0.17867181,  0.12943547,  0.10716732,
        0.10578126,  0.09995167,  0.10842544,  0.13103012,  0.07606949,
        0.00927734,  0.13073916,  0.37826518]), ['0']]
[array([ 0.40860811,  0.16365385,  0.14224649,  0.13932769,  0.10934974,
        0.10005232,  0.11313019,  0.09924949,  0.13418603,  0.01665778,
        0.00654297, -0.32113717,  0.37781513]), ['0']]
[array([ 0.08799317,  0.17204138,  0.16660789,  0.11055505,  0.08851459,
        0.11204089,  0.10445646,  0.08285118,  0.15167135,  0.04332406,
        0.00996094, -1.03596671,  0.37859968]), ['0']]
[array([ 0.1340751 ,  0.17141765,  0.10171423,  0.10177494,  0.11928529,
        0.11314363,  0.11154998,  0.13319032,  0.14267775,  0.02464962,
        0.01357422, -0.41932441,  0.37882126]), ['0']]
[array([ 0.34928465,  0.15827368,  0.15939913,  0.12251226,  0.12327527,
        0.09382507,  0.11340107,  0.13271934,  0.14223006,  0.05328571,
        0.00722656,  0.20108949,  0.38066039]), ['0']]
[array([ 0.43275533,  0.19217219,  0.15773151,  0.13881177,  0.10607091,
        0.13281906,  0.14121212,  0.10229425,  0.16153146,  0.05790987,
        0.00693359,  0.17662428,  0.37937031]), ['0']]
[array([ 0.51110009,  0.23422651,  0.12310703,  0.11883747,  0.07038612,
        0.06010715,  0.00338328,  0.09025253,  0.09764098, -0.00596464,
        0.00576172,  0.14243323,  0.36170659]), ['0']]
[array([ 0.50335484,  0.24734965,  0.04070693,  0.06816187,  0.0292673 ,
        0.1133443 ,  0.06140795,  0.07725439,  0.12549916,  0.03982021,
        0.00449219, -0.39558929,  0.37201593]), ['0']]
[array([  5.15933963e-01,   3.42787537e-01,   1.15925289e-01,
         7.73507354e-02,   7.93411612e-04,   4.78377020e-02,
        -8.43965964e-02,   7.76896354e-02,   6.04108519e-02,
        -4.27221037e-02,   3.32031250e-03,  -8.19825227e-01,
         2.92621379e-01]), ['0']]
[array([ 0.50284194,  0.33963741,  0.12522872,  0.11644155,  0.09844354,
        0.0506997 ,  0.08286832,  0.07940105,  0.13433833,  0.04990002,
        0.00351563, -1.33571067,  0.29341827]), ['0']]
[array([ 0.47418521,  0.25966798,  0.09538219,  0.08984419,  0.08609606,
        0.08570347,  0.07474136,  0.11815514,  0.13309095,  0.04068377,
        0.00615234, -0.42153577,  0.36962471]), ['0']]
[array([ 0.39447855,  0.13843294,  0.14589421,  0.13119711,  0.12619789,
        0.13490244,  0.11585331,  0.10328269,  0.1631521 ,  0.05274354,
        0.00888672, -0.64282946,  0.37980461]), ['0']]
[array([ 0.34447728,  0.19054712,  0.20639183,  0.15160689,  0.06660169,
        0.11792236,  0.11705587,  0.12084657,  0.16713839,  0.10826181,
        0.00595703, -0.48278375,  0.38149963]), ['0']]
[array([ 0.43349817,  0.20832486,  0.18876971,  0.14964296,  0.06082006,
        0.13860196,  0.12400918,  0.14179663,  0.14975517,  0.05015035,
        0.00458984, -0.21714889,  0.3774745 ]), ['0']]
[array([ 0.23470042,  0.17670822,  0.19903878,  0.15362202,  0.10948844,
        0.08408766,  0.13961487,  0.16502012,  0.1580474 ,  0.08822263,
        0.00996094, -1.01911484,  0.37837696]), ['0']]
[array([ 0.47346558,  0.25003161,  0.2098935 ,  0.18229284,  0.11831212,
        0.10014011,  0.09047335,  0.10022548,  0.15566002,  0.00547136,
        0.00605469, -0.11981985,  0.37561129]), ['0']]
[array([ 0.38958649,  0.18659635,  0.18379865,  0.16759725,  0.10790693,
        0.12207952,  0.09928565,  0.16129529,  0.18565742,  0.08288883,
        0.009375  ,  0.54880482,  0.38066039]), ['0']]
[array([-1.53525298,  0.20724391,  0.21032393,  0.12591056,  0.12290054,
        0.13375043,  0.1460216 ,  0.13797216,  0.17552891,  0.06574927,
        0.01005859,  0.21737663,  0.37937031]), ['0']]
[array([ 0.35101399,  0.15134398,  0.2176797 ,  0.15584155,  0.12207761,
        0.13414837,  0.12257667,  0.14981327,  0.16990489,  0.05463045,
        0.00703125, -0.9915094 ,  0.37947929]), ['0']]
[array([ 0.48731524,  0.26226767,  0.20041407,  0.12031796,  0.06166223,
        0.08623326,  0.12865238,  0.12846487,  0.14492865,  0.01852612,
        0.00654297, -0.66085627,  0.37030225]), ['0']]
[array([ 0.46578745,  0.20857625,  0.20432539,  0.16954732,  0.12565484,
        0.14705783,  0.13365159,  0.14434196,  0.19217479,  0.06526424,
        0.00800781, -0.85581741,  0.37937031]), ['0']]
[array([ 0.41867243,  0.18079118,  0.20761495,  0.1666016 ,  0.15043353,
        0.13844596,  0.15437897,  0.14285756,  0.17823993,  0.06630379,
        0.00429688, -0.07045688,  0.37859968]), ['0']]
[array([ 0.33373716,  0.13256132,  0.22910545,  0.17192256,  0.09950318,
        0.17371583,  0.16303314,  0.14537806,  0.18681272,  0.05846738,
        0.00625   , -0.44367317,  0.37792808]), ['0']]
[array([ 0.47595727,  0.201827  ,  0.214689  ,  0.1489616 ,  0.12758156,
        0.16928817,  0.1579575 ,  0.15589723,  0.17498645,  0.04830766,
        0.00517578, -0.85877667,  0.37969644]), ['0']]
[array([ 0.48706865,  0.34591722,  0.18642591,  0.13849332,  0.07645955,
        0.14229149,  0.11789818,  0.10153802,  0.11412557,  0.00361358,
        0.00498047, -0.98352341,  0.29931606]), ['0']]
[array([ 0.38980073,  0.14791434,  0.22553055,  0.16669115,  0.10309556,
        0.13220199,  0.16767191,  0.12584703,  0.12556225,  0.00175302,
        0.00654297, -0.08391826,  0.37415947]), ['0']]
[array([ 0.43473563,  0.30919607,  0.19394668,  0.18544658,  0.09202192,
        0.10240348,  0.15746111,  0.13870624,  0.1491647 ,  0.02268334,
        0.00771484, -1.49245202,  0.3314394 ]), ['0']]
[array([ 0.37510384,  0.19795785,  0.17952549,  0.1947649 ,  0.12143129,
        0.1523273 ,  0.16365427,  0.14123603,  0.16343239,  0.07275332,
        0.00507813, -0.37129291,  0.37837696]), ['0']]
[array([ 0.31267582,  0.19196767,  0.20065316,  0.20925035,  0.14909702,
        0.15631957,  0.17686428,  0.1341141 ,  0.13383222,  0.08386223,
        0.00927734,  0.47225483,  0.37608464]), ['0']]
[array([ 0.45251167,  0.29843555,  0.20069924,  0.1634698 ,  0.13825905,
        0.12074006,  0.15301631,  0.09841012,  0.14555847,  0.03178105,
        0.0078125 , -1.30724283,  0.3355188 ]), ['0']]
[array([ 0.44574031,  0.27673945,  0.19243069,  0.16862993,  0.11228813,
        0.11920497,  0.17266661,  0.13569132,  0.16567415,  0.06046618,
        0.00654297, -0.68303143,  0.3713648 ]), ['0']]
[array([ 0.47652845,  0.18248112,  0.19616584,  0.17168765,  0.07714115,
        0.11133937,  0.15038928,  0.09197738,  0.14437822,  0.02318939,
        0.0046875 , -0.64427424,  0.37584861]), ['0']]
[array([ 0.38632637,  0.16649776,  0.20261644,  0.18629274,  0.12838197,
        0.12334022,  0.16847689,  0.12491767,  0.13650041,  0.06875339,
        0.00595703,  0.05247184,  0.37837696]), ['0']]
[array([ 0.46703495,  0.38468119,  0.11576609,  0.14248581,  0.13715288,
        0.0356007 ,  0.0524805 ,  0.06141345,  0.07747245,  0.03954651,
        0.00478516, -0.86120119,  0.29013902]), ['0']]
[array([ 0.42543961,  0.20598174,  0.18916978,  0.1422159 ,  0.08508992,
        0.11473354,  0.13472002,  0.14004293,  0.13446585,  0.04342467,
        0.00576172, -0.36171013,  0.37584861]), ['0']]
[array([  5.14783852e-01,   3.39030296e-01,   1.60482889e-01,
         6.65551443e-02,  -2.19954177e-02,   2.37244297e-02,
        -1.53183614e-03,  -9.08954418e-02,  -5.49077201e-03,
        -1.00966710e-01,   3.71093750e-03,  -2.13734718e+00,
         2.98621172e-01]), ['0']]
[array([ 0.50170486,  0.33357119,  0.17092549,  0.07205562,  0.03449137,
        0.06558083,  0.02805141,  0.03658641,  0.0934695 , -0.05242016,
        0.00449219, -1.94767624,  0.2957248 ]), ['0']]
[array([ 0.50934751,  0.30094052,  0.15115634,  0.11028237,  0.05887073,
        0.04874189,  0.00799715,  0.07077747,  0.10031043, -0.05057223,
        0.00273437, -0.62829383,  0.29262138]), ['0']]
[array([ 0.49264529,  0.30643434,  0.1664088 ,  0.11025834,  0.05626574,
        0.0541919 ,  0.06342724,  0.06541996,  0.1158813 , -0.03084956,
        0.00410156, -0.41823909,  0.28750613]), ['0']]
[array([ 0.51849622,  0.43449539,  0.24076735,  0.13566285,  0.00903324,
       -1.53525298, -0.03217782, -1.53525298, -0.27029208, -0.1689775 ,
        0.00498047, -0.68418544,  0.29862117]), ['0']]
[array([  4.96025228e-01,   3.07161668e-01,   4.44268765e-02,
         9.55128304e-02,   1.70239651e-02,  -1.53525298e+00,
        -1.53525298e+00,  -3.30190452e-02,  -1.05329419e-03,
        -9.12447992e-02,   3.61328125e-03,  -3.68923213e-01,
         2.90139020e-01]), ['0']]
[array([ 0.42980041,  0.36051884,  0.17632483,  0.14288943, -0.09685099,
        0.02990766,  0.08456306,  0.03443871,  0.0635999 , -0.05297862,
        0.00390625, -1.41205035,  0.29341827]), ['0']]
[array([ 0.46004697,  0.4067433 ,  0.18760676,  0.09934546,  0.01345947,
       -1.53525298, -0.15903724, -0.06391102, -0.03480038, -0.06024444,
        0.00390625, -1.86729735,  0.2964672 ]), ['0']]
[array([ 0.42593266,  0.29489658,  0.17714359,  0.07815001,  0.06884949,
        0.01376426,  0.02188301,  0.03066646,  0.02722776, -0.03147474,
        0.003125  , -0.78843007,  0.30450784]), ['0']]
[array([ 0.33950911,  0.09206326,  0.19731227,  0.1219862 ,  0.06189502,
        0.06915127,  0.07029502,  0.10581453,  0.10747643, -0.04850624,
        0.00595703, -0.10263158,  0.379588  ]), ['0']]
[array([ 0.48208633,  0.34585745,  0.18441368,  0.02794278, -0.06017485,
        0.03965581, -0.02988252,  0.01072015, -0.04648768, -0.14979189,
        0.0046875 , -1.54871706,  0.30450784]), ['0']]
[array([ 0.32896791, -0.00212924,  0.22154654,  0.08035094,  0.07550789,
        0.07570667, -0.01733747,  0.08906493,  0.08518681,  0.00122437,
        0.00654297, -0.10263158,  0.37415947]), ['0']]
[array([-1.53525298,  0.11267594,  0.21363053,  0.12176574,  0.09442108,
        0.09099683,  0.10553616,  0.09394955,  0.12579251,  0.00745364,
        0.01074219, -0.10263158,  0.374527  ]), ['0']]
[array([-1.53525298,  0.15552596,  0.21142177,  0.13138315,  0.14550548,
        0.10238848,  0.08896438,  0.090657  ,  0.10383101,  0.03245606,
        0.01142578, -0.13817676,  0.37428233]), ['0']]
[array([ 0.40579065,  0.16657519,  0.24743092,  0.16559057,  0.13467185,
        0.10089878,  0.06512618,  0.11909567,  0.13392508,  0.00759801,
        0.00683594, -0.24626293,  0.37278461]), ['0']]
[array([-1.53525298,  0.17638852,  0.20020027,  0.11450013,  0.10970959,
        0.11552928,  0.12346019,  0.12135463,  0.13151729,  0.03576347,
        0.01132812, -0.23983857,  0.37882126]), ['0']]
[array([ 0.26890044,  0.09791743,  0.22665509,  0.12480588,  0.16207971,
        0.08313096,  0.07081389,  0.11724493,  0.13370895,  0.04774038,
        0.00849609, -0.11793351,  0.37969644]), ['0']]
[array([ 0.39706567,  0.10609753,  0.19566455,  0.07837107,  0.14183417,
        0.12293513,  0.06445453,  0.10452494,  0.15171228,  0.04724306,
        0.00869141,  0.        ,  0.38044802]), ['0']]
[array([-1.53525298,  0.11688584,  0.19261191,  0.13970858,  0.1688475 ,
        0.11879908,  0.11853807,  0.12383327,  0.14721482,  0.0345719 ,
        0.01464844, -0.10263158,  0.37804073]), ['0']]
[array([ 0.33481632,  0.14128358,  0.19897175,  0.12616968,  0.14422465,
        0.13749748,  0.11048134,  0.12002132,  0.14989054, -0.00309115,
        0.01240234, -0.32072742,  0.3801275 ]), ['0']]
[array([-1.53525298,  0.19261324,  0.20766734,  0.14228081,  0.14398847,
        0.14360596,  0.08397697,  0.13240464,  0.15399425,  0.06145271,
        0.01347656, -0.08342734,  0.37770188]), ['0']]
[array([-1.53525298,  0.13657811,  0.22647176,  0.10695223,  0.13395289,
        0.15316396,  0.03646924,  0.15203939,  0.1456391 ,  0.04657885,
        0.01523437,  0.59527069,  0.37631939]), ['0']]
[array([-1.53525298,  0.19910249,  0.2334558 ,  0.13217186,  0.15123107,
        0.12874865,  0.08287578,  0.16596118,  0.1621509 ,  0.02195297,
        0.02148438, -0.58363132,  0.37804073]), ['0']]
[array([-1.53525298,  0.19071319,  0.24380379,  0.13421884,  0.1629037 ,
        0.14203223,  0.0831187 ,  0.13743089,  0.16933908,  0.0595563 ,
        0.02734375, -0.50999068,  0.37980461]), ['0']]
[array([-1.53525298,  0.10708858,  0.25815727,  0.1210928 ,  0.13367652,
        0.10381752,  0.11784491,  0.11523905,  0.16090671,  0.04967802,
        0.02451172, -0.25477971,  0.37893162]), ['0']]
[array([-1.53525298,  0.19907435,  0.23435986,  0.17347271,  0.12943138,
        0.13232155,  0.10687824,  0.12892811,  0.16416814,  0.07176354,
        0.02294922, -0.49902825,  0.37871061]), ['0']]
[array([-1.53525298,  0.17088779,  0.20111306,  0.16629654,  0.14950408,
        0.09880224,  0.07874812,  0.12581116,  0.14803413,  0.02423721,
        0.01777344, -0.24519735,  0.379588  ]), ['0']]
[array([-1.53525298,  0.19893255,  0.19288589,  0.12522133,  0.15052081,
        0.11164499,  0.09817936,  0.13717555,  0.17517738,  0.05077628,
        0.02412109, -0.49013825,  0.37893162]), ['0']]
[array([-1.53525298,  0.15892093,  0.2001452 ,  0.1328217 ,  0.14720777,
        0.0948016 ,  0.09823642,  0.13786444,  0.1674119 ,  0.08192062,
        0.02470703, -0.66159117,  0.37926105]), ['0']]
[array([-1.53525298,  0.20494077,  0.22064136,  0.12223524,  0.09811104,
        0.10648152,  0.0603682 ,  0.13798998,  0.16902299,  0.07265524,
        0.02744141, -0.37699409,  0.38034144]), ['0']]
[array([-1.53525298,  0.16656437,  0.19567011,  0.14208282,  0.1353319 ,
        0.11910866,  0.14054807,  0.11071137,  0.17728647,  0.04787941,
        0.02382812, -0.16516291,  0.37969644]), ['0']]
[array([-1.53525298,  0.19568565,  0.22783183,  0.13353802,  0.14913139,
        0.1163719 ,  0.10360207,  0.13639161,  0.16168523,  0.09499298,
        0.02246094, -0.66265633,  0.37804073]), ['0']]
[array([-1.53525298,  0.2267149 ,  0.2388587 ,  0.14816519,  0.14946212,
        0.15237434,  0.12772765,  0.11731776,  0.15843506,  0.05110676,
        0.02353516, -0.97040868,  0.37837696]), ['1']]
[array([-1.53525298,  0.21070548,  0.23510574,  0.15077572,  0.10661575,
        0.12158354,  0.09517318,  0.1464074 ,  0.15499991,  0.06615313,
        0.02558594, -0.71539088,  0.37804073]), ['1']]
[array([-1.53525298,  0.20636405,  0.24705955,  0.15430515,  0.09440624,
        0.11692644,  0.12155679,  0.13974039,  0.14680474,  0.07387411,
        0.02138672, -0.12799665,  0.37316391]), ['1']]
[array([-1.53525298,  0.19585212,  0.18480563,  0.18046748,  0.17583965,
        0.12272377,  0.10302961,  0.12909248,  0.17418913,  0.07575327,
        0.02460937,  1.09530778,  0.37969644]), ['1']]
[array([-1.53525298,  0.23274629,  0.19426148,  0.16908615,  0.13436571,
        0.13313212,  0.11975042,  0.14499355,  0.16174042,  0.08110819,
        0.02441406, -0.75234832,  0.37561129]), ['1']]
[array([-1.53525298,  0.22897539,  0.19540225,  0.15619035,  0.14627366,
        0.15764273,  0.12260228,  0.15009944,  0.17973076,  0.10671262,
        0.02392578,  1.61757027,  0.37804073]), ['1']]
[array([-1.53525298,  0.19076747,  0.18393283,  0.17568671,  0.17974831,
        0.12089002,  0.10862583,  0.11062247,  0.15664525,  0.04095977,
        0.02285156, -0.25045919,  0.38087172]), ['1']]
[array([-1.53525298,  0.24757065,  0.21054494,  0.19587561,  0.1594432 ,
        0.17138137,  0.12750893,  0.15264465,  0.16064939,  0.07376973,
        0.02470703, -1.16676433,  0.37608464]), ['1']]
[array([-1.53525298,  0.21766674,  0.23722469,  0.173985  ,  0.18474575,
        0.15180186,  0.14132635,  0.15898044,  0.16931329,  0.08885258,
        0.02412109, -1.09553715,  0.37837696]), ['1']]
[array([-1.53525298,  0.21935668,  0.24960123,  0.15155325,  0.15411029,
        0.11904237,  0.0799864 ,  0.14628365,  0.17569062,  0.07346668,
        0.01992187, -0.18140006,  0.37826518]), ['1']]
[array([ 0.23694365,  0.22366783,  0.26186959,  0.15463787,  0.19218479,
        0.15678853,  0.10889671,  0.14484979,  0.1672694 ,  0.08604903,
        0.01835938, -0.53331882,  0.37770188]), ['1']]
[array([ 0.16167453,  0.21790608,  0.24580191,  0.19063013,  0.16276396,
        0.16954014,  0.17805126,  0.16716193,  0.17503848,  0.08725537,
        0.01953125,  0.83431637,  0.3774745 ]), ['1']]
[array([-1.53525298,  0.22543895,  0.2939352 ,  0.18961108,  0.1707418 ,
        0.12652644,  0.15095632,  0.17152661,  0.16783948,  0.0866968 ,
        0.01835938, -0.65740486,  0.37227367]), ['1']]
[array([-1.53525298,  0.29537336,  0.32303385,  0.21777753,  0.19605024,
        0.18401749,  0.10835321,  0.17505378,  0.19535118,  0.08153598,
        0.02109375,  2.49351375,  0.36409781]), ['1']]
[array([ 0.3115448 ,  0.24463567,  0.22420261,  0.20111117,  0.18865362,
        0.14870666,  0.14676594,  0.17128593,  0.16909605,  0.11426868,
        0.01308594, -0.84434328,  0.37596678]), ['1']]
[array([ 0.339078  ,  0.28266461,  0.29083655,  0.20099719,  0.18408632,
        0.17360873,  0.13976571,  0.19222072,  0.17418559,  0.09351171,
        0.01201172,  0.76476757,  0.36606876]), ['1']]
[array([ 0.42405119,  0.26835119,  0.28094532,  0.18785347,  0.22164455,
        0.17383835,  0.15059663,  0.1595661 ,  0.17616303,  0.09289049,
        0.01474609, -0.54807817,  0.37366455]), ['1']]
[array([ 0.42994896,  0.28679989,  0.27179095,  0.20336011,  0.18059136,
        0.16061762,  0.16364394,  0.15819062,  0.19014583,  0.06830218,
        0.01230469, -1.37398495,  0.37366455]), ['1']]
[array([ 0.25230131,  0.30035918,  0.29296143,  0.14400198,  0.20604505,
        0.14709832,  0.18404212,  0.16337292,  0.16634282,  0.04033244,
        0.01933594, -1.43502588,  0.35794263]), ['1']]
[array([ 0.2269236 ,  0.28755332,  0.26345669,  0.20948478,  0.17499461,
        0.13341016,  0.14594933,  0.13319139,  0.16201054,  0.04848506,
        0.01767578, -0.86702871,  0.359176  ]), ['1']]
[array([ 0.31870141,  0.3027704 ,  0.321905  ,  0.22761444,  0.19245138,
        0.17340183,  0.17689664,  0.17339275,  0.16433977,  0.09812374,
        0.01689453,  0.96135769,  0.34490925]), ['1']]
[array([ 0.27305919,  0.30670629,  0.27300921,  0.23845336,  0.23189367,
        0.16250115,  0.1625642 ,  0.15246476,  0.18413228,  0.07082096,
        0.01826172, -0.01660097,  0.35740313]), ['1']]
[array([ 0.34617352,  0.30163808,  0.3299983 ,  0.22331264,  0.19474599,
        0.18322398,  0.18073977,  0.13679805,  0.15105338, -0.0122637 ,
        0.01757812, -0.86935245,  0.3372797 ]), ['1']]
[array([ 0.29628321,  0.31981255,  0.31823082,  0.22213793,  0.21238035,
        0.16476587,  0.12695063,  0.13248097,  0.16786939,  0.07727332,
        0.02060547,  0.48876308,  0.33461084]), ['1']]
[array([ 0.29397393,  0.32067238,  0.30924271,  0.21631777,  0.23946449,
        0.18612652,  0.17211706,  0.16041368,  0.16068161,  0.04733758,
        0.0203125 ,  1.35072973,  0.34318661]), ['1']]
[array([ 0.31255844,  0.32165475,  0.30277508,  0.23533176,  0.22211359,
        0.19328484,  0.16639013,  0.16075428,  0.17584061,  0.05994083,
        0.01904297, -1.08085477,  0.34514986]), ['1']]
[array([ 0.32837182,  0.33044415,  0.32041439,  0.22955716,  0.24080299,
        0.15659512,  0.12793925,  0.17810269,  0.17641005,  0.05666752,
        0.01787109,  0.58868318,  0.3403335 ]), ['1']]
[array([ 0.3265346 ,  0.32798907,  0.37516537,  0.2452411 ,  0.22746895,
        0.22301504,  0.17063064,  0.16347071,  0.17166928, -0.02139259,
        0.02021484, -0.56206612,  0.32766054]), ['1']]
[array([ 0.35341983,  0.35752213,  0.34119578,  0.26568047,  0.20138625,
        0.174778  ,  0.16690534,  0.16191734,  0.16708519,  0.02823163,
        0.01816406, -0.51036158,  0.32545179]), ['1']]
[array([ 0.34887122,  0.35499055,  0.30113977,  0.24762436,  0.21607503,
        0.14257027,  0.20156799,  0.17327019,  0.18208574,  0.05735995,
        0.01777344, -1.35412477,  0.33581729]), ['1']]
[array([ 0.3821763 ,  0.37574347,  0.34435418,  0.24028388,  0.17207913,
        0.14093257,  0.14628331,  0.15690066,  0.1765156 ,  0.05850859,
        0.01699219, -0.12853477,  0.32066573]), ['1']]
[array([ 0.39450875,  0.36940843,  0.35661425,  0.25118771,  0.221826  ,
        0.16948018,  0.19648191,  0.1895391 ,  0.19049746,  0.09489277,
        0.01738281, -0.79700251,  0.32468985]), ['1']]
[array([ 0.3720401 ,  0.37043094,  0.37459502,  0.27746407,  0.20483193,
        0.16336073,  0.21287082,  0.21234369,  0.19476618,  0.07471999,
        0.01611328, -0.96814097,  0.3258278 ]), ['1']]
[array([ 0.41574   ,  0.38223834,  0.33768982,  0.26760355,  0.2288128 ,
        0.20632906,  0.18545491,  0.21753036,  0.21187341,  0.05966534,
        0.01269531, -0.70306475,  0.329073  ]), ['1']]
[array([ 0.48575679,  0.39621265,  0.3660718 ,  0.24624662,  0.22404421,
        0.18784968,  0.19006544,  0.2110274 ,  0.15898018,  0.0133891 ,
        0.01074219, -1.29255435,  0.32191259]), ['1']]
[array([ 0.42796155,  0.38801552,  0.37415985,  0.25992291,  0.2328729 ,
        0.21515709,  0.21683414,  0.22276212,  0.18422379,  0.04290027,
        0.01308594, -0.28486172,  0.3243038 ]), ['1']]
[array([ 0.44487922,  0.41000483,  0.35483546,  0.25344911,  0.25893357,
        0.26984414,  0.23178044,  0.23921528,  0.21950463,  0.09891759,
        0.01308594, -0.07528972,  0.32468985]), ['1']]
[array([ 0.46061113,  0.40951579,  0.37226041,  0.2573344 ,  0.26812792,
        0.27274234,  0.25784464,  0.24257907,  0.20410044,  0.08951457,
        0.01162109, -0.21995904,  0.32730013]), ['1']]
[array([ 0.47301679,  0.40936566,  0.33112961,  0.26980471,  0.25005421,
        0.27587105,  0.23144718,  0.22857854,  0.21360959,  0.0990231 ,
        0.01044922, -1.05919598,  0.3258278 ]), ['1']]
[array([ 0.46474157,  0.40366618,  0.35752617,  0.28974626,  0.23760571,
        0.2851806 ,  0.21833749,  0.23501955,  0.20816865,  0.05855301,
        0.01123047, -0.45492664,  0.330103  ]), ['1']]
[array([ 0.5111513 ,  0.40565806,  0.33606201,  0.25117094,  0.26495887,
        0.25981623,  0.23063997,  0.22136344,  0.18634899,  0.0787037 ,
        0.01259766,  0.95950961,  0.32312465]), ['1']]
[array([ 0.46138262,  0.41184562,  0.35842412,  0.30353672,  0.24482337,
        0.26221389,  0.21433179,  0.2170169 ,  0.20352222,  0.11431478,
        0.01210938,  1.79434109,  0.32545179]), ['1']]
[array([ 0.50245209,  0.46075926,  0.3539736 ,  0.35078277,  0.30376975,
        0.22112952,  0.2637082 ,  0.26988871,  0.27316018,  0.15341548,
        0.00947266, -1.11436525,  0.32468985]), ['1']]
[array([ 0.45972981,  0.38759943,  0.37531478,  0.32778531,  0.30148892,
        0.29455172,  0.28028912,  0.28388613,  0.27556787,  0.16834682,
        0.01621094, -0.50352524,  0.36680363]), ['1']]
[array([ 0.44535126,  0.40690067,  0.36788334,  0.30691201,  0.28545723,
        0.28441149,  0.2859185 ,  0.28727961,  0.28460695,  0.16880764,
        0.01523437, -0.76850753,  0.36606876]), ['1']]
[array([ 0.4613314 ,  0.42399718,  0.33397453,  0.30248906,  0.28533479,
        0.23993175,  0.26765738,  0.26245574,  0.26561078,  0.16451275,
        0.01376953, -1.03100274,  0.33756636]), ['1']]
[array([ 0.4596246 ,  0.38272746,  0.32027334,  0.34299041,  0.29436525,
        0.25514611,  0.28319629,  0.29209364,  0.30181081,  0.18384971,
        0.01601562, -0.06263986,  0.37631939]), ['1']]
[array([ 0.39968941,  0.39041945,  0.35441252,  0.33745492,  0.28605008,
        0.27909682,  0.28261823,  0.27650204,  0.30543433,  0.17321999,
        0.02001953,  0.59724799,  0.37666916]), ['1']]
[array([ 0.40914902,  0.35488947,  0.30552049,  0.30206607,  0.25970243,
        0.20521276,  0.27888139,  0.25879762,  0.27557931,  0.16173876,
        0.02021484, -0.36206171,  0.37501225]), ['1']]
[array([ 0.38445907,  0.38630926,  0.34442602,  0.3260595 ,  0.27294117,
        0.24388557,  0.25060105,  0.26121758,  0.27336702,  0.12328623,
        0.01933594,  0.67906918,  0.36809584]), ['1']]
[array([ 0.4716837 ,  0.32535679,  0.19785393,  0.23475478,  0.18348038,
        0.18960938,  0.21136919,  0.17555775,  0.21662509,  0.05962338,
        0.01572266,  0.31769876,  0.37083678]), ['1']]
[array([ 0.49408091,  0.32551753,  0.26829551,  0.25291696,  0.12706359,
        0.09290405,  0.15949517,  0.1796689 ,  0.20859823, -0.0651793 ,
        0.00966797, -0.69257072,  0.36709413]), ['1']]
[array([ 0.48835839,  0.33012786,  0.27259456,  0.24251765,  0.08943239,
        0.09867199,  0.17141779,  0.11028444,  0.16141781,  0.03142619,
        0.00839844, -0.40739628,  0.33110913]), ['1']]
[array([ 0.48892849,  0.3103488 ,  0.22423876,  0.22054131,  0.05731522,
        0.09736283,  0.15964084,  0.08507677,  0.17271126,  0.01256318,
        0.01132812, -0.29789602,  0.33581729]), ['1']]
[array([ 0.4195651 ,  0.32549888,  0.27593034,  0.25132218,  0.11840752,
        0.18301434,  0.18598289,  0.13281713,  0.19111057,  0.012279  ,
        0.01201172, -0.55099147,  0.349485  ]), ['1']]
[array([-1.53525298,  0.24145443,  0.22853949,  0.20548302,  0.13561488,
        0.17679906,  0.20206136,  0.17615653,  0.22477984,  0.1274059 ,
        0.02148438, -0.33455922,  0.37893162]), ['1']]
[array([ 0.23632384,  0.29661086,  0.27980652,  0.23857448,  0.11711843,
        0.08613915,  0.18720923,  0.17187097,  0.20559513,  0.1178889 ,
        0.02041016, -0.29918431,  0.37341495]), ['1']]
[array([ 0.32161775,  0.26600654, -1.53525298,  0.23044404,  0.14151035,
        0.16768477,  0.17156867,  0.1472682 ,  0.19804243,  0.10808563,
        0.02080078, -0.37229992,  0.37620218]), ['1']]
[array([ 0.34610903,  0.19304056,  0.24664807,  0.24418203,  0.15508421,
        0.17851635,  0.13592006,  0.1493668 ,  0.21051067,  0.13953175,
        0.01767578, -0.13863558,  0.38232296]), ['1']]
[array([-1.53525298,  0.23169414,  0.27290488,  0.22789232,  0.14417393,
        0.19347141,  0.13306313,  0.13588516,  0.23427354,  0.17505114,
        0.02119141, -0.24589732,  0.3816034 ]), ['1']]
[array([ 0.16092126,  0.16647345,  0.19818264,  0.26663635,  0.1443282 ,
        0.17867036,  0.14377588,  0.11338473,  0.22615819,  0.05711908,
        0.02460937, -0.17201495,  0.37631939]), ['0']]
[array([ 0.28311202,  0.09751171,  0.292773  ,  0.24419841,  0.14438916,
        0.18978652,  0.19370571,  0.15923377,  0.16578415,  0.09834107,
        0.02402344, -0.10263158,  0.37690079]), ['0']]
[array([-0.04272237,  0.23245869,  0.25988222,  0.20652983,  0.11835555,
        0.18540517,  0.00754404,  0.12041684,  0.1501903 ,  0.07066998,
        0.02080078, -0.1926655 ,  0.37378881]), ['0']]
[array([ 0.20348991,  0.29490686,  0.1681738 ,  0.20065571, -1.53525298,
        0.12250311,  0.12500591,  0.13090069,  0.16948975,  0.06517071,
        0.01777344, -0.28290783,  0.36948793]), ['0']]
[array([-1.53525298,  0.207921  ,  0.22603634,  0.23711754, -1.53525298,
        0.12064878,  0.00376689,  0.05335791,  0.15256966, -0.05346848,
        0.01894531, -0.10263158,  0.37537267]), ['0']]
[array([-1.53525298,  0.07325508,  0.12788793,  0.25148349, -1.53525298,
        0.05619321,  0.03652862,  0.04203234,  0.08008658, -0.05019392,
        0.01865234,  0.        ,  0.33699113]), ['0']]
[array([ -1.53525298e+00,   1.17449191e-01,   2.39853501e-01,
         2.28266922e-01,   4.15232683e-04,   3.90020750e-02,
         1.70007260e-01,   1.89092914e-01,   2.82449819e-01,
         1.13289820e-01,   1.93359375e-02,  -1.02631579e-01,
         3.81706932e-01]), ['0']]
[array([ 0.21659343,  0.05849751,  0.16757382, -1.53525298, -1.53525298,
        0.10877368,  0.08246148, -0.14270095,  0.08486143, -0.04715204,
        0.01591797, -0.10263158,  0.38282973]), ['0']]
[array([-0.01029691,  0.22207449,  0.1709675 ,  0.17155681, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.10505732, -0.13954752,
        0.01621094, -0.19118177,  0.33044097]), ['0']]
[array([-1.53525298,  0.19751768,  0.21090403, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298,  0.09325141,  0.02944206, -0.12793649,
        0.01591797,  3.58427044,  0.32941906]), ['0']]
[array([-1.53525298,  0.04628091,  0.11098511,  0.13215875, -1.53525298,
       -1.53525298, -1.53525298, -0.09431121, -0.02104882, -1.53525298,
        0.01484375, -0.10263158,  0.33336991]), ['0']]
[array([-1.53525298, -1.53525298,  0.21633074,  0.22598003, -1.53525298,
        0.00540786, -1.53525298, -0.02095889,  0.10663224, -1.53525298,
        0.02041016,  0.        ,  0.37341495]), ['0']]
[array([-1.53525298, -1.53525298,  0.17810631,  0.19327775, -1.53525298,
       -1.53525298, -1.53525298,  0.05277212, -0.08251949, -1.53525298,
        0.02109375,  0.        ,  0.3314394 ]), ['0']]
[array([-1.53525298, -1.53525298,  0.13975644,  0.23407292, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.01148372, -0.11719929,
        0.021875  ,  0.        ,  0.33640817]), ['0']]
[array([-1.53525298, -1.53525298,  0.09651029,  0.23100159, -1.53525298,
       -1.53525298, -1.53525298, -0.06127489,  0.01433309, -0.22582287,
        0.02216797,  0.        ,  0.33611374]), ['0']]
[array([-1.53525298, -1.53525298,  0.23167274,  0.1729775 , -1.53525298,
       -1.53525298, -0.03451274, -1.53525298,  0.09195   , -0.0169493 ,
        0.02431641,  0.        ,  0.37110159]), ['0']]
[array([-1.53525298,  0.16851726,  0.15907259,  0.15467565, -1.53525298,
       -1.53525298, -1.53525298,  0.06466938,  0.05674923,  0.0326886 ,
        0.02314453, -0.10263158,  0.36694912]), ['0']]
[array([-0.09353988, -1.53525298,  0.21865931,  0.16500978, -1.53525298,
       -1.53525298, -0.01958878,  0.03299652,  0.02121722, -0.09222757,
        0.02197266,  0.        ,  0.33399481]), ['0']]
[array([-1.53525298,  0.13411584,  0.13607655,  0.18664146, -1.53525298,
       -0.0028144 , -1.53525298, -1.53525298,  0.10296657, -1.53525298,
        0.02333984,  0.        ,  0.37915152]), ['0']]
[array([-1.53525298,  0.06939429,  0.21265253,  0.01550405, -1.53525298,
        0.07506429, -1.53525298,  0.02983427,  0.06952828, -1.53525298,
        0.025     ,  0.        ,  0.37083678]), ['0']]
[array([-1.53525298, -1.53525298, -1.53525298, -1.53525298, -0.01481225,
        0.10561507, -1.53525298,  0.05401631,  0.05790133, -0.017714  ,
        0.02285156,  0.        ,  0.38402238]), ['0']]
[array([-1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.00272058, -1.53525298, -1.53525298,  0.0118679 , -0.03887379,
        0.02490234,  0.        ,  0.38723384]), ['0']]
[array([-1.53525298, -1.53525298, -1.53525298, -1.53525298, -0.02302996,
       -1.53525298, -1.53525298, -0.11139456,  0.03128669, -0.22588804,
        0.02363281,  0.        ,  0.38282973]), ['0']]
[array([-1.53525298, -1.53525298,  0.17248605, -1.53525298, -1.53525298,
       -0.0079494 , -1.53525298,  0.08890826,  0.12230883, -0.11094169,
        0.02685547,  0.        ,  0.37265744]), ['0']]
[array([ 0.20613809, -1.53525298, -0.08074679, -1.53525298,  0.0295177 ,
        0.07163969, -1.53525298,  0.0171735 ,  0.03407869, -0.1862259 ,
        0.02587891,  0.        ,  0.37030225]), ['0']]
[array([-1.53525298,  0.11536178,  0.11898438,  0.13827858, -1.53525298,
       -1.53525298,  0.05107502,  0.0654805 ,  0.10667722,  0.03512223,
        0.02236328, -0.10263158,  0.37969644]), ['0']]
[array([ 0.01920909,  0.09659095,  0.08412446, -1.53525298, -1.53525298,
        0.06631663, -1.53525298,  0.02830571,  0.07399995, -0.0060736 ,
        0.02216797, -0.10263158,  0.38191325]), ['0']]
[array([-1.53525298,  0.14702267, -1.53525298, -1.53525298, -0.04410072,
       -0.04076632, -1.53525298,  0.05673621,  0.04203309, -0.00867133,
        0.02412109, -0.19539062,  0.38023461]), ['0']]
[array([-1.53525298,  0.12658054, -0.00324152, -1.53525298, -1.53525298,
        0.06383409, -1.53525298,  0.06640132,  0.09020946, -0.06529382,
        0.02050781, -0.10263158,  0.384218  ]), ['0']]
[array([ 0.07185805, -1.53525298,  0.02376761, -1.53525298, -0.1374542 ,
       -0.0217782 , -1.53525298,  0.10540133,  0.06847516,  0.04231268,
        0.02021484,  0.        ,  0.38489585]), ['0']]
[array([ 0.33719982,  0.05972083,  0.08643448, -1.53525298,  0.05183854,
        0.12758434,  0.12086626,  0.12342615,  0.07940638, -0.00536157,
        0.01914063, -0.20928092,  0.38023461]), ['0']]
[array([ 0.42304881,  0.16830137,  0.08434157, -0.01038708,  0.10781854,
        0.18107914,  0.06098978,  0.18281039,  0.17588681,  0.01589346,
        0.01337891, -0.26644988,  0.38066039]), ['0']]
[array([ 0.29491075,  0.07372849,  0.13673132, -1.53525298,  0.11476497,
        0.15153135,  0.12195703,  0.1332008 ,  0.1252541 ,  0.04067405,
        0.0203125 , -0.10263158,  0.38129134]), ['0']]
[array([ 0.39000039,  0.15534224,  0.10390629, -1.53525298,  0.05434333,
        0.06444159,  0.04351238,  0.1142641 ,  0.13450049, -0.01021401,
        0.01503906, -0.1151933 ,  0.38055433]), ['0']]
[array([ 0.43800226,  0.17121396, -1.53525298,  0.09291246,  0.07661772,
        0.1326751 ,  0.12589156,  0.1308602 ,  0.09852976, -0.01262743,
        0.01025391,  0.6872422 ,  0.3713648 ]), ['0']]
[array([ 0.37327285,  0.1561582 ,  0.14795867, -0.01269335,  0.03598666,
        0.03334088,  0.07953449,  0.13144445,  0.12198716, -0.07013898,
        0.00986328, -0.29598854,  0.37991251]), ['0']]
[array([ 0.49119307,  0.21721302, -1.53525298, -1.53525298,  0.01025323,
        0.01397952,  0.11516063,  0.05453293,  0.06931533, -0.0092069 ,
        0.00664062, -0.26355627,  0.35611759]), ['0']]
[array([ 0.374864  ,  0.15524121, -1.53525298, -1.53525298, -0.08433544,
        0.06188914,  0.03108774,  0.11427818,  0.06926878, -0.01687491,
        0.00791016, -0.42212759,  0.37859968]), ['0']]
[array([ 0.48352089,  0.33922371,  0.14853189, -1.53525298, -0.05921868,
       -0.01740479,  0.08380317, -0.04538925, -0.01902602, -0.19025634,
        0.00488281, -0.20783408,  0.28170693]), ['0']]
[array([ 0.3840381 ,  0.15390603, -1.53525298, -1.53525298, -0.17497241,
       -1.53525298, -1.53525298,  0.04665138, -0.02780161, -0.15770493,
        0.00849609, -0.30962237,  0.36235723]), ['0']]
[array([ 0.52086651,  0.18293728, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -0.0443529 , -0.04217268,  0.02154529, -0.05586487,
        0.00361328, -0.19513233,  0.29791499]), ['0']]
[array([ 0.46290195,  0.19793529, -1.53525298, -1.53525298, -0.18297355,
       -0.17434022, -1.53525298,  0.05345109, -0.07278187, -0.08750918,
        0.00449219, -0.29446995,  0.2964672 ]), ['0']]
[array([  4.61917021e-01,   7.07446710e-02,  -1.53525298e+00,
        -1.53525298e+00,  -4.50631972e-02,  -1.00943073e-01,
         8.46821211e-02,  -9.30279841e-04,   6.64612710e-02,
        -1.13896280e-02,   7.81250000e-03,  -1.02631579e-01,
         3.83330652e-01]), ['0']]
[array([-1.53525298,  0.17194105, -1.53525298, -1.53525298,  0.01338583,
       -0.03468207,  0.02827217,  0.02021597,  0.05839257, -0.02169998,
        0.01738281, -0.3950825 ,  0.37608464]), ['0']]
[array([ 0.16197411,  0.13111612,  0.01506467, -1.53525298,  0.01846655,
       -0.00331246,  0.01030926, -0.15933387,  0.06430614,  0.04676476,
        0.01572266, -0.10263158,  0.38201604]), ['0']]
[array([ 0.40229171,  0.21790638, -1.53525298, -1.53525298,  0.0068245 ,
        0.00875407, -0.04796675,  0.03904908,  0.08113819, -0.04969141,
        0.00917969, -0.52556301,  0.34725736]), ['0']]
[array([ 0.36125976,  0.14572929, -1.53525298, -1.53525298,  0.04643556,
        0.06515125,  0.08074238,  0.07304313,  0.09582297, -0.00830504,
        0.00869141, -0.25213185,  0.37770188]), ['0']]
[array([ 0.30464314,  0.1762941 ,  0.11608203, -1.53525298, -1.53525298,
       -0.09438894, -0.06870351,  0.0492275 ,  0.08999186,  0.03852285,
        0.01240234, -0.29806213,  0.38129134]), ['0']]
[array([ 0.26734665,  0.19496578, -0.0344994 ,  0.00957881, -0.03336726,
        0.0036658 ,  0.05808626,  0.00747869,  0.10078633,  0.00723458,
        0.01386719, -0.11553435,  0.37991251]), ['0']]
[array([ 0.38403412,  0.17905373,  0.0478474 , -1.53525298, -1.53525298,
        0.05879352,  0.01211233,  0.04803297,  0.08484494,  0.03259738,
        0.00957031, -0.68867731,  0.37713118]), ['0']]
[array([ 0.21207024,  0.16449518, -1.53525298,  0.05764382, -1.53525298,
       -0.07942533, -0.02153408,  0.06587216,  0.11056217, -0.00414495,
        0.01142578, -0.20562643,  0.37690079]), ['0']]
[array([-1.53525298,  0.16687849, -1.53525298, -1.53525298, -0.04532495,
       -0.03011136,  0.07177964,  0.06355511,  0.0998047 ,  0.03162795,
        0.00878906, -0.44057992,  0.37980461]), ['0']]
[array([  8.18681088e-02,   1.49867623e-01,   9.06091088e-02,
        -1.53525298e+00,   6.11805361e-02,  -9.65736160e-02,
         4.76538678e-04,   3.02323840e-02,   1.04239809e-01,
        -2.95624802e-02,   1.25976563e-02,  -5.96279914e-01,
         3.79588002e-01]), ['0']]
[array([-1.53525298,  0.16196665,  0.01477817, -1.53525298,  0.0150855 ,
        0.06417439,  0.01769699,  0.05631628,  0.11798443,  0.02297986,
        0.01679687, -0.28514827,  0.3774745 ]), ['0']]
[array([ 0.41444859,  0.20884514,  0.03408483, -1.53525298,  0.04482611,
        0.04069748,  0.0486657 , -0.02635455,  0.08782442,  0.00219412,
        0.01220703, -0.60465555,  0.37278461]), ['0']]
[array([-1.53525298,  0.1852618 ,  0.09209282, -1.53525298,  0.02835748,
        0.04862986, -0.01672091,  0.01555115,  0.09709874, -0.00225483,
        0.01259766, -0.39898728,  0.379588  ]), ['0']]
[array([ 0.21955983,  0.15216706,  0.03989774, -0.02384492,  0.09248599,
        0.01274594,  0.06383668,  0.05828132,  0.12341636,  0.03660298,
        0.01025391, -0.42567612,  0.38129134]), ['0']]
[array([ -1.53525298e+00,   2.03709701e-01,  -1.53525298e+00,
         2.10764601e-02,  -1.57356885e-04,   4.83055837e-02,
         5.05782866e-02,   3.07583173e-02,   9.30770111e-02,
         5.61453335e-02,   1.51367188e-02,  -4.64989338e-01,
         3.74648824e-01]), ['0']]
[array([ 0.38843542,  0.14857523,  0.04195004,  0.08885888,  0.05152309,
       -1.53525298,  0.02373568,  0.02865264,  0.11550214,  0.02979127,
        0.00908203, -0.64206075,  0.38282973]), ['0']]
[array([-1.53525298,  0.18895883,  0.02403264, -0.00882153,  0.03178932,
       -0.11436472,  0.04832966,  0.07773936,  0.1014722 ,  0.04944611,
        0.01171875, -0.2638946 ,  0.37893162]), ['0']]
[array([ 0.26810704,  0.2008049 ,  0.06203342,  0.14341331,  0.05066701,
        0.06566298,  0.09460521,  0.07428209,  0.10757267,  0.01520529,
        0.0109375 , -0.60906361,  0.3774745 ]), ['0']]
[array([ 0.21995583,  0.22402617, -1.53525298, -0.02354395,  0.10456606,
       -1.53525298,  0.03921799,  0.07934817,  0.11996498,  0.03556267,
        0.01884766, -0.68740309,  0.37378881]), ['0']]
[array([-1.53525298,  0.19072025,  0.06872073,  0.00623071,  0.06527095,
        0.01517278,  0.10474707,  0.10933457,  0.15699045,  0.07033227,
        0.02373047, -0.49838859,  0.38313098]), ['0']]
[array([-1.53525298,  0.1889419 ,  0.04151421,  0.0570793 ,  0.02961217,
        0.04286122,  0.02021607,  0.11095493,  0.12511576,  0.03521621,
        0.02060547, -0.78295928,  0.37893162]), ['0']]
[array([-1.53525298,  0.2079007 ,  0.11088262,  0.02662021,  0.08516064,
        0.046366  ,  0.01214238,  0.10299643,  0.13240544,  0.05150169,
        0.02363281,  0.41670445,  0.38044802]), ['0']]
[array([-1.53525298,  0.24488419,  0.10872401,  0.06891109,  0.0133889 ,
       -1.53525298,  0.07215781,  0.0929106 ,  0.15336445,  0.05967173,
        0.02285156, -1.16838527,  0.37893162]), ['0']]
[array([ 0.15245807,  0.21429087,  0.05696361,  0.04040356,  0.05598617,
        0.09643943,  0.08439416,  0.07477466,  0.14534304,  0.0342201 ,
        0.01992187, -0.51793058,  0.38023461]), ['0']]
[array([-1.53525298,  0.23086017,  0.05742835, -0.11783535,  0.03299223,
        0.00650047,  0.05703735,  0.0430607 ,  0.12687233, -0.01768227,
        0.01933594, -0.06881264,  0.37701614]), ['0']]
[array([ 0.14298169,  0.21192874,  0.07862656,  0.07377415, -0.03889099,
       -0.00765412, -0.04358615,  0.07912182,  0.10942062,  0.01400462,
        0.01962891, -0.48950622,  0.3774745 ]), ['0']]
[array([ -1.68236895e-01,   2.20241477e-01,   1.30250032e-01,
         8.80987344e-02,  -1.97990606e-02,   2.35319700e-05,
         7.02183590e-02,   9.75309614e-02,   1.15524505e-01,
         4.47940344e-02,   2.14843750e-02,  -6.89989017e-01,
         3.74648824e-01]), ['0']]
[array([-1.53525298,  0.26730746,  0.06147477,  0.08760004,  0.03889658,
        0.00871392,  0.03553319,  0.0916073 ,  0.1065486 ,  0.03306675,
        0.02255859, -1.25518074,  0.314321  ]), ['0']]
[array([-1.53525298,  0.23041241,  0.07112684,  0.12265428,  0.04193049,
       -1.53525298, -0.02725286,  0.05855131,  0.09837758,  0.01237352,
        0.01904297, -0.78389694,  0.36170659]), ['0']]
[array([ -1.53525298e+00,   2.62091930e-01,   7.28271436e-02,
        -1.35224055e-03,   6.26872671e-02,   1.68981855e-02,
         3.59868824e-02,   4.28757572e-02,   1.15001582e-01,
        -4.05509873e-02,   1.74804687e-02,  -1.29816551e-01,
         3.04507837e-01]), ['0']]
[array([ -1.53525298e+00,   2.10306425e-01,   5.12331614e-02,
         5.94254561e-02,   6.05772572e-02,  -1.55895741e-01,
         1.22167880e-03,   5.25701229e-02,   3.80560130e-02,
        -5.03716587e-02,   1.78710938e-02,   2.52228793e-01,
         3.24689847e-01]), ['0']]
[array([-1.53525298,  0.22955585,  0.13816989,  0.05319911, -0.01277107,
       -0.10404969,  0.07197811,  0.02715509,  0.05468237, -0.01627106,
        0.01855469, -0.09894233,  0.319382  ]), ['0']]
[array([-1.53525298,  0.26133568,  0.11351736,  0.06637829,  0.06654141,
        0.05140208, -0.13667504,  0.07914478,  0.06173102, -0.05275202,
        0.01962891, -0.6404441 ,  0.30630517]), ['0']]
[array([-1.53525298,  0.25821157,  0.09606336,  0.07386223,  0.01734116,
       -0.03476165,  0.04711185, -0.04172434,  0.06977514, -0.09111538,
        0.01591797, -0.99793855,  0.31076339]), ['0']]
[array([-1.53525298,  0.23533339,  0.1084351 ,  0.1074735 ,  0.05316288,
        0.04215872, -0.00844234,  0.01427496,  0.02029894,  0.02815356,
        0.01660156, -0.63670606,  0.31283185]), ['0']]
[array([-1.53525298,  0.2326729 ,  0.13529851,  0.10436457,  0.08240156,
        0.05100709, -0.02029012,  0.02016089, -0.01998361, -0.01553387,
        0.01279297, -0.68459075,  0.31981414]), ['0']]
Processing recording: car2
00000000000000000000000000000000000000000000000001111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000
[array([  3.54735926e-01,   1.77802749e-01,   9.11409293e-02,
         5.75911355e-02,  -9.94819781e-05,   3.29751182e-03,
        -1.89245164e-02,  -6.15282252e-03,   1.13411603e-02,
        -8.68867217e-02,   6.73828125e-03,  -9.20328863e-02,
         3.28017986e-01]), ['0']]
[array([ 0.40338249,  0.34476843,  0.10670844,  0.06648064,  0.01290606,
       -0.04199421,  0.02439708, -0.04245434, -0.02043848, -0.18331771,
        0.00615234, -0.65355021,  0.28750613]), ['0']]
[array([ 0.42480471,  0.16851311,  0.15476271,  0.12224698,  0.0472251 ,
        0.02040058,  0.08144912,  0.02292053,  0.04487678, -0.04843521,
        0.00771484, -0.86689487,  0.3570397 ]), ['0']]
[array([ 0.38949146,  0.17582745,  0.17883488,  0.14315583,  0.0872767 ,
        0.09771304,  0.07146318,  0.09173689,  0.16032389,  0.03539174,
        0.00761719, -0.6266444 ,  0.38149963]), ['0']]
[array([ 0.18870542,  0.16967275,  0.12917707,  0.11863034,  0.06006957,
        0.06406738,  0.07132578,  0.04405358,  0.06989962, -0.08872986,
        0.00791016, -0.57474709,  0.37188648]), ['0']]
[array([ 0.4184077 ,  0.19606383,  0.16465532,  0.07792083,  0.01326956,
        0.02521376,  0.07727933,  0.03978845,  0.01178898, -0.0674126 ,
        0.00576172,  0.52635901,  0.33209248]), ['0']]
[array([ 0.43383317,  0.25806203,  0.17344096,  0.13966941,  0.06147865,
        0.06177417,  0.09904848,  0.10360555,  0.12779276,  0.11126787,
        0.00439453, -0.74778669,  0.3712334 ]), ['0']]
[array([ 0.47650987,  0.31412329,  0.12968941,  0.0468646 ,  0.03917231,
        0.02198621,  0.00774207,  0.04533804,  0.01948386, -0.20277828,
        0.00390625, -0.78929426,  0.29180959]), ['0']]
[array([ 0.47570852,  0.33063901,  0.16290863,  0.05816466,  0.01910661,
        0.0271207 , -0.07687026, -0.06513299, -0.06388348, -1.53525298,
        0.00419922, -0.49809611,  0.289279  ]), ['0']]
[array([ 0.44829212,  0.30302191,  0.15398951,  0.08804334,  0.02059375,
        0.06528344, -0.00545007,  0.02310921,  0.00858177, -0.04976118,
        0.00419922, -1.45302594,  0.29791499]), ['0']]
[array([ 0.48009345,  0.29341184,  0.08832251, -0.00288547,  0.02452638,
        0.01245232, -0.02275068, -0.00801904, -0.05350036, -0.27357237,
        0.00322266, -1.00058894,  0.29862117]), ['0']]
[array([ 0.48461162,  0.29403106,  0.13813027,  0.10321725, -0.00400211,
       -0.14103631, -0.07891988, -0.00659865, -0.05664934, -0.22912196,
        0.00292969, -0.19016949,  0.29862117]), ['0']]
[array([ 0.46678962,  0.28856645,  0.14123931,  0.05882136,  0.06108962,
        0.01786735,  0.02063304,  0.03700321, -0.00630958, -0.1548699 ,
        0.00214844, -0.88047857,  0.29098234]), ['0']]
[array([ 0.40245179,  0.19978904,  0.22117958,  0.15185838,  0.06634621,
        0.06051559,  0.11022052,  0.05093021,  0.02211853, -0.13531938,
        0.003125  , -0.64899492,  0.33368348]), ['0']]
[array([ 0.35302326,  0.22845382,  0.16559145,  0.11690195,  0.02812625,
        0.00206201,  0.00581632, -0.01383987, -0.04214089, -1.53525298,
        0.00341797,  0.81755648,  0.32191259]), ['0']]
[array([ 0.45358752,  0.23233977,  0.19119789,  0.07341865,  0.03420463,
        0.07466914, -0.0346449 , -0.004498  , -0.0261858 , -0.19978512,
        0.00195312, -0.18871777,  0.32150093]), ['0']]
[array([ 0.36967289,  0.16339552,  0.11905078,  0.09853212,  0.07818389,
        0.01552433, -0.03933978,  0.00986792, -0.02280425, -0.18246255,
        0.00673828, -0.81390467,  0.34006459]), ['0']]
[array([ 0.45857325,  0.24779336,  0.07499845,  0.05361858,  0.02025547,
       -0.02715435, -0.09365522, -0.039224  , -0.07642779, -0.10068332,
        0.00576172, -0.70158661,  0.30198948]), ['0']]
[array([ 0.49192313,  0.15412781,  0.14908414,  0.07022204,  0.0022687 ,
        0.0108028 , -0.07703572, -0.00860792, -0.06605266, -0.17574767,
        0.00371094, -0.6344962 ,  0.32766054]), ['0']]
[array([-0.08794728,  0.17069844,  0.14625981,  0.07356591,  0.01846055,
        0.03099396, -0.00409813,  0.03915233,  0.03273048, -0.1240104 ,
        0.00488281, -1.48189379,  0.35201559]), ['0']]
[array([ 0.1902    ,  0.16343334,  0.17763867,  0.12740197,  0.06176443,
        0.01762353,  0.015212  ,  0.0391393 , -0.01707001, -0.12397234,
        0.00595703,  0.41855204,  0.33785115]), ['0']]
[array([-1.53525298,  0.15618077,  0.11196182,  0.08955844,  0.00292049,
        0.06265556,  0.02907952,  0.03668211,  0.04108026, -0.18542695,
        0.00898437,  0.72965218,  0.3673827 ]), ['0']]
[array([ 0.18954028,  0.17078516,  0.13644531,  0.10927119,  0.02243221,
        0.04837733, -0.02620659,  0.02920161,  0.02205891, -0.13625351,
        0.00644531, -1.0427303 ,  0.34393327]), ['0']]
[array([ 0.25834272,  0.13084179,  0.16596161,  0.08427244,  0.0804695 ,
        0.04980866, -0.0347811 ,  0.03219689,  0.00127088, -0.1937313 ,
        0.00576172, -0.72966923,  0.34793773]), ['0']]
[array([ 0.41887941,  0.1689767 ,  0.14231782,  0.08666991,  0.04835578,
        0.02977624,  0.00667179,  0.02264371,  0.02150481, -0.08406719,
        0.00644531, -0.63211097,  0.34417933]), ['0']]
[array([ 0.36592953,  0.15459573,  0.15849328,  0.0867232 ,  0.01080231,
        0.01373901,  0.03654016,  0.04129227,  0.00126159, -0.06013775,
        0.0046875 ,  0.10828046,  0.34991714]), ['0']]
[array([-1.53525298,  0.174947  ,  0.12257501,  0.13343955,  0.05191795,
        0.01937828, -0.06630723,  0.0330851 ,  0.00704131, -0.05217305,
        0.00654297, -0.06796747,  0.33670063]), ['0']]
[array([ 0.41151072,  0.17684253,  0.1745571 ,  0.14685229,  0.0806915 ,
        0.03746745, -0.00957831,  0.01769512,  0.04791727, -0.0728003 ,
        0.00517578, -0.48131498,  0.34538914]), ['0']]
[array([-0.1700427 ,  0.15745006,  0.14837208,  0.10717097,  0.01018541,
        0.07301911, -0.0256848 ,  0.01639838,  0.01533924, -0.06069273,
        0.00966797,  0.37286977,  0.34860761]), ['0']]
[array([ -1.53525298e+00,   1.57485179e-01,   9.72890864e-02,
         9.08908981e-02,   5.53037947e-02,   5.36983411e-02,
         5.54865988e-02,   4.74936448e-02,   1.39938336e-03,
        -5.67643531e-02,   1.18164062e-02,  -7.56058765e-01,
         3.56488789e-01]), ['0']]
[array([-0.0737701 ,  0.12196518,  0.16976863,  0.09020474,  0.06710585,
        0.05576398,  0.01802717,  0.04232788,  0.02628041, -0.06910049,
        0.01025391, -0.43344142,  0.36425263]), ['0']]
[array([  7.83776029e-03,   1.83204826e-01,   1.51265139e-01,
         9.82931738e-02,   2.94737359e-02,   3.29895672e-02,
        -1.24092940e-03,   4.78213828e-02,  -4.41468732e-04,
        -4.74450956e-02,   1.27929687e-02,  -7.80766094e-01,
         3.34303914e-01]), ['0']]
[array([-1.53525298,  0.15224473,  0.13230631,  0.10167072,  0.0654931 ,
        0.0364273 ,  0.01273991,  0.04343886, -0.00700255, -0.13274559,
        0.01064453, -0.03147035,  0.35139663]), ['0']]
[array([ 0.33203303,  0.1521082 ,  0.09748544,  0.0842807 ,  0.03385562,
        0.00862686,  0.01293881,  0.06103943,  0.01076066, -0.07364844,
        0.00595703, -0.4481643 ,  0.36547179]), ['0']]
[array([ 0.21997136,  0.1803482 ,  0.15070758,  0.12780124,  0.03955596,
        0.04792383, -0.06126564, -0.01268699,  0.02540853, -0.04019387,
        0.00830078, -0.65146436,  0.33581729]), ['0']]
[array([ -1.53525298e+00,   1.78371042e-01,   9.30832413e-02,
         1.35668887e-01,   3.34423032e-02,   6.57678605e-02,
        -1.35126001e-03,   4.24512672e-02,  -1.03700189e-02,
        -9.69759577e-02,   8.00781250e-03,   2.29965523e+00,
         3.38971968e-01]), ['0']]
[array([ 0.37377637,  0.17678153,  0.15206043,  0.13976133,  0.02962121,
        0.07781554,  0.00379146,  0.0162299 , -0.00716207, -0.11661981,
        0.00585938, -0.95737676,  0.33785115]), ['0']]
[array([ 0.04340898,  0.17799592,  0.13096003,  0.0329073 ,  0.0372623 ,
        0.03798887, -0.05219487,  0.06829176,  0.01766595, -0.0353388 ,
        0.01035156, -0.27059306,  0.35201559]), ['0']]
[array([-1.53525298,  0.1385562 ,  0.10564725,  0.11976203,  0.0622632 ,
        0.08453825,  0.05336254,  0.0485675 ,  0.04345504, -0.05420823,
        0.01503906, -0.43775505,  0.3712334 ]), ['0']]
[array([-0.1270854 ,  0.16863074,  0.12099155,  0.12431131,  0.08051446,
        0.08912119,  0.03851974,  0.02861348,  0.00493233, -0.0617389 ,
        0.01259766, -0.30153654,  0.34991714]), ['0']]
[array([  2.72977444e-01,   1.87227361e-01,   1.37852937e-01,
         1.35360007e-01,  -6.89131357e-04,   3.32766293e-02,
         7.91038778e-02,   4.36215524e-02,   5.03347331e-02,
        -2.24958823e-02,   9.66796875e-03,  -6.98043708e-01,
         3.56117595e-01]), ['0']]
[array([ 0.29902921,  0.14514208,  0.12956809,  0.14414254,  0.08835703,
        0.03141614,  0.02087001,  0.06040075,  0.02844409, -0.07567905,
        0.01025391, -0.54572943,  0.36501861]), ['0']]
[array([ -1.53525298e+00,   1.91564922e-01,   9.24537989e-02,
         1.36706257e-01,   6.78042490e-02,   3.02742573e-02,
         3.45547662e-02,   7.39472181e-02,   6.37751538e-02,
         3.53865646e-04,   1.44531250e-02,  -8.23072205e-01,
         3.67811987e-01]), ['0']]
[array([-1.53525298,  0.14640977,  0.08147132,  0.18632325,  0.10526579,
        0.108527  ,  0.06205052,  0.14338289,  0.10675383, -0.06986502,
        0.01621094,  0.96689002,  0.37278461]), ['0']]
[array([-1.53525298,  0.16850411,  0.17900385,  0.12219541,  0.07250576,
        0.04057555,  0.0341549 ,  0.0341001 ,  0.00293146, -0.10024638,
        0.01191406, -0.2267788 ,  0.33869446]), ['0']]
[array([-1.53525298,  0.15289304,  0.17722795,  0.12268308,  0.07290915,
        0.12128004,  0.05355879,  0.13182822,  0.16865675,  0.15397126,
        0.02128906, -0.50834065,  0.38508759]), ['0']]
[array([-1.53525298,  0.16926605,  0.169455  ,  0.14666317,  0.04504575,
        0.09490999,  0.05526582,  0.08273557,  0.14751179,  0.11972843,
        0.01630859, -0.29405551,  0.38392423]), ['0']]
[array([-1.53525298,  0.16814149,  0.13573209,  0.13687932,  0.07629035,
        0.02566742, -0.00266802,  0.01109683,  0.08102415,  0.02016452,
        0.01298828, -0.496157  ,  0.37980461]), ['0']]
[array([-0.08914366,  0.1943459 ,  0.12993137,  0.08779174,  0.05819482,
        0.03864238,  0.00413882,  0.02526879,  0.04794469, -0.20044134,
        0.01357422, -0.46968732,  0.34006459]), ['0']]
[array([-1.53525298,  0.12496128,  0.1596636 ,  0.08128379,  0.0422631 ,
        0.05296712, -0.00685622, -0.02500066,  0.02959818, -0.17691981,
        0.01269531, -0.61437316,  0.36267893]), ['0']]
[array([-1.53525298,  0.19035079,  0.1324718 ,  0.08613334,  0.17452746,
        0.15265255,  0.09685553,  0.09658404,  0.15606322,  0.11139255,
        0.01210938, -0.85228496,  0.38293038]), ['0']]
[array([-1.53525298,  0.14899451,  0.15430893,  0.10651269,  0.04438319,
        0.05126944, -0.02282037,  0.01953508,  0.04173152, -0.25814608,
        0.01054688, -0.36403827,  0.36283889]), ['0']]
[array([-1.53525298,  0.17540555,  0.13862761,  0.09399512,  0.00451651,
        0.01158838,  0.01703931, -0.04288508,  0.02356752, -0.02208315,
        0.01240234, -0.876395  ,  0.33368348]), ['0']]
[array([-1.53525298,  0.18053222,  0.14349435,  0.11248878,  0.01634131,
        0.04442414, -0.0515198 , -0.03079718,  0.01388858, -0.0428276 ,
        0.01601562, -0.69318553,  0.33368348]), ['0']]
[array([-1.53525298,  0.15613158,  0.15468434,  0.1119195 ,  0.04168508,
        0.01414745,  0.00419122,  0.0152457 ,  0.03731434, -0.15471835,
        0.01474609, -0.5969011 ,  0.35302798]), ['0']]
[array([-1.53525298,  0.15050958,  0.11041326,  0.05001304,  0.07959551,
        0.0084284 , -0.00278031,  0.03729968,  0.08879682, -0.06485432,
        0.01435547, -0.97902099,  0.37713118]), ['0']]
[array([-1.53525298,  0.17130873,  0.15079489,  0.06045165,  0.06534748,
        0.01823597,  0.03666738,  0.0205862 ,  0.05814387, -0.04170231,
        0.01523437, -0.23729657,  0.36517019]), ['0']]
[array([-0.08057028,  0.14341406,  0.15714014,  0.06892741, -0.03115087,
       -0.01746023,  0.02698972,  0.02983684,  0.0477171 , -0.11433324,
        0.01162109, -0.53860472,  0.37149581]), ['0']]
[array([ 0.05560078,  0.17043696,  0.13180631,  0.01124892,  0.07289237,
        0.01409959, -0.05430053,  0.08505907,  0.10494712,  0.01441495,
        0.01474609,  0.14515324,  0.37724592]), ['0']]
[array([ 0.13286588,  0.18012541,  0.16223114, -0.03461202,  0.04107406,
        0.03307708,  0.06264293,  0.06070094,  0.09271592, -0.05525672,
        0.01376953, -0.73022355,  0.37736036]), ['0']]
[array([ 0.07059282,  0.21374206,  0.20475431,  0.03812032,  0.03233204,
        0.08661798,  0.04114191,  0.09511276,  0.11778387,  0.05459619,
        0.01826172, -1.05587593,  0.37549214]), ['0']]
[array([ 0.00079473,  0.19905072,  0.07496774,  0.02511997,  0.05629809,
       -0.02115148,  0.01211862,  0.03752549,  0.09704309, -0.03455655,
        0.01650391, -0.67112366,  0.37537267]), ['0']]
[array([ 0.21833242,  0.19167914, -0.160475  , -0.08035982,  0.02625046,
        0.03684473,  0.03288532,  0.00970173,  0.04247949, -0.31536292,
        0.01308594, -0.70603821,  0.34086639]), ['0']]
[array([-0.20317434,  0.19011469,  0.06733778, -0.01108928,  0.0490212 ,
       -0.02665852,  0.00221161, -0.01883913,  0.0202138 , -0.19440648,
        0.01171875, -0.83422692,  0.31383027]), ['0']]
[array([ 0.12780671,  0.20741518,  0.0640808 ,  0.02480136,  0.05209253,
        0.00800008,  0.01954723,  0.06554516,  0.06585919, -0.04444126,
        0.01220703,  0.11590668,  0.36037531]), ['0']]
[array([ 0.17052693,  0.19973636,  0.09026889,  0.06417845,  0.04183439,
       -1.53525298, -0.01014811, -0.01806807, -0.00495115, -0.11326921,
        0.01132812, -0.62474177,  0.30450784]), ['0']]
[array([ 0.10054572,  0.18363927, -0.02033301, -0.04252877,  0.0418532 ,
        0.03916413, -0.00570673,  0.00907038,  0.01349983, -0.25367578,
        0.00917969, -0.74399928,  0.31669479]), ['0']]
[array([ 0.17969846,  0.16787011,  0.03134482,  0.03644072,  0.0082893 ,
        0.02085911,  0.03690248, -0.00529515,  0.05090655, -0.05363029,
        0.01220703, -0.61954401,  0.37110159]), ['0']]
[array([-1.53525298,  0.09689243,  0.01607481,  0.07438265,  0.10296998,
        0.06531112,  0.03790957,  0.06982147,  0.08239628, -0.0803321 ,
        0.01582031, -0.32311408,  0.37770188]), ['0']]
[array([ 0.15188123,  0.17941429,  0.12089245,  0.12950265,  0.15211698,
        0.1266117 ,  0.11525735,  0.1281378 ,  0.14015601, -0.04414395,
        0.01816406,  0.6091562 ,  0.37904171]), ['0']]
[array([ 0.17682511,  0.16953638,  0.01867248,  0.00895027,  0.06235095,
        0.03008472, -0.03416785, -0.00597771,  0.02907661, -0.20920589,
        0.01767578, -0.46677905,  0.349485  ]), ['0']]
[array([ 0.12994769,  0.17919199,  0.09619849,  0.07424002,  0.03760923,
       -0.00830461,  0.02593397,  0.03880302,  0.08391429, -0.05706941,
        0.01455078, -0.7209408 ,  0.37713118]), ['0']]
[array([ 0.16021147,  0.1734621 ,  0.0676355 ,  0.04209713,  0.04154205,
       -0.02994626,  0.04317237,  0.03201035,  0.06169231, -0.08394963,
        0.01162109, -0.2093755 ,  0.37265744]), ['0']]
[array([  1.94191677e-01,   1.96424699e-01,   2.90611535e-02,
        -9.84437097e-03,   7.26100242e-02,   3.93273662e-02,
         2.91805132e-02,  -4.42609399e-04,   1.78986978e-02,
        -2.07389251e-01,   1.29882813e-02,   7.85755023e-01,
         3.06888129e-01]), ['0']]
[array([ 0.14239582,  0.2017809 ,  0.06111635, -0.0340829 ,  0.07263537,
        0.03565837,  0.03767016, -0.00785492,  0.04213218, -0.19264997,
        0.01835938, -0.01223161,  0.31894552]), ['0']]
[array([ 0.28735597,  0.18383601,  0.109331  , -0.01384122,  0.03408487,
       -0.07200526,  0.03860764,  0.03590419,  0.04270119, -0.10014156,
        0.01455078,  1.41347069,  0.35498459]), ['0']]
[array([ 0.19884831,  0.14664119,  0.0534032 ,  0.05484624,  0.0548824 ,
        0.01603023,  0.03764231,  0.04337167,  0.07455195, -0.13788472,
        0.01650391, -0.8525712 ,  0.37724592]), ['0']]
[array([ 0.27984217,  0.16771212,  0.09525578,  0.06210813,  0.07895654,
        0.03244694,  0.0371858 ,  0.04686061,  0.0555507 , -0.17376216,
        0.0109375 , -0.38551717,  0.37391271]), ['0']]
[array([ 0.24091337,  0.16963494,  0.10585203,  0.05999222,  0.02923622,
        0.02350432,  0.06461852,  0.03857755,  0.05953451, -0.17063108,
        0.01240234, -0.6818264 ,  0.37201593]), ['0']]
[array([ 0.28972256,  0.20500939, -0.00101006,  0.10025361,  0.05384653,
        0.0479115 ,  0.06111669,  0.03316273,  0.05757773, -0.08835974,
        0.01513672, -0.35107858,  0.34514986]), ['0']]
[array([ 0.3213938 ,  0.15619084,  0.10355757,  0.03122182,  0.06948104,
        0.01418442,  0.09499114,  0.04598424,  0.06568063, -0.11818374,
        0.01308594,  0.92439904,  0.37525286]), ['0']]
[array([ 0.29289915,  0.14753354,  0.12131003,  0.09303564,  0.03425097,
        0.01664239,  0.05435253,  0.05052618,  0.05327979, -0.10177951,
        0.01318359,  0.35972533,  0.37328961]), ['0']]
[array([ 0.22555516,  0.12678216,  0.05653635,  0.11086169,  0.05636243,
        0.06413553,  0.0437808 ,  0.04824863,  0.03163398, -0.07679742,
        0.01376953, -0.33573929,  0.37016759]), ['0']]
[array([ 0.30325602,  0.14767233,  0.10729117,  0.03021355,  0.07027512,
        0.07615556,  0.07722875,  0.03982938,  0.05195779, -0.13179412,
        0.01386719, -0.56876965,  0.37513272]), ['0']]
[array([ 0.27976207,  0.17226256,  0.11800281,  0.10321021,  0.03085311,
        0.00194627,  0.02062613,  0.0443556 ,  0.0384559 , -0.05680582,
        0.01162109, -0.34909341,  0.36251838]), ['0']]
[array([ 0.32661772,  0.19741876,  0.15829253,  0.12600084,  0.01963341,
       -0.00320514,  0.02586683,  0.02089028,  0.08459976, -0.10750154,
        0.00966797, -0.91765025,  0.3712334 ]), ['0']]
[array([ 0.36309383,  0.18534245,  0.08433545,  0.01580694,  0.03563398,
        0.04062695,  0.03163841,  0.03292989,  0.04862096, -0.04599582,
        0.00761719, -0.06545084,  0.35934937]), ['0']]
[array([ 0.33836866,  0.16170703,  0.09759938,  0.09008386,  0.0997593 ,
        0.01231818,  0.07368205,  0.03684789,  0.03886757, -0.14601573,
        0.01230469, -0.75616296,  0.36378648]), ['0']]
[array([ 0.30390987,  0.18058517,  0.1146021 ,  0.1033661 ,  0.06597951,
        0.01747399,  0.05729026,  0.03661901,  0.03737546, -0.06475784,
        0.00859375, -0.60677312,  0.3566732 ]), ['0']]
[array([ 0.42010316,  0.18485056,  0.06293807,  0.07010581,  0.04570491,
       -0.02870955,  0.00550302,  0.01909448,  0.08173481,  0.01114788,
        0.0078125 ,  0.27200249,  0.37678513]), ['0']]
[array([ 0.41502182,  0.18603813,  0.13721828,  0.02830655, -0.03237881,
        0.08385038,  0.04441111,  0.05596358,  0.06152771, -0.06287613,
        0.00615234,  0.91473177,  0.36486649]), ['0']]
[array([ 0.36696569,  0.17539121,  0.13085709,  0.08978801, -0.03041374,
       -0.04390642, -0.00790867,  0.03448286,  0.05206581, -0.10290318,
        0.00693359, -0.5541378 ,  0.36299827]), ['0']]
[array([ 0.19814911,  0.19365227,  0.03817112, -0.0025718 ,  0.04540403,
        0.05921576,  0.03814117,  0.06239396,  0.06605554, -0.03882116,
        0.01494141, -0.75346816,  0.3656218 ]), ['0']]
[array([ 0.30994853,  0.17221817,  0.09275688,  0.07608403, -0.00665368,
       -0.00176206,  0.04031658,  0.04234485,  0.03733651, -0.03900919,
        0.00849609, -0.46219004,  0.36299827]), ['0']]
[array([ 0.32073041,  0.17706319,  0.12575282,  0.07701751,  0.04402162,
        0.03379814,  0.02866305,  0.01213375,  0.06648074, -0.09699723,
        0.00888672,  1.18402339,  0.37227367]), ['0']]
[array([ 0.3019117 ,  0.20392039,  0.10258378,  0.09531852,  0.09199206,
       -0.0150544 ,  0.04508898,  0.04010989,  0.07500535, -0.05071192,
        0.01044922, -0.37589936,  0.36219548]), ['0']]
[array([ 0.31554543,  0.18088049,  0.11443311,  0.09523039,  0.04503048,
        0.02873065,  0.05300508,  0.02612858,  0.04686775, -0.10555022,
        0.01035156, -0.90952875,  0.35498459]), ['0']]
[array([ 0.28175578,  0.17137748,  0.08968589,  0.08020812,  0.11393288,
        0.02943136,  0.04473011,  0.0528652 ,  0.05385071, -0.04234261,
        0.01074219, -0.0126166 ,  0.36948793]), ['0']]
[array([ 0.265423  ,  0.15977852,  0.08122576,  0.08305263, -0.01477249,
        0.00680793,  0.01811252,  0.0146477 ,  0.05881254, -0.02515937,
        0.00869141,  2.46188802,  0.37596678]), ['0']]
[array([ 0.24012461,  0.19301267,  0.02182473,  0.02313726,  0.08232029,
        0.00645729,  0.02345511,  0.05638925,  0.05354874, -0.04994494,
        0.01064453,  2.87852373,  0.3615424 ]), ['0']]
[array([ 0.31186998,  0.15615469,  0.10407036,  0.06725365,  0.0300756 ,
       -0.00079997,  0.05580589,  0.05640374,  0.06117746, -0.0633717 ,
        0.00800781, -0.20624287,  0.37549214]), ['0']]
[array([ 0.22158646,  0.1595955 ,  0.10375039,  0.11997114,  0.03382173,
       -0.02559292,  0.04143644,  0.05331226,  0.03077224, -0.03822766,
        0.00869141, -0.40419991,  0.3673827 ]), ['0']]
[array([ 0.31306042,  0.1730909 ,  0.08636649,  0.06962466,  0.03972719,
        0.06511108,  0.06951406,  0.04420797,  0.07586766, -0.02464169,
        0.01181641,  0.2628663 ,  0.37770188]), ['0']]
[array([ 0.3207995 ,  0.16696057,  0.10254534,  0.06844901,  0.07569859,
        0.00671633,  0.01759325,  0.05464708,  0.05395962, -0.06043473,
        0.01074219, -0.80998764,  0.37016759]), ['0']]
[array([ 0.27184553,  0.12552402,  0.12077044,  0.09545616,  0.08566737,
        0.04172063,  0.01251017,  0.04149679,  0.06593633, -0.05908073,
        0.01386719,  0.80320169,  0.37947929]), ['0']]
[array([ 0.2679013 ,  0.19606364,  0.13921567,  0.07102924,  0.06466827,
       -0.05067684,  0.01420926,  0.07018061,  0.0640863 , -0.02971169,
        0.01123047, -0.59183172,  0.36251838]), ['0']]
[array([ 0.23461173,  0.19833738,  0.11145377,  0.10777707,  0.05060404,
        0.04849901,  0.04244046,  0.06894867,  0.08103181, -0.04381475,
        0.01416016, -0.89329762,  0.37003251]), ['0']]
[array([ 0.21037587,  0.1526794 ,  0.12878954,  0.11366522,  0.05299806,
        0.06438258,  0.07696761,  0.04868421,  0.07334264, -0.06488174,
        0.01347656, -0.15820789,  0.37655289]), ['0']]
[array([ 0.17208345,  0.16253779,  0.13761423,  0.09086207,  0.07446364,
        0.04035264,  0.0509914 ,  0.07734827,  0.07026775, -0.04460063,
        0.01601562, -0.42183152,  0.37561129]), ['0']]
[array([ 0.3168306 ,  0.17123337,  0.14084256,  0.08459008,  0.06050308,
        0.0025266 ,  0.03799635,  0.06184729,  0.06992141, -0.03583376,
        0.01367188, -0.75341432,  0.37096939]), ['1']]
[array([ 0.1785222 ,  0.17945828,  0.10635182,  0.07291742,  0.05991331,
        0.05032098,  0.03436303,  0.06604664,  0.06921974, -0.068233  ,
        0.01748047, -0.30923252,  0.37278461]), ['1']]
[array([ 0.21803772,  0.20485245,  0.14085164,  0.01123167,  0.07140299,
        0.05440412,  0.02218015,  0.07107474,  0.07635351, -0.05150833,
        0.01533203, -0.37088169,  0.36331527]), ['1']]
[array([ 0.15880973,  0.1835404 ,  0.1728809 ,  0.12214434,  0.08284961,
        0.04498392,  0.05260141,  0.06083873,  0.06961067, -0.03593574,
        0.01591797, -0.65813586,  0.36592029]), ['1']]
[array([ 0.20487019,  0.17894161,  0.16555189,  0.10596175,  0.09321642,
        0.04522131,  0.01873325,  0.05289656,  0.08463869, -0.01542117,
        0.01552734, -1.11831726,  0.37440484]), ['1']]
[array([ 0.27630773,  0.17078295,  0.19433605,  0.08070171,  0.09783257,
        0.08057905,  0.02019794,  0.05978276,  0.09882929, -0.04172668,
        0.01464844, -0.73537765,  0.37415947]), ['1']]
[array([ 0.1884238 ,  0.19524503,  0.1825062 ,  0.10594965,  0.10372432,
        0.07203165,  0.0235289 ,  0.07712816,  0.11103548, -0.01419811,
        0.02353516,  1.43632261,  0.37724592]), ['1']]
[array([ 0.25906765,  0.18636874,  0.20567464,  0.09614292,  0.07278548,
        0.10648937,  0.01131898,  0.06090691,  0.11937277, -0.02020823,
        0.02060547, -0.34007638,  0.37678513]), ['1']]
[array([ 0.21615263,  0.18731024,  0.17171007,  0.11874801,  0.09618806,
        0.07149416,  0.03930525,  0.0747547 ,  0.10632327, -0.05319577,
        0.01875   ,  2.04084607,  0.37584861]), ['1']]
[array([ 0.27570713,  0.19618888,  0.19853571,  0.12753599,  0.02054703,
        0.04779823,  0.07626996,  0.05265517,  0.08104674, -0.02380408,
        0.01464844, -0.16920166,  0.35969405]), ['1']]
[array([ 0.21115109,  0.21761828,  0.14364182,  0.11249345,  0.04177668,
        0.05692655, -0.0198507 ,  0.04831687,  0.09079337, -0.00076263,
        0.01542969,  0.17907634,  0.36251838]), ['1']]
[array([ 0.25364962,  0.18875923,  0.15520059,  0.14703252,  0.07716842,
        0.04881207,  0.07118907,  0.09111866,  0.08794618, -0.03902996,
        0.01708984, -0.54493664,  0.37016759]), ['1']]
[array([ 0.18564709,  0.21248908,  0.16653736,  0.14501986,  0.07826581,
        0.09376185,  0.1151556 ,  0.05028967,  0.08264231, -0.02718058,
        0.01865234, -0.72134011,  0.35722179]), ['1']]
[array([ 0.25476138,  0.21267264,  0.18564543,  0.16152182,  0.09488925,
        0.0993872 ,  0.07420365,  0.08066795,  0.09274964, -0.07331171,
        0.01757812,  2.98807474,  0.36267893]), ['1']]
[array([ 0.28844585,  0.21501518,  0.16812642,  0.1717014 ,  0.0581575 ,
        0.08401228,  0.10607107,  0.08717077,  0.09266579, -0.01221133,
        0.01601562, -1.23252143,  0.36203313]), ['1']]
[array([ 0.24972796,  0.17205241,  0.11060111,  0.18412089,  0.07122583,
        0.09802963,  0.10796069,  0.07634252,  0.09134557, -0.02957647,
        0.01972656, -0.78770448,  0.37252989]), ['1']]
[array([ 0.18872847,  0.2225355 ,  0.17155914,  0.18166613,  0.13192268,
        0.07833962,  0.0908102 ,  0.09539022,  0.10316555, -0.00912199,
        0.01884766, -0.79768   ,  0.36203313]), ['1']]
[array([ 0.21536352,  0.20409338,  0.17012592,  0.18867135,  0.10829545,
        0.07115279,  0.05827641,  0.11519509,  0.08520981, -0.02154414,
        0.01855469, -0.76730798,  0.36471384]), ['1']]
[array([ 0.29018879,  0.20897498,  0.15275791,  0.15632086,  0.15250086,
        0.08660314, -0.02529863,  0.09751953,  0.05755491, -0.02895087,
        0.01669922,  0.70644776,  0.34991714]), ['1']]
[array([ 0.34631871,  0.21572646,  0.13873121,  0.17167757,  0.13798071,
        0.09415399,  0.10417781,  0.09654791,  0.07861533, -0.0175697 ,
        0.01318359, -0.80689326,  0.359176  ]), ['1']]
[array([ 0.24534966,  0.21976254,  0.12364538,  0.16547632,  0.1753545 ,
        0.09923517,  0.06576664,  0.09644436,  0.08193832, -0.01705674,
        0.01533203, -1.19634562,  0.35517549]), ['1']]
[array([ 0.27629102,  0.22489431,  0.18082493,  0.13780487,  0.15574343,
        0.06014188,  0.09277086,  0.08705498,  0.06434403, -0.01963639,
        0.01328125, -1.4248229 ,  0.3463333 ]), ['1']]
[array([ 0.27590623,  0.19467304,  0.18329965,  0.17110791,  0.15827272,
        0.09441332,  0.08950726,  0.08858361,  0.11240449, -0.01185468,
        0.01640625,  0.15452483,  0.37201593]), ['1']]
[array([ 0.26862468,  0.19489056,  0.19189024,  0.1384013 ,  0.10517027,
        0.0805386 ,  0.06441561,  0.08298734,  0.0810167 , -0.01112256,
        0.01669922, -0.33842308,  0.36547179]), ['1']]
[array([ 0.26438243,  0.22897904,  0.19413165,  0.1910245 ,  0.14841605,
        0.08107612,  0.02608771,  0.08874596,  0.07842431, -0.02474537,
        0.01669922, -0.44740364,  0.34490925]), ['1']]
[array([ 0.23043551,  0.23798955,  0.18484938,  0.20889063,  0.15330364,
        0.12039419,  0.09987925,  0.07284077,  0.10596773, -0.01617122,
        0.01621094,  0.04363144,  0.349485  ]), ['1']]
[array([ 0.29008826,  0.24002844,  0.18573954,  0.17436908,  0.15156866,
        0.11906849,  0.07676317,  0.07547234,  0.09130071, -0.04755887,
        0.01591797, -0.72755803,  0.34702818]), ['1']]
[array([ 0.23076301,  0.22538181,  0.16236797,  0.18113268,  0.18175061,
        0.13955366,  0.09455226,  0.11245225,  0.10301585, -0.0056419 ,
        0.02119141, -0.62699774,  0.36425263]), ['1']]
[array([  2.18116423e-01,   2.55410681e-01,   1.87737981e-01,
         1.81905457e-01,   1.66047163e-01,   1.11750901e-01,
         1.06239348e-01,   8.44450824e-02,   9.29034720e-02,
         2.67772342e-04,   1.75781250e-02,  -7.76753004e-01,
         3.43933269e-01]), ['1']]
[array([ 0.30587465,  0.25250361,  0.18247471,  0.16829574,  0.17811698,
        0.13536528,  0.09153793,  0.08802003,  0.1073114 , -0.01053886,
        0.01318359, -0.21892203,  0.34793773]), ['1']]
[array([ 0.26300128,  0.24885796,  0.16930446,  0.18767524,  0.14118388,
        0.10938505,  0.07189112,  0.0848284 ,  0.10321792, -0.03452978,
        0.01992187,  0.70190333,  0.34318661]), ['1']]
[array([ 0.22807727,  0.24984338,  0.18763549,  0.18531889,  0.13399892,
        0.1267858 ,  0.0571221 ,  0.06885722,  0.10087884, -0.00244544,
        0.01679687, -0.97028324,  0.34318661]), ['1']]
[array([ 0.22223798,  0.23292364,  0.20549697,  0.20670059,  0.15586067,
        0.08971836,  0.08423249,  0.10499149,  0.1118542 ,  0.00831249,
        0.01875   , -0.38248445,  0.35969405]), ['1']]
[array([ 0.31929904,  0.24991016,  0.20691918,  0.18843818,  0.15755698,
        0.12865609,  0.06416303,  0.09023737,  0.09030377,  0.0015287 ,
        0.01484375, -1.18776731,  0.34165365]), ['1']]
[array([ 0.30318976,  0.2557709 ,  0.18720378,  0.19882211,  0.15744082,
        0.11462337,  0.08339395,  0.08800016,  0.09586107, -0.00232482,
        0.01367188, -1.37701634,  0.3411304 ]), ['1']]
[array([ 0.27778317,  0.23732573,  0.2152158 ,  0.1845195 ,  0.15614121,
        0.12819696,  0.10925476,  0.11675612,  0.12306345,  0.02456825,
        0.01640625, -0.01529312,  0.36471384]), ['1']]
[array([ 0.26527533,  0.25507547,  0.20403873,  0.19183231,  0.15461154,
        0.09289067,  0.082274  ,  0.12679111,  0.11084987, -0.01334344,
        0.01660156, -1.16032961,  0.34609918]), ['1']]
[array([ 0.30460216,  0.25835775,  0.21889683,  0.21114803,  0.15796479,
        0.12513105,  0.09771653,  0.12139078,  0.11894119,  0.00707672,
        0.01806641, -0.48582504,  0.34860761]), ['1']]
[array([ 0.29845327,  0.25034927,  0.22788168,  0.22323161,  0.21414048,
        0.1060529 ,  0.11695517,  0.10893126,  0.13066203, -0.00598966,
        0.02099609, -0.73466878,  0.35139663]), ['1']]
[array([ 0.23944474,  0.27457504,  0.2338714 ,  0.21342601,  0.16891061,
        0.10411812,  0.13725697,  0.14617048,  0.10353247,  0.03398815,
        0.01865234, -1.38410746,  0.34318661]), ['1']]
[array([ 0.27308527,  0.26466476,  0.22341361,  0.22659902,  0.17396279,
        0.0966003 ,  0.11538139,  0.13658152,  0.11855185,  0.01292439,
        0.01591797, -0.25974417,  0.34490925]), ['1']]
[array([ 0.2888052 ,  0.2922037 ,  0.23503976,  0.23535032,  0.20154373,
        0.13269348,  0.11121758,  0.12279659,  0.10855603,  0.02469902,
        0.01708984, -1.32852692,  0.33897197]), ['1']]
[array([ 0.30827391,  0.25137143,  0.22333838,  0.20818895,  0.2107392 ,
        0.11996592,  0.13168098,  0.1417084 ,  0.11973733,  0.00976827,
        0.01787109, -0.9710849 ,  0.35900194]), ['1']]
[array([ 0.30576578,  0.28994294,  0.24701432,  0.23616575,  0.16189733,
        0.11116065,  0.09441282,  0.12464353,  0.1215884 ,  0.04750197,
        0.01875   , -0.5455082 ,  0.33491561]), ['1']]
[array([ 0.28445032,  0.26978597,  0.24795931,  0.24349281,  0.18300606,
        0.12352184,  0.14113035,  0.14776295,  0.13651605,  0.03279906,
        0.01875   , -0.13082663,  0.35517549]), ['1']]
[array([ 0.34401026,  0.34301561,  0.26661506,  0.26049987,  0.20579975,
        0.10377023,  0.11834504,  0.14404693,  0.13279528,  0.01870517,
        0.01748047, -0.70795539,  0.33110913]), ['1']]
[array([ 0.41365444,  0.30462906,  0.25822701,  0.27566493,  0.20603753,
        0.13254607,  0.14988869,  0.1399299 ,  0.13787566,  0.06625996,
        0.01220703, -0.37837544,  0.33897197]), ['1']]
[array([ 0.3146334 ,  0.29233512,  0.28127439,  0.26426575,  0.19372784,
        0.14314766,  0.18617327,  0.15532331,  0.14826624,  0.07165846,
        0.01923828, -0.76404206,  0.34514986]), ['1']]
[array([ 0.43873828,  0.30103666,  0.28159463,  0.29277289,  0.19834926,
        0.12308126,  0.16243906,  0.16162176,  0.15906554,  0.08942597,
        0.01357422, -0.91763388,  0.34060076]), ['1']]
[array([ 0.3737886 ,  0.26053348,  0.28600117,  0.24518985,  0.20256768,
        0.14683595,  0.17635748,  0.14663626,  0.17256428,  0.06067014,
        0.01347656, -0.94318553,  0.36665765]), ['1']]
[array([ 0.39733734,  0.26171803,  0.30537436,  0.26997377,  0.21577164,
        0.13260995,  0.19101232,  0.15247552,  0.17042332,  0.04290964,
        0.015625  , -0.91168499,  0.35794263]), ['1']]
[array([ 0.39111929,  0.27863249,  0.32063676,  0.30300089,  0.20629905,
        0.16924386,  0.19775482,  0.17477263,  0.17126365,  0.03669007,
        0.01376953, -0.75424471,  0.34882863]), ['1']]
[array([ 0.39241538,  0.26926344,  0.29092812,  0.31249761,  0.20782775,
        0.13437953,  0.17084015,  0.13506655,  0.16721919,  0.06661737,
        0.01552734, -0.54068113,  0.34217067]), ['1']]
[array([ 0.44838988,  0.30443207,  0.29271332,  0.28124659,  0.20752273,
        0.15482499,  0.20010915,  0.14509816,  0.16189679,  0.05289331,
        0.01298828, -1.06047656,  0.34417933]), ['1']]
[array([ 0.41179014,  0.28524743,  0.30420166,  0.31046821,  0.21296281,
        0.16347316,  0.17083653,  0.15392783,  0.16763871,  0.07119256,
        0.01298828, -0.72333962,  0.34242689]), ['1']]
[array([ 0.34100406,  0.31957409,  0.30887618,  0.29729256,  0.21925418,
        0.16244078,  0.17807092,  0.15048716,  0.17212193,  0.04014131,
        0.01953125, -0.98962199,  0.33924771]), ['1']]
[array([ 0.31608917,  0.31000919,  0.34933845,  0.32348396,  0.23397269,
        0.18113161,  0.19498616,  0.13745163,  0.15130383,  0.06356635,
        0.02109375,  0.44032582,  0.33611374]), ['1']]
[array([ 0.37949932,  0.31762819,  0.32647931,  0.32334069,  0.22610469,
        0.16704549,  0.20488988,  0.15456085,  0.18919553,  0.07579516,
        0.01767578, -0.57703194,  0.34006459]), ['1']]
[array([ 0.40624331,  0.32793285,  0.33835028,  0.31347583,  0.19715251,
        0.17936647,  0.23440649,  0.17516817,  0.17893657,  0.07907726,
        0.01591797,  0.13812344,  0.33897197]), ['1']]
[array([ 0.37202621,  0.32535308,  0.3812862 ,  0.33495862,  0.19943926,
        0.16496796,  0.19887137,  0.17699783,  0.20410751,  0.09710356,
        0.01826172, -0.73933398,  0.33521825]), ['1']]
[array([ 0.47076646,  0.34091448,  0.34774778,  0.3112649 ,  0.25886839,
        0.18752548,  0.22217564,  0.1898214 ,  0.20206137,  0.12307624,
        0.01425781, -0.04139086,  0.34343693]), ['1']]
[array([ 0.44835895,  0.3482588 ,  0.37599581,  0.32492739,  0.23842682,
        0.22374239,  0.22124982,  0.1887269 ,  0.23316934,  0.11084218,
        0.01503906, -1.22071662,  0.34191293]), ['1']]
[array([ 0.47554554,  0.32695749,  0.37236226,  0.35163532,  0.24197165,
        0.22197256,  0.21876361,  0.20639395,  0.2385859 ,  0.15316642,
        0.01298828, -0.08790376,  0.35479285]), ['1']]
[array([ 0.43112783,  0.35868169,  0.39364739,  0.33920423,  0.24921744,
        0.22266515,  0.25879753,  0.20152192,  0.24484765,  0.12684733,
        0.01591797, -1.06194589,  0.34217067]), ['1']]
[array([ 0.33082526,  0.35628053,  0.39599796,  0.33521492,  0.27005203,
        0.23069325,  0.26595748,  0.1958575 ,  0.24070303,  0.14948726,
        0.02158203, -0.60944897,  0.34417933]), ['1']]
[array([ 0.44111474,  0.34885555,  0.38983491,  0.31639728,  0.25700871,
        0.22480925,  0.24280247,  0.21475237,  0.23850442,  0.14180584,
        0.01767578, -1.21546333,  0.34586378]), ['1']]
[array([ 0.37812024,  0.33258294,  0.39527186,  0.32442039,  0.28938597,
        0.25772947,  0.23067259,  0.21810186,  0.25721373,  0.12187254,
        0.02236328, -0.46517052,  0.36037531]), ['1']]
[array([ 0.46987244,  0.3625336 ,  0.39680454,  0.31702064,  0.25276885,
        0.22492795,  0.23710834,  0.21323806,  0.24099069,  0.08911322,
        0.01855469, -0.59301186,  0.33813407]), ['1']]
[array([ 0.44870689,  0.3866621 ,  0.41514189,  0.34413172,  0.22670024,
        0.24244095,  0.21859785,  0.24559477,  0.25570142,  0.11151265,
        0.01660156, -0.56092563,  0.33305406]), ['1']]
[array([ 0.39860442,  0.40657716,  0.40013952,  0.32674466,  0.2763912 ,
        0.27345888,  0.24704956,  0.27115515,  0.26979764,  0.14694515,
        0.01748047, -0.03495815,  0.344424  ]), ['1']]
[array([ 0.42974428,  0.40202958,  0.40418491,  0.35523852,  0.25290344,
        0.26137872,  0.26543489,  0.27412068,  0.27547381,  0.16322861,
        0.0171875 , -2.30446028,  0.35282738]), ['1']]
[array([ 0.45189113,  0.40202471,  0.39802438,  0.37144846,  0.29758057,
        0.27806913,  0.28873374,  0.27013264,  0.27522337,  0.19359236,
        0.01845703, -1.29885062,  0.35460025]), ['1']]
[array([ 0.43018113,  0.4064518 ,  0.37653659,  0.35322836,  0.26871825,
        0.28664495,  0.3039046 ,  0.28235384,  0.27182868,  0.1688984 ,
        0.02109375, -0.55640597,  0.3586517 ]), ['1']]
[array([ 0.48713054,  0.41434952,  0.36945102,  0.28078476,  0.2616812 ,
        0.27125283,  0.23141512,  0.24579912,  0.2588709 ,  0.16061406,
        0.01835938, -0.48347323,  0.3372797 ]), ['1']]
[array([ 0.45520837,  0.41790898,  0.3632253 ,  0.32889404,  0.26779536,
        0.26125405,  0.25464978,  0.26045062,  0.26506073,  0.14418869,
        0.01699219, -0.3335571 ,  0.33952172]), ['1']]
[array([ 0.44154691,  0.43013549,  0.38997998,  0.31527276,  0.32598686,
        0.28342055,  0.26419505,  0.28392537,  0.27240938,  0.14650852,
        0.01816406,  0.02317542,  0.34268161]), ['1']]
[array([ 0.48156801,  0.41192341,  0.32811822,  0.32792622,  0.30088853,
        0.28353273,  0.2843571 ,  0.26548432,  0.27622804,  0.1474356 ,
        0.01708984, -0.00904389,  0.35740313]), ['1']]
[array([ 0.42849887,  0.43106201,  0.36223432,  0.32681982,  0.2847794 ,
        0.26475573,  0.26651642,  0.28079324,  0.27958274,  0.1737157 ,
        0.01748047, -0.55623044,  0.34318661]), ['1']]
[array([ 0.42848893,  0.44331757,  0.35908874,  0.30927609,  0.26691497,
        0.22474849,  0.24931134,  0.29642948,  0.2728139 ,  0.1646359 ,
        0.01748047, -0.56363108,  0.3258278 ]), ['1']]
[array([ 0.43308574,  0.4110376 ,  0.35675911,  0.24765693,  0.30490746,
        0.26188137,  0.26346348,  0.28836082,  0.27518176,  0.20691269,
        0.0203125 , -0.41249101,  0.36547179]), ['1']]
[array([ 0.40585053,  0.42680615,  0.32606721,  0.31745998,  0.29939145,
        0.27306322,  0.26287871,  0.26504535,  0.28062751,  0.16313599,
        0.01826172,  0.61909053,  0.34656616]), ['1']]
[array([ 0.42121627,  0.42517936,  0.29517903,  0.34650694,  0.27197904,
        0.27561609,  0.28145097,  0.2624193 ,  0.28455477,  0.17383792,
        0.01796875,  0.30322179,  0.35302798]), ['1']]
[array([ 0.36712161,  0.41177311,  0.25067579,  0.27790116,  0.28036268,
        0.20390447,  0.27573542,  0.24523497,  0.2376781 ,  0.10944012,
        0.01767578, -1.04857499,  0.33640817]), ['1']]
[array([ 0.32283195,  0.39319688,  0.23840075,  0.26705933,  0.24590816,
        0.23341354,  0.27347549,  0.25480658,  0.24062991,  0.15398327,
        0.01943359,  0.26716302,  0.35611759]), ['1']]
[array([ 0.27122145,  0.40412742,  0.15483303,  0.24852404,  0.23126694,
        0.24054216,  0.25323978,  0.25274395,  0.22264233,  0.09515091,
        0.01757812,  0.46512038,  0.31894552]), ['1']]
[array([ 0.20325274,  0.37132849, -1.53525298,  0.21743962,  0.20303375,
        0.23179795,  0.24385164,  0.2536646 ,  0.20755451,  0.13361197,
        0.01943359, -1.13303027,  0.3586517 ]), ['1']]
[array([-1.53525298,  0.34527217,  0.22636003,  0.20526312,  0.19063958,
        0.20342271,  0.28189757,  0.2363253 ,  0.17958494,  0.11813719,
        0.01972656,  2.27146398,  0.360206  ]), ['1']]
[array([ 0.33235014,  0.33899043, -1.53525298,  0.20037988,  0.20250719,
        0.2341108 ,  0.24977001,  0.20999379,  0.20833272,  0.13760419,
        0.01845703, -0.38536742,  0.36315706]), ['1']]
[array([ 0.30416364,  0.35395133, -1.53525298,  0.18927485,  0.10113906,
        0.18150878,  0.22190249,  0.20127194,  0.14682923,  0.05240812,
        0.01650391, -0.37039518,  0.314321  ]), ['1']]
[array([ 0.13831067,  0.34800271, -1.53525298, -1.53525298,  0.16157778,
        0.16228223,  0.21072638,  0.16607674,  0.13777516, -0.054719  ,
        0.01835938, -0.74662449,  0.31528614]), ['1']]
[array([ 0.37764256,  0.33139172, -1.53525298, -1.53525298,  0.2071179 ,
        0.13881811,  0.19073476,  0.20379007,  0.15410346,  0.0100521 ,
        0.01572266, -0.29826142,  0.34725736]), ['1']]
[array([-1.53525298,  0.31357886, -1.53525298, -1.53525298,  0.08328517,
        0.07502438,  0.16368413,  0.15173227,  0.13009584, -1.53525298,
        0.01884766, -0.36195668,  0.3162303 ]), ['1']]
[array([-0.05775804,  0.30897742, -1.53525298, -1.53525298,  0.10365947,
        0.09869403,  0.09150038, -1.53525298, -1.53525298, -0.21938439,
        0.0171875 , -0.4874392 ,  0.30630517]), ['1']]
[array([ 0.24682467,  0.29495875, -1.53525298, -1.53525298,  0.15447057,
       -0.09728412,  0.13208459,  0.07122172, -0.03375746, -0.03048458,
        0.01796875,  1.89403631,  0.3013364 ]), ['1']]
[array([-1.53525298,  0.22145893, -1.53525298, -1.53525298,  0.16535107,
        0.11320211,  0.10643131,  0.09154886, -0.03968279, -1.53525298,
        0.01982422,  0.        ,  0.34926731]), ['1']]
[array([-1.53525298,  0.31397092,  0.15289347,  0.03459145,  0.09088361,
       -1.53525298,  0.08202636,  0.07079232,  0.00425063, -1.53525298,
        0.01679687, -0.58872941,  0.31576079]), ['1']]
[array([-1.53525298,  0.26355963, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.17162181, -1.53525298,
        0.01484375,  2.11698301,  0.3013364 ]), ['1']]
[array([-0.13297582,  0.21224589, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.0175925 , -1.53525298,
        0.01669922, -0.10263158,  0.3       ]), ['1']]
[array([-0.08070613, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298,  0.02185127, -1.53525298,
        0.01591797,  0.        ,  0.37859968]), ['1']]
[array([-1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.00168878, -1.53525298,
        0.01689453,  0.        ,  0.37403627]), ['1']]
[array([-0.02733569,  0.11148791, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.09215978, -1.53525298,
        0.01972656, -0.10263158,  0.31128981]), ['1']]
[array([-1.53525298,  0.12300414, -1.53525298,  0.14516906,  0.05367776,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.0203125 , -0.10263158,  0.3355188 ]), ['1']]
[array([-1.53525298, -1.53525298,  0.04825182,  0.2494486 ,  0.22019683,
       -1.53525298, -1.53525298, -1.53525298, -0.0590493 , -1.53525298,
        0.01972656,  0.        ,  0.34217067]), ['1']]
[array([ 0.42318704,  0.08431124, -1.53525298,  0.17545538,  0.17520882,
       -1.53525298, -1.53525298, -1.53525298,  0.02400359, -1.53525298,
        0.01015625,  0.        ,  0.34217067]), ['1']]
[array([ 0.34770389, -1.53525298, -1.53525298,  0.20114678,  0.13537225,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01425781,  0.        ,  0.34006459]), ['1']]
[array([ 0.00404979, -1.53525298, -1.53525298,  0.08638719, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -0.03678695,
        0.01972656,  0.        ,  0.38622059]), ['1']]
[array([-1.53525298, -1.53525298, -1.53525298, -0.06539839, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01914063,  0.        ,  0.33521825]), ['1']]
[array([-1.53525298, -1.53525298, -1.53525298,  0.09840172, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.03892488, -1.53525298,
        0.02128906,  0.        ,  0.38129134]), ['1']]
[array([-1.53525298, -1.53525298,  0.14597071,  0.13713266, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.02021484,  0.        ,  0.33077634]), ['1']]
[array([ 0.21565301, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01533203,  0.        ,  0.3858462 ]), ['1']]
[array([ 0.43147888, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -0.07646797,
        0.01416016,  0.        ,  0.38556327]), ['1']]
[array([-1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01396484,  0.        ,  0.3858462 ]), ['1']]
[array([ 0.2710502 , -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01328125,  0.        ,  0.3858462 ]), ['1']]
[array([ 0.44610116, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.00888672,  0.        ,  0.3858462 ]), ['1']]
[array([ 0.45442589, -1.53525298,  0.16495648, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.17870348, -1.53525298,
        0.00634766,  0.        ,  0.32872417]), ['1']]
[array([ 0.39355038, -1.53525298,  0.06824305,  0.05355982, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.05221873, -1.53525298,
        0.00791016,  0.        ,  0.38352941]), ['1']]
[array([ 0.26060732, -1.53525298,  0.22480566, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01484375,  0.        ,  0.330103  ]), ['1']]
[array([ 0.30924236, -1.53525298,  0.17268482,  0.1390956 , -1.53525298,
       -0.01555751, -1.53525298, -1.53525298, -0.13487871, -0.07125475,
        0.01318359,  0.        ,  0.33176717]), ['1']]
[array([-1.53525298, -1.53525298,  0.17496074, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.0959277 , -1.53525298,
        0.01513672,  0.        ,  0.32312465]), ['1']]
[array([ 0.45752479,  0.08324403,  0.0540227 , -1.53525298, -1.53525298,
        0.04731827, -1.53525298, -1.53525298, -0.09017968, -0.06492203,
        0.01152344,  0.        ,  0.35160393]), ['1']]
[array([ 0.37875028, -1.53525298,  0.20902866,  0.19529953, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.24342987, -1.53525298,
        0.00957031,  0.        ,  0.33430391]), ['1']]
[array([ 0.47414012,  0.09736638,  0.11785743,  0.11302764, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.15147915, -0.07382502,
        0.00458984,  0.        ,  0.33305406]), ['1']]
[array([ 0.4209988 , -1.53525298,  0.20247221,  0.22367056, -1.53525298,
       -0.07042171, -1.53525298, -1.53525298, -0.07548088, -0.23802425,
        0.00742187,  0.        ,  0.33209248]), ['1']]
[array([ 0.38267078,  0.08858423,  0.22416653,  0.15349346, -0.09138611,
        0.00171554, -1.53525298, -0.13414228,  0.04660374, -0.36213907,
        0.01142578,  0.        ,  0.33110913]), ['1']]
[array([ 0.36323017,  0.13586251,  0.12484171,  0.13257737, -1.53525298,
       -1.53525298, -1.53525298, -0.11824589,  0.08708543, -0.01950607,
        0.00957031,  0.        ,  0.3764363 ]), ['1']]
[array([ 0.36610175, -1.53525298, -1.53525298,  0.08949623, -1.53525298,
       -0.06387225, -1.53525298,  0.01440165,  0.08156787, -0.04210635,
        0.00957031,  0.        ,  0.37620218]), ['1']]
[array([ 0.32549414,  0.03170365,  0.15503367,  0.15030016, -1.53525298,
       -1.53525298, -1.53525298,  0.06920701,  0.05783781,  0.01454395,
        0.01064453,  0.        ,  0.37440484]), ['1']]
[array([ 0.37812789,  0.0910143 ,  0.03404959,  0.19465067,  0.03714872,
       -1.53525298, -1.53525298,  0.06316169,  0.06055305, -0.17384925,
        0.00654297, -0.10592168,  0.37366455]), ['1']]
[array([ 0.41796502,  0.20705557, -1.53525298,  0.04541198,  0.01744107,
       -1.53525298,  0.0111637 ,  0.07370949,  0.04103549, -0.06335341,
        0.00576172, -0.21988854,  0.33336991]), ['1']]
[array([ 0.34380796,  0.13925406, -1.53525298, -1.53525298,  0.03315874,
       -1.53525298, -0.09042846,  0.07330054,  0.03563409, -0.045155  ,
        0.01074219, -0.16433706,  0.37291141]), ['1']]
[array([ 0.19805465, -1.53525298, -1.53525298, -0.05087119, -1.53525298,
       -1.53525298, -1.53525298,  0.02690357,  0.03518298, -0.10083494,
        0.01181641,  0.        ,  0.38097701]), ['1']]
[array([-1.53525298, -0.01870225, -1.53525298, -0.00326551,  0.00808431,
       -1.53525298, -1.53525298,  0.04285331,  0.0611653 , -0.01793431,
        0.01113281, -0.10263158,  0.37947929]), ['1']]
[array([-1.53525298,  0.09990641,  0.11881131, -1.53525298,  0.05523207,
        0.04418689, -0.26335105,  0.04598137,  0.04050389, -0.14293178,
        0.01416016, -0.19068527,  0.37758834]), ['1']]
[array([-1.53525298,  0.18021156, -1.53525298,  0.08288983,  0.07446528,
       -1.53525298, -1.53525298,  0.01295963,  0.03860938, -0.09778388,
        0.01601562, -0.22435527,  0.34490925]), ['1']]
[array([-1.53525298,  0.11646483, -1.53525298, -1.53525298, -1.53525298,
       -0.08245538,  0.00858468, -0.12746227,  0.00690407, -0.08650389,
        0.01376953, -0.17764174,  0.37440484]), ['0']]
[array([ -5.96700023e-02,   9.39061613e-02,  -1.53525298e+00,
        -1.53525298e+00,  -1.53525298e+00,  -1.29445608e-02,
        -1.53525298e+00,  -1.43625169e-03,   4.80793725e-02,
        -2.54405662e-01,   1.60156250e-02,  -2.00993579e-01,
         3.78040733e-01]), ['0']]
[array([-1.53525298,  0.13596584, -1.53525298, -1.53525298,  0.02066247,
        0.05835163, -1.53525298, -0.00913555,  0.00262713, -0.12013408,
        0.01542969, -0.15111386,  0.36606876]), ['0']]
[array([-1.53525298,  0.16605373, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -0.0426198 ,  0.01415771,  0.01789631, -0.09037932,
        0.01474609, -0.26217535,  0.30630517]), ['0']]
[array([-0.04959375,  0.02149627, -1.53525298, -1.53525298,  0.01221589,
       -0.0035467 , -1.53525298, -0.00204262,  0.06279354, -0.06197575,
        0.01328125, -0.19107334,  0.3781531 ]), ['0']]
[array([-0.04813911,  0.22109859, -0.2338463 , -1.53525298, -1.53525298,
        0.01977992, -0.06206844, -0.00466609,  0.03359588, -0.1055428 ,
        0.01484375, -0.59796152,  0.2957248 ]), ['0']]
[array([-0.0230807 ,  0.128835  , -1.53525298, -1.53525298,  0.0032653 ,
        0.01727632, -1.53525298, -0.0355624 ,  0.03883307, -0.24596892,
        0.01552734, -0.25813838,  0.37758834]), ['0']]
[array([ -1.53525298e+00,   2.35358756e-01,  -1.53525298e+00,
        -1.53525298e+00,   5.92455753e-03,   8.61655777e-04,
        -1.13558912e-01,   5.61377281e-03,   1.78198954e-02,
        -1.24994007e-01,   1.27929687e-02,  -5.90195012e-01,
         3.00673338e-01]), ['0']]
[array([ 0.22800209,  0.18351177, -1.53525298, -1.53525298, -0.08922091,
        0.03886439, -0.12817776,  0.01894045,  0.03420741, -0.13311387,
        0.01044922,  2.91755977,  0.3123239 ]), ['0']]
[array([ 0.34867043,  0.21534896,  0.10278045, -1.53525298, -1.53525298,
       -1.53525298, -0.03404685, -0.01453494, -0.00696504, -0.08950241,
        0.00820313, -0.62923429,  0.30914471]), ['0']]
[array([  6.18218151e-02,   1.80578342e-01,  -1.53525298e+00,
        -8.81072773e-02,  -1.68122931e-01,  -6.29202167e-02,
         4.47448128e-04,  -1.90973879e-02,  -2.08369783e-02,
        -4.15959859e-02,   1.17187500e-02,  -3.35562214e-01,
         3.11289812e-01]), ['0']]
[array([-1.53525298,  0.21457185, -1.53525298, -1.53525298,  0.00236306,
       -0.00167466,  0.02834345, -0.05225101,  0.02821155, -0.10248275,
        0.01503906, -0.44814874,  0.30326691]), ['0']]
[array([-1.53525298,  0.25738089, -1.53525298, -1.53525298,  0.00843963,
        0.06365092, -0.02244934, -0.00318157,  0.01331204, -0.06746642,
        0.01269531,  1.69201477,  0.30198948]), ['0']]
[array([ 0.22368121,  0.26272727, -1.53525298, -1.53525298,  0.04692515,
        0.03644703, -1.53525298,  0.01980344,  0.00632329, -0.03282691,
        0.00927734, -0.04552279,  0.30630517]), ['0']]
[array([-0.02233822,  0.24144699, -1.53525298, -1.53525298,  0.00458912,
       -0.02855344, -0.05234866,  0.00258218,  0.02162948, -0.03690383,
        0.00849609, -0.35359605,  0.30326691]), ['0']]
[array([ 0.28257682,  0.25174065, -1.53525298, -0.14137998,  0.03195076,
        0.02227577,  0.02929978, -0.04884   ,  0.04021933, -0.10600792,
        0.00869141, -1.16133645,  0.30630517]), ['0']]
[array([  2.71936168e-01,   2.46791604e-01,  -1.53525298e+00,
        -1.53525298e+00,   2.49354202e-02,  -7.34441078e-04,
        -3.71473374e-02,  -3.47808739e-02,   3.65980331e-03,
        -4.53431345e-02,   7.91015625e-03,  -3.29667694e-01,
         3.05714289e-01]), ['0']]
[array([ 0.42440771,  0.24367742, -1.53525298, -1.53525298, -0.00200273,
       -0.10833518,  0.07655042,  0.0373044 ,  0.00722537, -0.03084336,
        0.00644531, -0.39415752,  0.30630517]), ['0']]
[array([ 0.33754493,  0.22667431, -0.00713011, -1.53525298, -0.06121785,
       -0.02937323, -0.04807467, -0.028054  ,  0.03844073, -0.05806871,
        0.00527344,  2.28823186,  0.30859146]), ['0']]
[array([  2.44481570e-01,   2.29393094e-01,   3.22447895e-03,
        -1.53525298e+00,   7.94061152e-04,  -7.68341411e-02,
         1.13429163e-02,   3.01210934e-02,   3.11640215e-02,
        -4.95361261e-02,   5.95703125e-03,  -7.84266463e-01,
         3.11289812e-01]), ['0']]
[array([ 0.31202765,  0.22884555,  0.07341247, -1.53525298, -0.01046656,
       -1.53525298, -0.07313311, -0.0323843 ,  0.01847293, -0.08357447,
        0.00615234, -0.73120979,  0.31076339]), ['0']]
[array([ 0.22219796,  0.2301807 ,  0.10220194, -1.53525298, -0.01784914,
       -0.01635454,  0.01801589,  0.04689613,  0.07563231, -0.02663488,
        0.01191406, -0.48107266,  0.31669479]), ['0']]
[array([ 0.15912679,  0.2108812 ,  0.05985071, -1.53525298, -0.03972972,
       -0.04426966, -0.00646613, -0.0100858 ,  0.03812982, -0.07144111,
        0.01298828,  2.14183775,  0.31480625]), ['0']]
[array([ 0.12530644,  0.2010059 ,  0.09106831, -1.53525298, -0.04472812,
       -0.01703179, -0.09537584, -0.04000723,  0.04182005, -0.05615844,
        0.01201172,  3.03559365,  0.31480625]), ['0']]
[array([  2.06418701e-01,   2.37944601e-01,  -1.53525298e+00,
        -1.53525298e+00,  -5.82018135e-05,   5.08996580e-02,
        -5.66965346e-02,   3.47485055e-02,   4.27499216e-02,
        -1.29178680e-01,   1.19140625e-02,  -3.84204409e-02,
         3.12831848e-01]), ['0']]
[array([-1.53525298,  0.22878709,  0.05875354, -0.0529862 ,  0.00340774,
        0.03213417,  0.02287855,  0.03612736,  0.0408197 , -0.09047458,
        0.01289062, -0.57158007,  0.31333393]), ['0']]
[array([ 0.20268184,  0.23434585,  0.14998724, -0.03887869, -0.04879432,
        0.00771712, -0.06292608,  0.02891357,  0.03928111, -0.06541229,
        0.00927734, -0.32548629,  0.31669479]), ['0']]
[array([ 0.10058236,  0.20871826,  0.11824157,  0.02557706, -0.13913444,
        0.02615919, -0.03777101, -0.02292926, -0.01073447, -0.04793662,
        0.01103516,  0.01800383,  0.31760913]), ['0']]
[array([-1.53525298,  0.22556851,  0.12439354,  0.02504981, -0.01166917,
       -0.00183551, -0.03202467, -0.02906269,  0.04890719, -0.06310903,
        0.0140625 , -0.14715923,  0.31283185]), ['0']]
[array([  2.13315812e-01,   2.32353229e-01,   1.73335089e-01,
        -3.85099965e-02,   2.62454174e-02,   2.33227501e-02,
         1.70878972e-03,   2.85763276e-02,   3.96924153e-02,
         1.21177177e-04,   1.38671875e-02,   9.08710321e-02,
         3.21500933e-01]), ['0']]
[array([ 0.14643988,  0.22730489,  0.12477874,  0.05427283,  0.04295402,
        0.00223783,  0.00931371,  0.01540601,  0.04829787, -0.01595922,
        0.01328125,  0.22691031,  0.31894552]), ['0']]
[array([ 0.16452917,  0.21824592,  0.13014731,  0.03888855,  0.04506166,
        0.04587171, -0.02888222, -0.00474559,  0.03353867, -0.02804671,
        0.00976562, -0.37211868,  0.31805918]), ['0']]
[array([ 0.14608412,  0.21529052,  0.14963527, -0.02536011, -0.04821042,
        0.0187393 , -0.01797003,  0.00927729,  0.04091325, -0.04472661,
        0.00976562, -1.08787774,  0.32191259]), ['0']]
[array([ 0.29454053,  0.20025856,  0.16464155, -0.02769268,  0.00938848,
        0.01897031,  0.01717735,  0.01283481,  0.07003817, -0.00573622,
        0.01259766, -0.38866277,  0.34970161]), ['0']]
[array([ 0.20680574,  0.22244326,  0.13160842,  0.01846858,  0.00282245,
        0.0288543 , -0.03686683,  0.05327099,  0.06811225, -0.02779019,
        0.01464844, -1.03952926,  0.32272438]), ['0']]
[array([ 0.23145204,  0.20508897,  0.16735125,  0.05067378,  0.02612463,
        0.03960197,  0.04730044,  0.05491129,  0.06957617, -0.04942292,
        0.01464844,  0.28804624,  0.35382123]), ['0']]
[array([ 0.2637931 ,  0.20434238,  0.10796759,  0.0385106 ,  0.05093934,
        0.05828387,  0.02773073,  0.06509196,  0.05278862, -0.00995493,
        0.01328125, -0.62375273,  0.35097904]), ['0']]
[array([ 0.34120116,  0.2206545 ,  0.12667267,  0.01313911,  0.06661633,
        0.04678961,  0.03754765,  0.06741424,  0.06062638, -0.03969037,
        0.01132812, -0.27606702,  0.32766054]), ['0']]
[array([ 0.29874321,  0.23485389,  0.15483251,  0.02603585,  0.00869639,
        0.02965237,  0.06839146,  0.06981149,  0.04906197, -0.0209711 ,
        0.00957031, -0.63646142,  0.32312465]), ['0']]
[array([ 0.34282419,  0.15127847,  0.13040482,  0.05950287,  0.02716434,
        0.05777675,  0.03621025,  0.03999876,  0.03836881, -0.00403756,
        0.009375  ,  1.9432618 ,  0.37030225]), ['0']]
[array([ 0.32825581,  0.20053569,  0.15068116, -0.00423779,  0.05344679,
        0.09813819,  0.02423874,  0.01603906,  0.07315634, -0.01735269,
        0.01533203, -0.79049714,  0.35362427]), ['0']]
[array([ 0.26191968,  0.20689785,  0.11883912,  0.01395378,  0.08805631,
        0.05456287,  0.04859765,  0.06003438,  0.08041635,  0.00397029,
        0.01289062,  0.29105798,  0.36795415]), ['0']]
[array([ 0.31751598,  0.18645974,  0.13282499,  0.05257042,  0.08599301,
        0.01040832,  0.06965845,  0.05815179,  0.07255492,  0.02413369,
        0.01015625, -0.29287142,  0.37291141]), ['0']]
[array([ 0.21958924,  0.23420016,  0.11752025,  0.06664175,  0.06333804,
        0.07583251,  0.04993307,  0.04992745,  0.08056901, -0.00807755,
        0.01533203,  3.05157793,  0.33176717]), ['0']]
[array([ 0.33515095,  0.24445207,  0.11876465,  0.03858304,  0.0653189 ,
        0.04559672,  0.04596309,  0.0357665 ,  0.09542015, -0.00312575,
        0.009375  ,  1.28399361,  0.3258278 ]), ['0']]
[array([ 0.39569308,  0.24270093,  0.13409212,  0.06622249,  0.0745519 ,
        0.03368861,  0.04551102,  0.06323951,  0.07845462,  0.0190175 ,
        0.01123047, -0.41398411,  0.32312465]), ['0']]
[array([ 0.27119719,  0.21214765,  0.1351732 ,  0.07856897,  0.09234974,
        0.04497551,  0.0261662 ,  0.03688931,  0.07219523,  0.0099922 ,
        0.00966797, -0.30390269,  0.34748534]), ['0']]
[array([ 0.32959814,  0.24291365,  0.14721189,  0.08193454,  0.07492229,
        0.05150586,  0.03689246,  0.02157557,  0.08819963, -0.03362695,
        0.009375  , -1.0237524 ,  0.32545179]), ['0']]
[array([ 0.42431422,  0.28562304,  0.17584464,  0.10029167,  0.07860222,
        0.07559161,  0.04579251,  0.04772108,  0.09908056, -0.01001322,
        0.009375  , -0.71248726,  0.31333393]), ['0']]
[array([ 0.42078716,  0.23456261,  0.13770038,  0.04255393,  0.04389146,
        0.01681876,  0.01745378,  0.01824091,  0.07866945,  0.04422281,
        0.00976562, -1.05928919,  0.32545179]), ['0']]
[array([ 0.42535317,  0.18179821,  0.0984581 ,  0.0552704 ,  0.09630263,
        0.0664504 ,  0.03696644,  0.06638972,  0.09897793,  0.02796813,
        0.00449219,  1.39008648,  0.37655289]), ['0']]
[array([ 0.48592019,  0.31144599,  0.15974359, -0.02144857, -0.00716279,
        0.03322335,  0.01947448,  0.01198134,  0.08987081,  0.01096328,
        0.00351563, -0.74519881,  0.29341827]), ['0']]
[array([ 0.47143573,  0.29636521,  0.1296874 ,  0.05638522,  0.0810897 ,
        0.03553973, -0.01125621,  0.0559393 ,  0.10851493,  0.00938759,
        0.00419922, -0.71063241,  0.30389181]), ['0']]
[array([ 0.50812151,  0.39763584,  0.15005173,  0.05681889, -0.00701042,
       -0.00763819, -0.03876259,  0.03799673,  0.07199018, -0.03182749,
        0.00332031, -2.10460651,  0.29791499]), ['0']]
[array([  4.97315594e-01,   3.64824356e-01,   1.28349729e-01,
         6.30285231e-02,  -2.29781446e-04,   6.07820175e-03,
         2.85554686e-03,   2.16572317e-02,   6.65687570e-02,
         1.45176579e-03,   3.41796875e-03,  -1.17479648e+00,
         2.91809590e-01]), ['0']]
[array([ 0.37231637,  0.22831299,  0.12592024, -0.00164161,  0.03555327,
        0.03778167,  0.0793631 ,  0.06431347,  0.10155824,  0.0273424 ,
        0.00644531, -1.1284396 ,  0.36921306]), ['0']]
[array([ 0.46063718,  0.27709827,  0.18354108,  0.05616838,  0.06999558,
        0.08208996, -0.00760095,  0.06484514,  0.10554564,  0.01675753,
        0.00322266, -0.46994531,  0.319382  ]), ['0']]
[array([ 0.54571838,  0.44306217,  0.23665015,  0.13769745, -0.04131772,
       -0.13684365, -0.13107747, -1.53525298, -0.13589442, -1.53525298,
        0.0046875 , -1.10427039,  0.29341827]), ['0']]
[array([ 0.51032726,  0.42603684,  0.18783928,  0.10928983,  0.01294633,
       -0.08727879, -0.12663815, -0.06985451, -0.00325249, -0.15176306,
        0.00429688, -1.36924831,  0.29341827]), ['0']]
[array([ 0.46017329,  0.4253867 ,  0.24247483,  0.13328529,  0.03905094,
       -1.53525298, -0.02489579, -0.09980046, -0.04124082, -0.14822214,
        0.00576172, -1.06701618,  0.29931606]), ['0']]
[array([ 0.51174414,  0.43907146,  0.2867072 ,  0.21151011,  0.0360179 ,
        0.07098404, -0.11680329, -1.53525298, -1.53525298, -1.53525298,
        0.00527344, -1.44154732,  0.30067334]), ['0']]
[array([ 0.49526988,  0.32380933,  0.05155383, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -0.3545142 ,
        0.00410156, -0.87328639,  0.29496949]), ['0']]
[array([ 0.42465038,  0.09573578, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -0.13941235, -0.13216622, -0.04981426, -0.18406112,
        0.0046875 , -0.10263158,  0.2964672 ]), ['0']]
[array([ 0.44805897,  0.3671245 ,  0.02784493, -0.07633072, -1.53525298,
       -0.15306967, -0.07424739, -1.53525298, -0.0693658 , -0.16494342,
        0.0046875 , -0.62502695,  0.29013902]), ['0']]
[array([ 0.41950394,  0.34014468,  0.10672124, -0.02323664, -0.02220906,
       -0.09953953, -0.07400374, -0.14739171, -0.07320964, -0.1386933 ,
        0.00478516, -1.75400493,  0.29791499]), ['0']]
[array([-1.53525298, -0.01296639, -1.53525298, -1.53525298, -1.53525298,
       -0.16367915, -0.20866905, -0.09162179, -0.11041194, -0.12348615,
        0.00585938, -0.10263158,  0.3774745 ]), ['0']]
[array([ 0.3187845 ,  0.33121249,  0.30867336,  0.26548788,  0.19010386,
        0.10974554, -0.02066302, -0.10410135, -0.14263771, -0.25135906,
        0.00332031, -3.13161858,  0.32976237]), ['0']]
[array([ 0.27144371,  0.17070858, -1.53525298, -1.53525298,  0.01326734,
       -0.00255683, -1.53525298, -0.05566044, -0.04123007, -0.21471594,
        0.00625   , -0.10263158,  0.30198948]), ['0']]
[array([ 0.29061967,  0.2515889 , -1.53525298, -1.53525298, -0.03377819,
       -0.19313905, -0.20473047, -0.14994099, -0.02167939, -0.10796268,
        0.00537109, -0.14525079,  0.29341827]), ['0']]
[array([ 0.25576123,  0.0142095 , -1.53525298, -0.0200314 , -0.03751167,
       -0.14579037,  0.00407299, -0.01456158,  0.0021244 , -0.11339732,
        0.00458984,  0.        ,  0.37804073]), ['0']]
[array([-1.53525298, -1.53525298, -1.53525298, -0.08972924, -0.00197852,
       -0.04777408, -0.02816733,  0.02784607,  0.04343229, -0.05797036,
        0.00615234,  0.        ,  0.38139561]), ['0']]
[array([ -1.53525298e+00,  -1.86251509e-01,  -7.73623690e-02,
        -5.89483337e-02,  -6.88878181e-02,  -1.53474520e-01,
         2.18089977e-04,   1.53544069e-02,   6.23258926e-02,
        -4.50627879e-02,   9.57031250e-03,   0.00000000e+00,
         3.83430146e-01]), ['0']]
[array([-1.53525298,  0.12650734,  0.14039203,  0.04199048,  0.04706599,
        0.04004227,  0.03220807,  0.04153519,  0.05920059, -0.03309607,
        0.01240234, -0.10263158,  0.37537267]), ['0']]
[array([ 0.10260844,  0.16759758,  0.01670985,  0.00123704,  0.04179251,
        0.04673201,  0.03021513,  0.05041773,  0.07405808,  0.00147714,
        0.01035156, -0.55069183,  0.37826518]), ['0']]
[array([-1.53525298,  0.12387715,  0.04461688, -0.1311213 ,  0.03723695,
        0.04857458,  0.03988942,  0.0439799 ,  0.08211228,  0.00318879,
        0.01474609, -0.20869961,  0.37980461]), ['0']]
[array([ 0.3857907 ,  0.08510324, -0.03633492, -0.0366875 , -0.03624144,
        0.04629732,  0.05224062,  0.06920784,  0.07760638,  0.03794445,
        0.00654297, -0.22086775,  0.38441275]), ['0']]
[array([ 0.46843218,  0.33216613, -1.53525298, -0.05862605,  0.02958554,
       -0.01843646,  0.00434325,  0.04565253,  0.01437217, -0.0608521 ,
        0.00439453, -0.33566142,  0.29262138]), ['0']]
[array([ 0.42216831,  0.20538706,  0.06179851,  0.01822808,  0.08070244,
        0.07160056,  0.04683987,  0.07180455,  0.08654798,  0.020854  ,
        0.00507813, -0.28957808,  0.37391271]), ['0']]
[array([ 0.38519097,  0.26537058,  0.03194962,  0.06201312,  0.01736165,
        0.03346777,  0.04667869,  0.07298253,  0.08702177,  0.02828012,
        0.00458984,  0.61474071,  0.3102305 ]), ['0']]
[array([ 0.43868086,  0.29575586,  0.12319654,  0.0218857 ,  0.08948731,
        0.04536311,  0.04988553,  0.04216731,  0.0976184 ,  0.01986254,
        0.00498047, -1.30585409,  0.31076339]), ['0']]
[array([ 0.20072671,  0.15414361,  0.10367715,  0.07649896,  0.05818204,
        0.09688466,  0.05748666,  0.07289876,  0.08384672,  0.02009844,
        0.00810547, -0.10263158,  0.37792808]), ['0']]
[array([ 0.39693884,  0.15165934,  0.12619318,  0.07634495,  0.06820162,
        0.07661417,  0.05829252,  0.08455941,  0.09147288,  0.02742809,
        0.00751953,  0.33463263,  0.38066039]), ['0']]
[array([ 0.35833523,  0.14535483,  0.12876692, -0.01607972,  0.06487071,
        0.066534  ,  0.06365887,  0.08723297,  0.09660482,  0.01288787,
        0.00527344, -0.39103552,  0.37758834]), ['0']]
[array([ 0.24793365,  0.14408139, -0.0022049 ,  0.06641857,  0.09254276,
        0.08702782,  0.07495259,  0.07979199,  0.09117643,  0.00046827,
        0.00507813, -0.44768408,  0.37859968]), ['0']]
[array([ 0.30810934,  0.11206657,  0.09591828,  0.07084578,  0.06629486,
        0.01656782,  0.04554196,  0.08834603,  0.10127852,  0.03022122,
        0.00712891, -0.10510608,  0.38023461]), ['0']]
[array([-1.53525298,  0.22430355,  0.09362691,  0.07702605,  0.0947565 ,
        0.09482514,  0.05743746,  0.09338875,  0.11151015,  0.01956281,
        0.00712891, -0.26647818,  0.37415947]), ['0']]
[array([ 0.37952165,  0.18841131,  0.09871168,  0.04179108,  0.09828163,
        0.06402217,  0.06863561,  0.0715929 ,  0.10511093,  0.05112626,
        0.00771484, -0.27195077,  0.379588  ]), ['0']]
[array([ 0.29828119,  0.13586993,  0.06940253,  0.04434285,  0.06351956,
        0.09490623,  0.07450075,  0.07951183,  0.10561233,  0.00705809,
        0.00722656, -0.11129804,  0.38191325]), ['0']]
Processing recording: highway2cars
0000000000000000000000000000000000000000000011111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000111111111111111
[array([-0.16303804, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.00673828,  0.        ,  0.3858462 ]), ['0']]
[array([-0.14614601, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.00595703,  0.        ,  0.3858462 ]), ['0']]
[array([-0.12841302, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -0.29990307, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.00839844,  0.        ,  0.35262585]), ['0']]
[array([-0.10460365, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -0.32452179, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.00839844,  0.        ,  0.34838546]), ['0']]
[array([-0.12022829, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -0.31522012, -1.53525298, -1.53525298,
        0.00791016,  0.        ,  0.3673827 ]), ['0']]
[array([-0.02489372, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -0.39078717, -0.37422543, -1.53525298,
        0.00654297,  0.        ,  0.3712334 ]), ['0']]
[array([ 0.19218346, -1.53525298, -0.19110752, -1.53525298, -1.53525298,
       -0.28423773, -1.53525298, -0.38111019, -0.3082295 , -0.39672853,
        0.00429688,  0.        ,  0.37328961]), ['0']]
[array([ 0.21734356, -0.11487975, -0.15626808, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -0.27640602, -0.40687809, -1.53525298,
        0.00732422, -0.10263158,  0.32468985]), ['0']]
[array([ 0.18624949, -0.10392059, -0.09416315, -1.53525298, -0.31848624,
       -0.272872  , -1.53525298, -0.28677436, -1.53525298, -0.37915154,
        0.00449219, -0.17621661,  0.32545179]), ['0']]
[array([ 0.18400746, -0.08985764, -0.19538042, -1.53525298, -1.53525298,
       -0.39557176, -1.53525298, -0.25769078, -0.25861721, -0.41111194,
        0.00517578, -0.10263158,  0.29862117]), ['0']]
[array([ 0.18824638, -0.11815902, -0.1631844 , -1.53525298, -0.26551504,
       -1.53525298, -1.53525298, -0.24831735, -1.53525298, -0.34203664,
        0.00605469, -0.10263158,  0.32872417]), ['0']]
[array([ 0.22415133, -0.11517311, -0.12768216, -1.53525298, -0.33066168,
       -0.30586272, -0.28854787, -0.19199514, -0.28058544, -0.31224561,
        0.00507813, -0.10263158,  0.36709413]), ['0']]
[array([ 0.19541655, -0.06586361, -0.13694533, -0.3318116 , -1.53525298,
       -0.23575617, -1.53525298, -0.27372825, -0.28185588, -0.24933453,
        0.0046875 , -0.1573631 ,  0.32468985]), ['0']]
[array([ 0.23633981, -0.06813277, -0.08256352, -1.53525298, -0.24808857,
       -0.49229304, -1.53525298, -0.27874895, -0.25728922, -0.31266109,
        0.00400391, -0.16232617,  0.32352127]), ['0']]
[array([ 0.30209973, -0.11022706, -0.11493985, -1.53525298, -0.31587755,
       -0.27723718, -0.24123543, -0.23966968, -0.27752265, -0.27781436,
        0.00478516, -0.15157667,  0.32730013]), ['0']]
[array([ 0.26370232, -0.01896106, -0.15773376, -1.53525298, -0.20166634,
       -0.31134685, -0.29206633, -0.24580905, -0.27242735, -0.25619593,
        0.00429688, -0.1390474 ,  0.3       ]), ['0']]
[array([ 0.20925748, -0.0981592 , -0.18086147, -1.53525298, -0.25322685,
       -0.47200745, -0.24678566, -0.296756  , -0.34535558, -0.28668553,
        0.00673828, -0.24196607,  0.32507249]), ['0']]
[array([ 0.20499317, -0.03123373, -0.11969155, -1.53525298, -0.38085176,
       -0.34108084, -1.53525298, -0.23693559, -0.30494646, -0.23996895,
        0.00566406, -0.12958287,  0.29931606]), ['0']]
[array([ 0.18211524,  0.00336496, -0.11602363, -1.53525298, -0.2983191 ,
       -0.36334788, -0.29346225, -0.27030915, -0.2492639 , -0.3134503 ,
        0.00419922, -0.39646369,  0.3       ]), ['0']]
[array([ 0.21551553,  0.00541917, -0.12267292, -1.53525298, -0.23237975,
       -1.53525298, -0.28228097, -0.24799682, -0.21919694, -0.25551286,
        0.00390625, -0.35156601,  0.30450784]), ['0']]
[array([ 0.12486147, -0.02537967, -0.09954727, -0.23134585, -0.23007348,
       -0.32897804, -0.22420167, -0.28343322, -0.27431906, -0.29544892,
        0.00595703, -0.2652109 ,  0.3239143 ]), ['0']]
[array([ 0.17744187,  0.04639699, -0.12865877, -0.28859298, -0.25818082,
       -0.29138145, -0.2266559 , -0.2426078 , -0.31368246, -0.30104395,
        0.00732422, -0.49298808,  0.29719713]), ['0']]
[array([ 0.20801419,  0.03416378, -0.12203529, -0.26218523, -0.22323488,
       -0.18157377, -0.37593976, -0.27487228, -0.3690598 , -0.46829393,
        0.00517578, -0.46270145,  0.29862117]), ['0']]
[array([ 0.17174511,  0.05340617, -0.05280516, -0.22511216, -0.18171998,
       -0.17121833, -0.27633549, -0.17431396, -0.32108372, -0.34399774,
        0.00556641, -0.67679368,  0.3102305 ]), ['0']]
[array([ 0.46121335,  0.37249322,  0.28598807,  0.24249476,  0.20920642,
        0.18078178,  0.15901649,  0.13248787,  0.08895435,  0.01329254,
        0.00517578, -1.88206817,  0.31894552]), ['0']]
[array([ 0.17945547,  0.22504645,  0.17154798,  0.16007199,  0.12718805,
        0.14869527,  0.15435188,  0.16134934,  0.14744998,  0.05203042,
        0.01494141,  1.09436928,  0.37328961]), ['0']]
[array([ 0.20102718,  0.24051249,  0.15366364,  0.1238099 ,  0.08311996,
        0.08057917,  0.10732382,  0.11539294,  0.09289141,  0.01822359,
        0.01533203, -0.99785315,  0.36054397]), ['0']]
[array([ 0.25998747,  0.24496011,  0.19097054,  0.09528837,  0.07825991,
        0.04464719,  0.06795654,  0.07015603,  0.0284346 , -0.1062139 ,
        0.01337891, -0.65469037,  0.32312465]), ['0']]
[array([ 0.24204602,  0.23433817,  0.14660898,  0.12353965,  0.05935559,
        0.08142304,  0.06494178,  0.04442076,  0.02274106, -0.12488112,
        0.01181641, -0.68852426,  0.32468985]), ['0']]
[array([ 0.23298881,  0.20344807,  0.13761723,  0.05299946,  0.1107128 ,
        0.09698675,  0.05186945,  0.03659952,  0.026313  , -0.19917718,
        0.01464844, -0.30366859,  0.34679779]), ['0']]
[array([ 0.23015751,  0.20014717,  0.10086637,  0.07233263,  0.14294948,
        0.05352256,  0.02855962,  0.03220117,  0.00136057, -0.1789603 ,
        0.01318359,  0.35054569,  0.34490925]), ['0']]
[array([ 0.17402413,  0.17786199,  0.1396656 ,  0.0819505 ,  0.09569061,
        0.04198125,  0.03718226,  0.01938959,  0.01546958, -0.1839026 ,
        0.01328125, -0.74530371,  0.34466731]), ['0']]
[array([ 0.28456468,  0.20457295,  0.11542526,  0.0552086 ,  0.08814007,
        0.04482574,  0.04307812,  0.01536772, -0.00856759, -0.12182218,
        0.01025391, -0.69378084,  0.3265702 ]), ['0']]
[array([ 0.16538884,  0.19880123,  0.1492801 ,  0.0688181 ,  0.08700874,
        0.04968428,  0.02027735,  0.00130333,  0.02452331, -0.10948071,
        0.01328125, -0.25060475,  0.33336991]), ['0']]
[array([ 0.22127935,  0.19258635,  0.14689292,  0.05239804,  0.09613177,
       -0.00586973,  0.03137178,  0.0020938 ,  0.01327184, -0.17691701,
        0.01347656, -0.23041294,  0.33077634]), ['0']]
[array([ 0.17945885,  0.20923419,  0.19042165,  0.10362445,  0.09458199,
        0.05474769,  0.01176265,  0.04955657,  0.03310721, -0.11046349,
        0.01464844,  0.58100131,  0.33209248]), ['0']]
[array([ 0.23670155,  0.17792883,  0.16380904,  0.11205935,  0.06634903,
        0.06818018,  0.01735336,  0.01852348,  0.01439327, -0.15836494,
        0.01337891, -0.35474936,  0.34060076]), ['0']]
[array([ 0.19243278,  0.17654661,  0.15352797,  0.06367147,  0.05815947,
        0.03681908,  0.02828722,  0.04319535,  0.03993791, -0.1332903 ,
        0.01376953, -0.65885963,  0.35118834]), ['0']]
[array([ 0.14564077,  0.18594121,  0.13068638,  0.07632287,  0.09427054,
        0.07508568,  0.0439021 ,  0.02056948,  0.04120076, -0.15434034,
        0.01357422,  1.38833654,  0.35282738]), ['0']]
[array([ 0.23318027,  0.16373207,  0.16266771,  0.12491369,  0.10812926,
        0.10112069,  0.04904458,  0.01858839,  0.02943572, -0.13016808,
        0.01357422,  0.68191515,  0.35201559]), ['0']]
[array([ 0.30775971,  0.20504583,  0.15355639,  0.06542589,  0.10433181,
        0.06274698,  0.03516423,  0.03330129,  0.00923641, -0.12358578,
        0.01152344,  0.42971655,  0.33785115]), ['0']]
[array([ 0.25513509,  0.17889147,  0.1570347 ,  0.09333047,  0.05923525,
        0.06935221,  0.07430155,  0.0379974 ,  0.04191115, -0.16956058,
        0.01464844,  0.83522471,  0.35460025]), ['0']]
[array([ 0.28395593,  0.15215535,  0.13986781,  0.0887863 ,  0.06459713,
        0.10029788,  0.06707891,  0.0164494 ,  0.04345976, -0.13062306,
        0.01396484, -0.5492987 ,  0.36347291]), ['0']]
[array([-1.53525298,  0.18163591,  0.13681602,  0.11301556,  0.10230294,
        0.0831401 ,  0.00663714,  0.01637352,  0.026     , -0.17888731,
        0.01640625,  0.11983046,  0.34586378]), ['0']]
[array([ 0.19587571,  0.19628666,  0.17309742,  0.11164227,  0.05382894,
        0.08483993,  0.07565967,  0.05649959,  0.04446059, -0.1478458 ,
        0.01533203, -0.67642275,  0.35013161]), ['0']]
[array([ 0.19820445,  0.20122689,  0.18572144,  0.07868638,  0.07730315,
        0.05498606,  0.02215135,  0.02706084,  0.03344946, -0.13912141,
        0.01572266, -0.35319024,  0.32941906]), ['0']]
[array([ 0.21721002,  0.191998  ,  0.19924365,  0.10120184,  0.10480456,
        0.08521478,  0.04456094,  0.07774336,  0.04489591, -0.13526278,
        0.01650391, -0.31494203,  0.349485  ]), ['0']]
[array([ 0.27600055,  0.23474123,  0.21350126,  0.09526845,  0.0654953 ,
        0.06275693, -0.06523227,  0.05040649,  0.06286019, -0.15353671,
        0.01523437, -0.78914817,  0.32272438]), ['0']]
[array([ 0.23978197,  0.20728702,  0.18507561,  0.13529179,  0.09657171,
        0.05650948,  0.02693409,  0.04987833,  0.05283185, -0.10054531,
        0.01914063, -0.39692577,  0.339794  ]), ['0']]
[array([ 0.22487291,  0.19659843,  0.16076493,  0.09253922,  0.07086756,
        0.03772679, -0.00218994,  0.07615339,  0.08676887, -0.02410278,
        0.01650391, -0.60818733,  0.37096939]), ['0']]
[array([ 0.26220018,  0.20305709,  0.184749  ,  0.12528525,  0.11017195,
        0.05693329,  0.06123777,  0.07889994,  0.09314159, -0.00139887,
        0.01503906, -0.14752106,  0.36962471]), ['0']]
[array([ 0.02769377,  0.21619845,  0.16648282,  0.09219296,  0.06934574,
        0.03738772,  0.04676785,  0.05426479,  0.06871119, -0.06445302,
        0.015625  , -0.692135  ,  0.33869446]), ['0']]
[array([ 0.26018897,  0.19247994,  0.17530282,  0.08953941,  0.08848811,
        0.07744497,  0.04786169,  0.04753568,  0.0774706 , -0.06230704,
        0.01396484,  0.18966178,  0.36879746]), ['0']]
[array([-1.53525298,  0.17807334,  0.1841027 ,  0.07269441,  0.06692176,
        0.00538898, -0.00163984,  0.00799001,  0.04819917, -0.06311227,
        0.01699219, -0.40774545,  0.34490925]), ['0']]
[array([  2.40326119e-01,   1.72730997e-01,   1.26941782e-01,
         4.32505579e-02,   8.61617816e-02,  -4.17903846e-02,
        -1.70113776e-04,   3.03858906e-02,   1.52043492e-03,
        -1.32083267e-01,   1.36718750e-02,  -7.31269415e-01,
         3.41130397e-01]), ['0']]
[array([ 0.24429357,  0.1863734 ,  0.15227532,  0.03775548,  0.06890182,
       -0.04294597, -0.03385731, -0.0233577 ,  0.00794759, -0.15472627,
        0.01523437, -0.55875469,  0.32837251]), ['0']]
[array([ 0.13357522,  0.15490289,  0.13474169,  0.023083  ,  0.06736345,
        0.06374295, -0.04713465, -0.04322576,  0.00836931, -0.10618228,
        0.01435547, -0.25652798,  0.34466731]), ['0']]
[array([ 0.14352025,  0.16532203,  0.15453075,  0.06920692,  0.04909135,
       -0.02880192, -0.05759703, -0.03081457,  0.00973789, -0.16166731,
        0.01318359, -0.59399768,  0.33430391]), ['0']]
[array([ 0.12162952,  0.1184884 ,  0.17081354,  0.06244685,  0.03084126,
       -0.04516596, -0.05736438, -0.03821611, -0.04098203, -0.14428632,
        0.01347656, -0.3423634 ,  0.33077634]), ['0']]
[array([-1.53525298,  0.15351291,  0.15762294,  0.08827629,  0.03538029,
       -0.01921447, -0.04483465, -0.03779399, -0.05468321, -0.16607154,
        0.01484375,  0.16697507,  0.33044097]), ['0']]
[array([ 0.02199142,  0.13898563,  0.09001349,  0.11080848,  0.09299013,
       -0.02629694, -0.04686382, -0.07001359, -0.02229506, -0.2046051 ,
        0.01376953, -0.54059871,  0.34417933]), ['0']]
[array([-0.04776636,  0.13472607,  0.12387072,  0.07836282,  0.07790575,
       -0.11688215, -0.06559958, -0.01157104, -0.03948005, -0.16431068,
        0.01435547,  3.38276609,  0.34165365]), ['0']]
[array([-1.53525298,  0.13228897,  0.14014886,  0.09605665,  0.06796409,
       -0.15260869, -0.16511655, -0.00744219, -0.02198591, -0.30298444,
        0.01484375, -0.47906883,  0.34006459]), ['0']]
[array([ 0.07820526,  0.10077305,  0.05577241,  0.10821395,  0.03747975,
       -0.02694292, -0.14403074, -0.05212707, -0.04337579, -0.21678685,
        0.01425781,  2.51057529,  0.34217067]), ['0']]
[array([ 0.2395719 ,  0.13300396,  0.11388777,  0.06502194, -0.01257975,
        0.01425591, -1.53525298, -0.06916806, -0.05632196, -0.15831209,
        0.01171875, -0.10263158,  0.33399481]), ['0']]
[array([ 0.17649012,  0.16912591,  0.10617779,  0.06079202,  0.04949396,
       -0.09570514, -0.0415552 , -0.00715184,  0.01022322, -0.14289898,
        0.01357422,  0.39270335,  0.33110913]), ['0']]
[array([ 0.22854357,  0.1345317 ,  0.07386605,  0.04892038,  0.03017075,
        0.00905397,  0.00806961, -0.03600231, -0.01638125, -0.14537424,
        0.01513672,  1.86829909,  0.34748534]), ['0']]
[array([  2.99261720e-01,   1.66630790e-01,   1.31429180e-01,
         3.90201960e-02,   1.23887490e-02,   5.34813398e-03,
        -1.88410218e-04,   3.38895171e-02,   3.11622029e-03,
        -9.65005545e-02,   1.28906250e-02,  -4.79968288e-01,
         3.41130397e-01]), ['0']]
[array([ 0.16914412,  0.13967038,  0.0778976 ,  0.0541475 , -0.02855896,
       -0.02731159, -0.01753208,  0.0186648 , -0.03487352, -0.10713533,
        0.01513672, -0.13788995,  0.34217067]), ['0']]
[array([ 0.10183868,  0.15817884,  0.13117884,  0.04870613,  0.1069281 ,
        0.06286062, -0.01867934,  0.09457327,  0.20536984,  0.12517415,
        0.02041016, -0.56775302,  0.3841203 ]), ['0']]
[array([ 0.2417623 ,  0.07651355,  0.07520189,  0.03796993,  0.04775948,
        0.01205683,  0.01029301, -0.02278673,  0.01622494, -0.17027415,
        0.01357422, -0.17988224,  0.37804073]), ['0']]
[array([ 0.23775942,  0.15131977,  0.10319661, -0.00652185,  0.08491226,
        0.00622002, -0.05824399, -0.02617899, -0.03390494, -0.16298115,
        0.01425781, -0.50735127,  0.34318661]), ['0']]
[array([ 0.2175386 ,  0.17684499,  0.12253079,  0.03342847,  0.05157336,
       -0.01116156, -0.04989334, -0.03324077, -0.02828095, -0.17201213,
        0.01640625,  0.82404508,  0.32837251]), ['0']]
[array([ 0.25703416,  0.15344331,  0.0934342 ,  0.04079826,  0.06521924,
       -0.0172459 , -0.02651515, -0.05420285, -0.02706171, -0.33342012,
        0.01542969,  0.80297603,  0.33813407]), ['0']]
[array([ 0.20499995,  0.14715527,  0.10509388,  0.07866244,  0.08804911,
        0.03044033, -0.0416296 , -0.03357934, -0.02072774, -0.26850629,
        0.0140625 , -0.26968874,  0.34466731]), ['0']]
[array([ 0.17487927,  0.15771645,  0.05086866,  0.02534   ,  0.05085459,
        0.02481001, -0.11823543, -0.01664484, -0.06808984, -0.16849744,
        0.01367188, -0.20224491,  0.33368348]), ['0']]
[array([ 0.24601308,  0.15115802,  0.07103184,  0.01452724,  0.04348388,
        0.06416869, -0.08718491, -0.06682773, -0.01535759, -0.23518444,
        0.01113281, -0.54664946,  0.34490925]), ['0']]
[array([ 0.18828611,  0.14635311,  0.13991357,  0.06705667,  0.07057647,
        0.05277049,  0.03398968,  0.00368811, -0.05615069, -0.14542225,
        0.01328125, -0.43720727,  0.34679779]), ['0']]
[array([ 0.23136682,  0.17078063,  0.12092371,  0.04191546,  0.08270148,
        0.02584711, -0.05057488, -0.01818007, -0.02370474, -0.18965853,
        0.01269531, -0.84761071,  0.3372797 ]), ['0']]
[array([ 0.30563907,  0.14097302,  0.13033666,  0.04856925,  0.10282039,
        0.05120205,  0.00627824, -0.00808753, -0.08719245, -0.23180384,
        0.01044922, -0.2803757 ,  0.34514986]), ['0']]
[array([ 0.23634365,  0.16641887,  0.1313118 ,  0.08506285,  0.08424631,
        0.00613771, -0.01111117, -0.03232647, -0.0386935 , -0.19210765,
        0.01269531,  3.05033957,  0.33924771]), ['0']]
[array([ 0.28353609,  0.16768076,  0.11192422,  0.08752021,  0.13291126,
        0.01377001,  0.03072482, -0.05700204, -0.05999972, -0.15613774,
        0.01591797, -0.60396255,  0.34165365]), ['0']]
[array([ 0.25067664,  0.14895964,  0.09130047,  0.10304147,  0.0982261 ,
        0.01950334,  0.04658073, -0.05335615, -0.0338367 , -0.21182501,
        0.01728516, -0.18469422,  0.344424  ]), ['0']]
[array([ 0.20404179,  0.14659334,  0.13350051,  0.09504654,  0.11038295,
        0.0266032 , -0.01722241, -0.08401568, -0.04953702, -0.22363882,
        0.01328125, -0.22750476,  0.34268161]), ['0']]
[array([ 0.11744371,  0.11773673,  0.06816468,  0.09710183,  0.10190805,
        0.0008561 ,  0.03388871,  0.01393674, -0.05489355, -0.23342768,
        0.01757812,  0.62214173,  0.35160393]), ['0']]
[array([ 0.18336752,  0.1186982 ,  0.03626867,  0.10650398,  0.08077339,
        0.01421872, -0.01553443,  0.00057952, -0.03638082, -0.26457386,
        0.01513672, -0.09918675,  0.34771213]), ['0']]
[array([ 0.29345056,  0.17038902,  0.128576  ,  0.10432596,  0.08748208,
        0.03328653,  0.00934879,  0.01130007, -0.03083825, -0.26909604,
        0.01376953,  0.12202777,  0.34006459]), ['0']]
[array([ 0.23432109,  0.16682796,  0.06431961,  0.07970615,  0.05755132,
        0.05204109,  0.00344152,  0.00523291, -0.0535479 , -0.18581605,
        0.01230469, -1.13863982,  0.34217067]), ['0']]
[array([ 0.34947296,  0.18779713,  0.09729954,  0.04527804,  0.04203064,
       -0.00768934,  0.0269682 , -0.05329661, -0.09348998, -0.21675591,
        0.00947266, -0.92422039,  0.32108534]), ['0']]
[array([ 0.16617838,  0.16529993,  0.14340346,  0.0298312 ,  0.05706535,
        0.02628875,  0.00879007, -0.05768084, -0.08485588, -0.26161961,
        0.01425781,  2.38102323,  0.32766054]), ['0']]
[array([ 0.1916753 ,  0.13637627, -0.06524474,  0.06139045,  0.04746482,
        0.00397634, -0.00476554, -0.05067108, -0.06466691, -0.31268677,
        0.01445313,  0.68726389,  0.34139281]), ['0']]
[array([ 0.22703029,  0.17237745,  0.12651679,  0.06741498, -0.06213253,
       -0.04101334, -0.00689404, -0.06215471, -0.11083056, -0.29748993,
        0.01162109,  0.37735762,  0.32191259]), ['0']]
[array([ 0.29085836,  0.18968305,  0.11637378, -0.00949438,  0.04135053,
        0.02462197,  0.01917943, -0.08388161, -0.08431636, -1.53525298,
        0.01064453, -0.56039908,  0.32024202]), ['0']]
[array([ 0.24097441,  0.17151409,  0.09570801,  0.10321565,  0.00330546,
        0.00331021, -0.02105606, -0.03646252, -0.04361276, -0.27507477,
        0.01318359, -0.91402655,  0.33336991]), ['0']]
[array([ 0.24849553,  0.13848513,  0.11524585,  0.05003438,  0.02029442,
        0.00419196, -0.03303288, -0.07931093, -0.03861398, -0.29643817,
        0.01298828, -0.33445968,  0.33336991]), ['0']]
[array([ 0.23861766,  0.17187914,  0.13401213, -0.02676334, -0.01024679,
        0.02036073, -0.03157496, -0.05166717, -0.04752688, -0.32280153,
        0.01318359,  0.82274518,  0.32024202]), ['0']]
[array([ 0.20203703,  0.17408789,  0.12794364,  0.02601102,  0.03572585,
        0.01577205, -0.03937621, -0.06826764, -0.04849872, -0.25505672,
        0.01328125, -0.69711318,  0.31981414]), ['0']]
[array([ 0.23011047,  0.15998622,  0.10273048,  0.03673397, -0.00146613,
        0.06298106, -0.03812438, -0.091002  , -0.07639619, -0.27197297,
        0.01455078, -0.92720765,  0.3243038 ]), ['0']]
[array([ 0.22388834,  0.19319955,  0.12910598,  0.01533937,  0.0581317 ,
        0.05638594, -0.00457809, -0.04691037, -0.08644175, -0.32837791,
        0.01337891, -1.57374465,  0.32312465]), ['0']]
[array([ 0.29600087,  0.19300037,  0.14402159, -0.00453648,  0.06213622,
        0.02493253,  0.02974356, -0.08365784, -0.05156062, -0.23175463,
        0.01103516, -1.36616279,  0.32272438]), ['0']]
[array([ 0.3487211 ,  0.16900736,  0.13427535, -0.03067187,  0.03598648,
        0.03384963,  0.0707402 , -0.02014431, -0.06239943, -0.38468761,
        0.00996094,  2.45210925,  0.32976237]), ['0']]
[array([  1.71161927e-01,   1.82737862e-01,   1.14194755e-01,
         1.85908451e-02,   4.42470901e-02,   2.34760021e-04,
         5.58626027e-02,   6.71684670e-03,  -2.57255359e-02,
        -2.21560148e-01,   1.21093750e-02,  -1.07345003e+00,
         3.28724171e-01]), ['0']]
[array([ 0.31718602,  0.17284927,  0.09203303,  0.09217883,  0.01954019,
        0.00048386, -0.01495126, -0.00629752, -0.05610917, -0.20387009,
        0.00742187,  0.47230187,  0.33077634]), ['0']]
[array([ 0.21399911,  0.17402177,  0.12746733, -0.02023986,  0.03154408,
        0.02721181, -0.0717187 , -0.02327756, -0.00541154, -0.31787713,
        0.01044922, -0.5487907 ,  0.32766054]), ['0']]
[array([ 0.26367487,  0.18629126,  0.1418259 ,  0.0040588 ,  0.01820933,
        0.0288755 ,  0.02337578, -0.03286334, -0.02657498, -0.2296039 ,
        0.00859375,  1.03511713,  0.32312465]), ['0']]
[array([ 0.29130479,  0.200551  ,  0.15081943,  0.01225358,  0.01291722,
       -0.00060451,  0.03388925, -0.02970023, -0.010786  , -0.2070909 ,
        0.01123047, -0.07619994,  0.32507249]), ['0']]
[array([ 0.22123216,  0.18544757,  0.10195041,  0.05924691,  0.02989022,
        0.03382613,  0.03147936, -0.04374344, -0.03004362, -0.20461455,
        0.0109375 ,  1.17920086,  0.32801799]), ['0']]
[array([ 0.23917677,  0.19023251,  0.16740143,  0.03859625, -0.00563839,
        0.02477535, -0.01193548, -0.06647875, -0.01718945, -0.2275185 ,
        0.01103516, -0.44275667,  0.3243038 ]), ['0']]
[array([ 0.30830357,  0.21139017,  0.13655837,  0.05437378, -0.04103107,
        0.0431423 ,  0.01604715, -0.02315363, -0.01228237, -0.20778667,
        0.01054688, -0.70386831,  0.32150093]), ['0']]
[array([ 0.25530685,  0.20752044,  0.17019399,  0.05182688, -0.00790942,
        0.00065601,  0.02795081, -0.04478263,  0.00745011, -0.26972295,
        0.0109375 , -0.15065198,  0.32272438]), ['0']]
[array([ 0.26880051,  0.19248607,  0.13759569,  0.0197956 , -0.02100918,
       -0.00413649,  0.02720791, -0.05008816, -0.00487618, -0.19749908,
        0.0109375 ,  1.29418469,  0.32468985]), ['0']]
[array([  2.74912727e-01,   1.86030602e-01,   1.42511288e-01,
        -1.25554138e-02,   2.47104558e-02,   5.40482721e-02,
         6.38781149e-04,  -8.61260596e-05,   8.30057108e-03,
        -1.47269617e-01,   1.27929687e-02,   3.96808573e-01,
         3.26200589e-01]), ['0']]
[array([ 0.21634674,  0.19158286,  0.15449205,  0.05217194,  0.05956973,
        0.04256039,  0.01097277, -0.02089236,  0.01067609, -0.10743584,
        0.01396484, -0.46753296,  0.32801799]), ['0']]
[array([ 0.22002875,  0.2002784 ,  0.16096176,  0.06068946,  0.01605919,
        0.00180716,  0.00972145,  0.00111766,  0.0012483 , -0.10691774,
        0.01259766, -0.05981152,  0.3269367 ]), ['0']]
[array([ 0.25519972,  0.18811686,  0.18760317,  0.05333682,  0.00626799,
        0.06377808, -0.01097381, -0.00108893,  0.01849725, -0.07151547,
        0.01347656, -0.1909985 ,  0.32976237]), ['0']]
[array([ 0.23906848,  0.22014271,  0.19602315,  0.06008386,  0.07081476,
        0.12576747,  0.03673307,  0.02881065, -0.00461386, -0.12012548,
        0.01445313,  0.07315847,  0.3265702 ]), ['0']]
[array([ 0.2168393 ,  0.21257865,  0.20113857,  0.05410042,  0.06534309,
        0.15562517, -0.02817559,  0.03237693,  0.00287944, -0.1061347 ,
        0.01455078, -0.43436235,  0.35242338]), ['0']]
[array([ 0.25723666,  0.20053799,  0.17431025,  0.10166944,  0.01850209,
        0.1636522 , -0.01240863,  0.02648147,  0.00477678, -0.10905538,
        0.0125    , -0.64747815,  0.35221996]), ['0']]
[array([ 0.26694902,  0.2129879 ,  0.1901703 ,  0.12670648,  0.04448968,
        0.15932702,  0.01028801,  0.00169961,  0.00592172, -0.08988378,
        0.01425781, -0.25111104,  0.35221996]), ['1']]
[array([ 0.24085483,  0.2306392 ,  0.15656258,  0.09294209,  0.06173949,
        0.13791463,  0.03694599,  0.00832336,  0.001094  , -0.1359545 ,
        0.01191406, -0.79250855,  0.32976237]), ['1']]
[array([ 0.26040129,  0.23670737,  0.18871099,  0.05919131,  0.05390644,
        0.12625434,  0.03167249, -0.00142322, -0.002315  , -0.11245428,
        0.01191406, -0.18874737,  0.3265702 ]), ['1']]
[array([ 0.26449199,  0.23145472,  0.20117851,  0.10963818,  0.05660355,
        0.1152662 , -0.00628949,  0.01861414,  0.00677276, -0.13359537,
        0.01474609, -0.48087892,  0.3265702 ]), ['1']]
[array([ 0.28247562,  0.23240839,  0.23208973,  0.15410197,  0.09167449,
        0.09858689, -0.02213042,  0.03172592,  0.01325706, -0.09953939,
        0.01396484, -0.60576418,  0.32837251]), ['1']]
[array([ 0.26293107,  0.24617511,  0.21298471,  0.12281508,  0.06436926,
        0.1121324 ,  0.01617914,  0.00583958,  0.02632688, -0.11628968,
        0.01416016, -0.92589656,  0.32837251]), ['1']]
[array([ 0.25357668,  0.23648937,  0.2237276 ,  0.11273581,  0.03831504,
        0.09695663, -0.00350178,  0.03348277,  0.04009579, -0.07556535,
        0.01416016, -0.75113552,  0.3239143 ]), ['1']]
[array([ 0.27705035,  0.24585265,  0.21237808,  0.11646548,  0.09820083,
        0.11647671,  0.02733108,  0.0269503 ,  0.0521714 , -0.09877006,
        0.01416016,  0.46686356,  0.32801799]), ['1']]
[array([ 0.2737265 ,  0.23949433,  0.21795974,  0.14474683,  0.06872819,
        0.17832356,  0.04955975,  0.02400361,  0.0537986 , -0.0861095 ,
        0.01503906, -0.39671044,  0.35201559]), ['1']]
[array([ 0.25161537,  0.26271415,  0.21777049,  0.11685632,  0.06484745,
        0.18070196,  0.05025573,  0.02887631,  0.05609154, -0.09017853,
        0.01660156,  2.24525841,  0.32801799]), ['1']]
[array([ 0.28278244,  0.25117527,  0.27747866,  0.18237154,  0.06932319,
        0.14393206,  0.07203499,  0.04731104,  0.04974825, -0.08644344,
        0.01708984, -0.87610945,  0.329073  ]), ['1']]
[array([ 0.26616006,  0.24825211,  0.26633352,  0.16036627,  0.07803589,
        0.13244784,  0.08053593,  0.03056382,  0.04355412, -0.11520105,
        0.01591797, -0.41260989,  0.32872417]), ['1']]
[array([ 0.22504784,  0.25046751,  0.2589739 ,  0.15607898,  0.08849314,
        0.08420425,  0.12004661,  0.0401783 ,  0.05520427, -0.08649067,
        0.01660156, -0.00951133,  0.32766054]), ['1']]
[array([ 0.27282558,  0.24415766,  0.2686612 ,  0.17853072,  0.08093873,
        0.14680931,  0.16168322,  0.03842657,  0.07673425, -0.09620488,
        0.01601562, -0.67975788,  0.33461084]), ['1']]
[array([ 0.29630338,  0.25660516,  0.27103338,  0.19173126,  0.06980922,
        0.12751748,  0.18993589,  0.03639862,  0.0958192 , -0.0531287 ,
        0.01708984,  2.52442001,  0.34165365]), ['1']]
[array([ 0.29548644,  0.24386652,  0.27221643,  0.17109303,  0.06553514,
        0.12521448,  0.22547389,  0.0091276 ,  0.06751179, -0.03064866,
        0.01728516,  1.33268539,  0.3557432 ]), ['1']]
[array([ 0.2786205 ,  0.27286146,  0.28691481,  0.17085512,  0.09261707,
        0.11272484,  0.21884202,  0.0448058 ,  0.09004485, -0.02887723,
        0.01875   , -0.27335194,  0.35118834]), ['1']]
[array([ 0.3063937 ,  0.25625584,  0.28512176,  0.20207136,  0.10006326,
        0.13962204,  0.20584169,  0.04006449,  0.07877574, -0.01130872,
        0.01591797, -0.80915215,  0.34165365]), ['1']]
[array([ 0.3091232 ,  0.27889652,  0.24191803,  0.18326997,  0.08088341,
        0.10444765,  0.20327387,  0.03839327,  0.08000206, -0.03668362,
        0.01835938,  0.18703519,  0.33813407]), ['1']]
[array([ 0.31226587,  0.28800327,  0.28447059,  0.19291996,  0.06371038,
        0.11850761,  0.23701809,  0.06709472,  0.09446371, -0.01763427,
        0.01826172,  1.83759706,  0.3559308 ]), ['1']]
[array([ 0.31241345,  0.2745861 ,  0.24400182,  0.1678506 ,  0.0506047 ,
        0.06708633,  0.21448374,  0.06841324,  0.09340042, -0.0219582 ,
        0.01708984, -0.75719773,  0.3559308 ]), ['1']]
[array([ 0.30026624,  0.28124792,  0.25174363,  0.15990927,  0.0668707 ,
        0.11029224,  0.23576927,  0.08645082,  0.10890829,  0.01670366,
        0.01806641,  0.48035098,  0.35536555]), ['1']]
[array([ 0.28299108,  0.27526968,  0.26697749,  0.17414635,  0.07864565,
        0.0502066 ,  0.20390113,  0.06991913,  0.08651812,  0.01450044,
        0.01640625, -0.34218592,  0.33305406]), ['1']]
[array([ 0.26193699,  0.28773386,  0.24818023,  0.17383536,  0.068384  ,
        0.0622569 ,  0.23077049,  0.0629702 ,  0.09966887,  0.00879225,
        0.01591797, -0.40844943,  0.3557432 ]), ['1']]
[array([ 0.27560859,  0.28198407,  0.29797506,  0.17200203,  0.05339452,
        0.08800083,  0.23291013,  0.06826843,  0.09997669, -0.00648822,
        0.01699219, -1.21257586,  0.35517549]), ['1']]
[array([ 0.33029792,  0.28223664,  0.27979093,  0.18889638,  0.09596301,
        0.08489975,  0.2642781 ,  0.07881278,  0.09812886, -0.01080461,
        0.01933594,  1.64385315,  0.3557432 ]), ['1']]
[array([ 0.40395519,  0.27240335,  0.27930835,  0.2170585 ,  0.15685871,
        0.09071998,  0.27730953,  0.10171348,  0.12068533,  0.00112291,
        0.01445313, -0.05089345,  0.35648879]), ['1']]
[array([ 0.34930535,  0.28818582,  0.31252492,  0.20512769,  0.16170624,
        0.0645544 ,  0.31762975,  0.10698756,  0.12257605,  0.01483775,
        0.01865234, -0.6760003 ,  0.35611759]), ['1']]
[array([ 0.34573844,  0.31999788,  0.30081424,  0.20477799,  0.13518658,
        0.08517262,  0.33694398,  0.10538596,  0.1326027 ,  0.01039308,
        0.02333984, -0.25677168,  0.3559308 ]), ['1']]
[array([ 0.38364822,  0.3073527 ,  0.31610014,  0.22159792,  0.14127623,
        0.08669833,  0.29467317,  0.11175031,  0.13198389, -0.00558448,
        0.01796875,  0.39617698,  0.3559308 ]), ['1']]
[array([ 0.37282014,  0.32289909,  0.30596828,  0.19202537,  0.17447671,
        0.06963616,  0.23916452,  0.11966614,  0.14383624, -0.00357714,
        0.01455078,  3.05127853,  0.33176717]), ['1']]
[array([ 0.36417278,  0.29319346,  0.30385031,  0.25356029,  0.17296172,
        0.12963222,  0.20672735,  0.13302539,  0.17227628,  0.0455    ,
        0.01591797, -0.22824562,  0.3566732 ]), ['1']]
[array([ 0.41144499,  0.32673577,  0.29962893,  0.25663994,  0.15020914,
        0.09523061,  0.12244332,  0.14075776,  0.16415687,  0.02398751,
        0.01298828,  1.41844539,  0.3355188 ]), ['1']]
[array([ 0.37152137,  0.31695008,  0.3454455 ,  0.23891403,  0.14895985,
        0.08496422,  0.14138869,  0.15938408,  0.15044428,  0.02221754,
        0.01376953,  0.40424765,  0.32872417]), ['1']]
[array([ 0.3524077 ,  0.33998032,  0.31321092,  0.24486927,  0.1806173 ,
        0.08553944,  0.11196661,  0.15983848,  0.16292185,  0.01216643,
        0.01640625, -0.84107148,  0.3265702 ]), ['1']]
[array([ 0.32205567,  0.33482146,  0.34127316,  0.24588197,  0.1883374 ,
        0.10943844,  0.10653143,  0.14482787,  0.16754699,  0.03989313,
        0.01630859, -0.10853785,  0.32801799]), ['1']]
[array([ 0.38821756,  0.32142752,  0.31380874,  0.23376226,  0.18259812,
        0.02198763,  0.11662999,  0.17040304,  0.17941061,  0.07767835,
        0.01416016, -0.21069166,  0.33368348]), ['1']]
[array([ 0.39256956,  0.32591223,  0.33966395,  0.23902137,  0.20418395,
        0.12974085,  0.14304016,  0.18457202,  0.18057153,  0.06405961,
        0.01611328, -0.97434338,  0.33430391]), ['1']]
[array([ 0.42167913,  0.35286036,  0.31750238,  0.2872303 ,  0.20682035,
        0.15078186,  0.13822395,  0.16895227,  0.15321735,  0.04441178,
        0.01513672, -0.97998519,  0.3314394 ]), ['1']]
[array([ 0.38074875,  0.34661648,  0.32212324,  0.27654515,  0.22640998,
        0.16722019,  0.16340903,  0.1710089 ,  0.17495133,  0.0093395 ,
        0.01533203,  1.56559428,  0.33491561]), ['1']]
[array([ 0.38864765,  0.37790152,  0.30746044,  0.25700477,  0.22459672,
        0.17496419,  0.16897302,  0.18550578,  0.19344918,  0.04160267,
        0.01230469, -0.78235166,  0.32730013]), ['1']]
[array([ 0.40726953,  0.37872563,  0.32139292,  0.240817  ,  0.23182414,
        0.16397888,  0.21192753,  0.18744637,  0.17421993,  0.06310367,
        0.01201172,  1.1699487 ,  0.3265702 ]), ['1']]
[array([ 0.39687893,  0.39586999,  0.30549222,  0.25696546,  0.21968901,
        0.1976295 ,  0.20639859,  0.18303418,  0.17166987,  0.06555777,
        0.01269531, -0.5499795 ,  0.32352127]), ['1']]
[array([ 0.38259609,  0.39025893,  0.27958761,  0.28091895,  0.22691729,
        0.21331961,  0.17872915,  0.18217263,  0.16982546,  0.041404  ,
        0.01201172, -1.54127577,  0.32730013]), ['1']]
[array([ 0.35447677,  0.41306382,  0.27461434,  0.27651069,  0.23574598,
        0.22793057,  0.18348761,  0.18251481,  0.17105642,  0.06729585,
        0.01289062, -0.84718129,  0.309691  ]), ['1']]
[array([ 0.39451151,  0.39327445,  0.21981186,  0.23538864,  0.24713343,
        0.22167298,  0.21901006,  0.19080318,  0.1964976 ,  0.1013842 ,
        0.01347656, -1.28742036,  0.3102305 ]), ['1']]
[array([ 0.37922181,  0.41336802,  0.21570758,  0.23492325,  0.17949918,
        0.23313462,  0.2181433 ,  0.18519763,  0.17857849,  0.08655813,
        0.01347656,  0.01023827,  0.30630517]), ['1']]
[array([ 0.37969853,  0.40577542,  0.2328781 ,  0.21798035,  0.20519803,
        0.24079148,  0.20841025,  0.19274452,  0.16224236,  0.09099012,
        0.0140625 ,  0.22996553,  0.31076339]), ['1']]
[array([ 0.40141557,  0.41186652,  0.22992385,  0.15074627,  0.1977511 ,
        0.24668912,  0.20537502,  0.1984642 ,  0.18498336,  0.06817975,
        0.01162109,  0.49302801,  0.3102305 ]), ['1']]
[array([ 0.36148519,  0.41519482,  0.22710872,  0.19833943,  0.18097587,
        0.24361061,  0.22772972,  0.17265438,  0.16699726,  0.09377345,
        0.01357422,  0.32009283,  0.3123239 ]), ['1']]
[array([ 0.39376291,  0.42765273,  0.27183408,  0.22381409,  0.15286518,
        0.23472251,  0.20421774,  0.18685638,  0.15458156,  0.0772833 ,
        0.01230469, -0.71006725,  0.30859146]), ['1']]
[array([ 0.42476227,  0.37824075,  0.31102426,  0.18746291,  0.14223989,
        0.2158963 ,  0.2111226 ,  0.19832155,  0.16470575,  0.07309864,
        0.01152344, -0.55952409,  0.32108534]), ['1']]
[array([ 0.38772112,  0.42503866,  0.28711868,  0.16635363,  0.12101545,
        0.18730975,  0.22688012,  0.20811414,  0.19170073,  0.08331638,
        0.01103516, -1.10759367,  0.31383027]), ['1']]
[array([ 0.42337471,  0.38653483,  0.30101477,  0.1932859 ,  0.12147672,
        0.16504594,  0.19413996,  0.19387711,  0.18016337,  0.11608806,
        0.01318359,  0.41606628,  0.319382  ]), ['1']]
[array([ 0.39383071,  0.43094125,  0.28542209,  0.17980411,  0.11084404,
        0.17963857,  0.16809477,  0.20759328,  0.20249567,  0.12414733,
        0.01367188, -1.31396353,  0.30688813]), ['1']]
[array([ 0.38053572,  0.40900463,  0.29696161,  0.21076058,  0.11309511,
        0.12412936,  0.15108857,  0.20708718,  0.22141057,  0.10457328,
        0.01425781, -0.88528314,  0.309691  ]), ['1']]
[array([ 0.29137365,  0.41802645,  0.31048784,  0.19807663,  0.11914802,
        0.12991368,  0.10206615,  0.19600266,  0.220675  ,  0.11472749,
        0.01308594, -0.65554846,  0.31128981]), ['1']]
[array([ 0.37632611,  0.38729253,  0.28963513,  0.21892865,  0.13958417,
        0.09087394,  0.12218671,  0.21804148,  0.23093195,  0.11848926,
        0.01416016, -0.06714342,  0.32108534]), ['1']]
[array([ 0.36734098,  0.39785011,  0.2853273 ,  0.08637423,  0.0838296 ,
        0.08017161,  0.01943652,  0.19922031,  0.21244784,  0.14037372,
        0.01435547, -0.30229145,  0.31333393]), ['1']]
[array([ 0.34573809,  0.38081383,  0.28014207,  0.21693   ,  0.1785035 ,
        0.01979792,  0.01165946,  0.17863016,  0.20706136,  0.11262099,
        0.01455078, -0.7177704 ,  0.31850461]), ['1']]
[array([ 0.35724052,  0.38596029,  0.30382985,  0.20492002,  0.17225277,
        0.08559625,  0.15031414,  0.13736097,  0.21195678,  0.12307758,
        0.01474609,  0.20287451,  0.31981414]), ['1']]
[array([ 0.37459387,  0.35281496,  0.24832306,  0.19415899,  0.17890179,
        0.12275214,  0.05537291,  0.1326179 ,  0.21032273,  0.0934191 ,
        0.01298828, -0.58048172,  0.32507249]), ['1']]
[array([ 0.33877327,  0.35537642,  0.25829235,  0.15057814,  0.16999487,
        0.11390561,  0.06132895,  0.13376241,  0.1828141 ,  0.07498488,
        0.01337891, -0.32524137,  0.31850461]), ['1']]
[array([ 0.34166071,  0.32347056,  0.23112332,  0.13324383,  0.19830885,
        0.13485146,  0.05287071,  0.09085825,  0.17223085,  0.0809295 ,
        0.01347656, -0.59339996,  0.32066573]), ['1']]
[array([ 0.31643987,  0.34219658,  0.24848323,  0.16916769,  0.2035348 ,
        0.12785919,  0.0013099 ,  0.12449917,  0.16325549,  0.02935679,
        0.01445313, -0.41060922,  0.3239143 ]), ['1']]
[array([ 0.31794804,  0.3395115 ,  0.19433465,  0.15229346,  0.12006601,
        0.13912655,  0.08786015,  0.05075689,  0.1308556 ,  0.00664109,
        0.01318359, -0.02835627,  0.30859146]), ['1']]
[array([ 0.15281113,  0.27170936,  0.18347442, -1.53525298,  0.13240879,
        0.16593426,  0.09824837,  0.0988433 ,  0.14223298, -0.03293961,
        0.01376953,  0.77252914,  0.35794263]), ['1']]
[array([ 0.29141894,  0.31996083, -1.53525298, -1.53525298,  0.08324787,
        0.1214336 ,  0.09098291,  0.04581742,  0.12215381, -0.03704359,
        0.01396484, -0.03180086,  0.3013364 ]), ['1']]
[array([ 0.20203113,  0.287437  ,  0.17783655,  0.12625592,  0.05300835,
        0.06652157,  0.12207944,  0.11043601,  0.10661285, -0.04228199,
        0.01523437,  1.17298762,  0.32766054]), ['1']]
[array([ 0.24938503,  0.24271454, -1.53525298, -1.53525298, -0.03642685,
        0.00711451,  0.09482621,  0.0964441 ,  0.08392904, -0.05232799,
        0.015625  , -0.28909593,  0.314321  ]), ['1']]
[array([ 0.22947141,  0.26414194, -1.53525298, -1.53525298,  0.05573408,
       -1.53525298,  0.04379494,  0.01579664, -0.02237091, -0.09617381,
        0.01533203, -0.36252955,  0.29420081]), ['1']]
[array([ 0.2807453 ,  0.26821235,  0.10266503, -1.53525298,  0.05660162,
        0.09017821, -0.09539891, -0.00747003,  0.08107621, -0.0931348 ,
        0.01308594, -0.27283981,  0.30326691]), ['1']]
[array([ 0.23687181,  0.02125783, -1.53525298, -1.53525298, -0.10524802,
       -1.53525298, -1.53525298,  0.06379927,  0.06688356, -0.1461565 ,
        0.01425781, -0.10263158,  0.3816034 ]), ['1']]
[array([-1.53525298,  0.14225098, -1.53525298, -0.0016525 , -1.53525298,
       -1.53525298, -1.53525298,  0.11040223,  0.02459004, -0.12159547,
        0.01357422, -0.10263158,  0.36921306]), ['1']]
[array([ 0.21881411,  0.191942  , -1.53525298, -1.53525298,  0.10030473,
       -1.53525298, -1.53525298,  0.00617341,  0.00834704, -0.13826434,
        0.01474609, -0.10263158,  0.30450784]), ['1']]
[array([ 0.24927142,  0.24345467, -1.53525298, -1.53525298, -0.02937866,
       -1.53525298, -1.53525298, -0.05824747, -0.02844282, -1.53525298,
        0.01494141, -0.32319206,  0.30389181]), ['1']]
[array([ 0.17588609,  0.20758628, -0.04145162, -1.53525298,  0.0096504 ,
       -1.53525298, -1.53525298, -0.06611819, -0.17429922, -1.53525298,
        0.01171875, -0.18497823,  0.30450784]), ['1']]
[array([ 0.15958488,  0.22090598,  0.14569261, -1.53525298, -1.53525298,
       -0.02633023, -1.53525298, -1.53525298, -0.17666881, -1.53525298,
        0.01220703, -0.17330872,  0.3102305 ]), ['1']]
[array([ 0.15860388,  0.26341067, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.1321677 , -1.53525298,
        0.01445313, -0.53889666,  0.30746336]), ['1']]
[array([ 0.22250407,  0.2097042 , -1.53525298, -1.53525298, -0.06789348,
        0.01973195, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01152344, -0.16913302,  0.30511525]), ['1']]
[array([ 0.23516457,  0.24007533, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298,  0.01618521, -1.53525298, -0.17443129, -1.53525298,
        0.01376953, -0.32707689,  0.30688813]), ['1']]
[array([-0.05371702,  0.24287501, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.17217674, -1.53525298,
        0.01367188, -0.34392784,  0.3123239 ]), ['1']]
[array([-0.11780403,  0.18535838,  0.06109123, -1.53525298,  0.01355604,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01347656, -0.15629116,  0.30859146]), ['1']]
[array([-0.10474626,  0.26071018, -1.53525298, -0.03494881, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01298828, -0.21762545,  0.31333393]), ['1']]
[array([-0.09289807,  0.17745733, -1.53525298, -1.53525298, -0.01852849,
       -1.53525298, -1.53525298, -0.25022087, -1.53525298, -1.53525298,
        0.01435547, -0.16398101,  0.3123239 ]), ['1']]
[array([ 0.16392933,  0.13919459,  0.07844379,  0.09941717, -1.53525298,
       -0.33576536, -0.33576536, -1.53525298, -1.53525298, -1.53525298,
        0.01503906, -0.18940583,  0.33044097]), ['1']]
[array([-0.04102581,  0.05301285, -1.53525298,  0.02601744, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01386719,  0.        ,  0.33611374]), ['1']]
[array([ 0.20428026,  0.09031998, -1.53525298,  0.07055673, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01318359, -0.10263158,  0.33209248]), ['1']]
[array([-0.20620009,  0.09578983, -1.53525298,  0.0319147 , -0.04457561,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01347656, -0.10263158,  0.33461084]), ['1']]
[array([-1.53525298,  0.19702104, -1.53525298, -0.00783484, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01513672, -0.37880995,  0.31576079]), ['1']]
[array([-0.07219808,  0.10832566, -1.53525298,  0.02231183, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01191406, -0.10263158,  0.314321  ]), ['1']]
[array([ 0.06252849, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -0.09373302, -1.53525298, -1.53525298,
        0.01445313,  0.        ,  0.3656218 ]), ['1']]
[array([-1.53525298, -1.53525298,  0.16726084,  0.0538438 , -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01318359,  0.        ,  0.31981414]), ['1']]
[array([ 0.2340859 ,  0.15819895, -1.53525298, -0.05639784, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01201172, -0.11674333,  0.31383027]), ['1']]
[array([ 0.0652159 ,  0.18901692,  0.1322107 , -1.53525298, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01279297, -0.10263158,  0.32066573]), ['1']]
[array([ 0.19385209,  0.14773847,  0.01365617,  0.02359814, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.0140625 ,  0.        ,  0.3162303 ]), ['1']]
[array([ 0.17271792,  0.10302802, -1.53525298,  0.01181024, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01513672,  3.9       ,  0.31715436]), ['1']]
[array([ 0.2588712 ,  0.12420643,  0.10420654, -0.00449721, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01269531, -0.10263158,  0.31805918]), ['1']]
[array([ 0.14891901,  0.19163158,  0.18272291, -0.0365634 , -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01318359, -0.10263158,  0.31850461]), ['1']]
[array([ 0.08644644,  0.10963964, -1.53525298,  0.03826059, -0.08404092,
       -1.53525298, -1.53525298, -1.53525298, -0.09659452, -1.53525298,
        0.01494141,  0.        ,  0.33756636]), ['1']]
[array([ -5.99398683e-02,   2.00828756e-01,   1.45434351e-02,
         3.68185674e-02,  -5.80375995e-04,  -1.53525298e+00,
        -1.53525298e+00,  -1.53525298e+00,  -1.58812769e-01,
        -1.53525298e+00,   1.43554687e-02,  -1.02631579e-01,
         3.16694788e-01]), ['1']]
[array([-1.53525298,  0.16646306,  0.03561814,  0.01234625, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01386719,  0.        ,  0.31715436]), ['1']]
[array([-0.20172103,  0.15377946,  0.11025655,  0.03273753, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01425781,  3.9       ,  0.32150093]), ['1']]
[array([ 0.26501656,  0.1728598 ,  0.11499513,  0.00863498, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -0.09969789, -1.53525298,
        0.01259766, -0.10263158,  0.31850461]), ['1']]
[array([ 0.02484702, -1.53525298,  0.06139276,  0.0528566 , -0.09197775,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01142578,  0.        ,  0.33044097]), ['1']]
[array([ 0.13606647,  0.15749604,  0.14274472,  0.01049325, -1.53525298,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01171875, -0.19543123,  0.32191259]), ['1']]
[array([ 0.22616815,  0.13706527,  0.13976183,  0.04730532, -0.08558227,
       -1.53525298, -1.53525298, -1.53525298, -1.53525298, -1.53525298,
        0.01181641, -0.2010389 ,  0.32468985]), ['1']]
[array([ 0.20522793,  0.16526381,  0.07810158,  0.06522401,  0.04773434,
       -0.1783144 , -1.53525298, -1.53525298, -0.20493314, -1.53525298,
        0.01132812,  0.        ,  0.32024202]), ['1']]
[array([ 0.32454593,  0.20178175,  0.19534847,  0.08194923, -0.0443415 ,
       -0.04933484, -1.53525298, -0.11806803, -0.1660153 , -1.53525298,
        0.00908203, -0.2924627 ,  0.32191259]), ['0']]
[array([ 0.21636838,  0.16721242,  0.15577684,  0.06706287,  0.04148506,
       -0.0452802 , -1.53525298, -1.53525298, -0.17067469, -0.26881631,
        0.01103516, -0.2718738 ,  0.32272438]), ['0']]
[array([ 0.25905059,  0.09276484,  0.17827112,  0.10040495,  0.00639632,
       -0.15739415, -1.53525298, -0.08973286, -0.07004222, -0.31790294,
        0.01005859,  0.        ,  0.3314394 ]), ['0']]
[array([ 0.28140606,  0.1400075 ,  0.18460785,  0.08186493, -0.01214438,
       -0.01172515, -0.05883335, -0.10620748, -0.07002453, -0.38693145,
        0.009375  , -0.14456826,  0.330103  ]), ['0']]
[array([ 0.35216535,  0.15704198,  0.13472581,  0.11634584,  0.02107223,
       -0.22582717, -0.01566716, -0.05283882, -0.04619732, -0.18872736,
        0.00947266,  1.25728146,  0.33273589]), ['0']]
[array([ 0.36945667,  0.1724723 ,  0.20299306,  0.1139728 ,  0.01410975,
       -0.03804157, -0.0401732 , -0.06235309, -0.0541169 , -0.28144369,
        0.00683594, -0.13418062,  0.32545179]), ['0']]
[array([ 0.28049979,  0.15306195,  0.19397882,  0.09750278,  0.00570034,
        0.02858839, -0.02377818, -0.05841741, -0.034287  , -0.24326347,
        0.00947266, -0.25776858,  0.33209248]), ['0']]
[array([ 0.35719874,  0.20415732,  0.16981639,  0.1004252 ,  0.06810097,
       -0.04562547, -0.00730369, -0.11714115, -0.13074272, -0.37143176,
        0.01035156, -0.31795926,  0.32150093]), ['0']]
[array([ 0.26053752,  0.20065863,  0.12630941,  0.11738914,  0.05389357,
        0.04871447,  0.04202514, -0.02716002, -0.03158828, -0.26953714,
        0.01337891, -0.33325633,  0.33336991]), ['0']]
[array([-0.01458754,  0.16613834,  0.16334747,  0.07480818,  0.08004863,
       -0.01246707,  0.01071564, -0.02054714, -0.01371101, -0.16875526,
        0.01494141, -0.1098108 ,  0.33399481]), ['0']]
[array([ 0.2511557 ,  0.15619512,  0.14555143,  0.09331119,  0.06399172,
        0.0396136 , -0.02380915, -0.00404974, -0.03950011, -0.17615866,
        0.01347656, -0.17669059,  0.33924771]), ['0']]
[array([ 0.19967113,  0.21009423,  0.18170064,  0.11064457,  0.06072202,
        0.06529515,  0.02341902,  0.00532385,  0.03215848, -0.14855471,
        0.01328125, -0.29514272,  0.32730013]), ['0']]
[array([ 0.03473106,  0.18612838,  0.16540208,  0.10199317,  0.06212781,
        0.07096412,  0.06167722, -0.00913528,  0.00846594, -0.09296545,
        0.01816406, -0.25171048,  0.33897197]), ['0']]
[array([  2.01229742e-01,   1.66339005e-01,   1.51418270e-01,
         1.03464109e-01,   1.06746565e-01,   2.46411740e-02,
         4.56576530e-02,   2.06291169e-02,   3.18611958e-04,
        -1.12060044e-01,   1.64062500e-02,   3.38454170e+00,
         3.45627112e-01]), ['0']]
[array([-0.01394501,  0.17407993,  0.14643689,  0.09296019,  0.0809383 ,
        0.05714589,  0.05010983,  0.01079504,  0.03706743, -0.18575702,
        0.01787109, -0.31180024,  0.34860761]), ['0']]
[array([ 0.18346215,  0.17009934,  0.19405585,  0.10181135,  0.04181888,
        0.07929708,  0.06984846,  0.02637302,  0.01112655, -0.10251737,
        0.01542969, -0.65660208,  0.34368581]), ['0']]
[array([ 0.23117128,  0.19504884,  0.17882575,  0.07720861,  0.11311831,
        0.03399227, -0.00779835,  0.01931537, -0.0102166 , -0.1650411 ,
        0.01630859, -0.45110184,  0.33581729]), ['0']]
[array([ 0.23187138,  0.23151261,  0.18564316,  0.06441013,  0.11123788,
        0.05266287,  0.04272981,  0.04431953,  0.01849183, -0.15491222,
        0.015625  , -0.13313336,  0.32730013]), ['0']]
[array([ 0.21179235,  0.20911788,  0.17866667,  0.12933418,  0.09519436,
        0.05846165,  0.036286  ,  0.06126086, -0.01684453, -0.15476121,
        0.01416016,  2.86574737,  0.33785115]), ['0']]
[array([ 0.19803065,  0.21617839,  0.15199212,  0.11138039,  0.08804228,
        0.05145358,  0.03320445,  0.03874624,  0.00337907, -0.15202082,
        0.01308594, -0.48397929,  0.32730013]), ['0']]
[array([ 0.15469895,  0.17962948,  0.12970871,  0.09185665,  0.06306478,
        0.07246226,  0.04273615,  0.04349789,  0.01690443, -0.20079517,
        0.01416016, -0.46259688,  0.34926731]), ['0']]
[array([ 0.15765544,  0.20437546,  0.18096543,  0.07226365,  0.08670322,
        0.09248666, -0.00174198,  0.02536064,  0.01203561, -0.21973765,
        0.01591797, -0.4983695 ,  0.32872417]), ['0']]
[array([ 0.11398643,  0.21192569,  0.17439226,  0.12151705,  0.10604144,
        0.06678357,  0.01769531,  0.05638468,  0.01370608, -0.1297191 ,
        0.015625  , -0.45310213,  0.3372797 ]), ['0']]
[array([ 0.165208  ,  0.2334162 ,  0.16247037,  0.12593476,  0.09139373,
        0.05414252,  0.02749474,  0.03624814, -0.0118639 , -0.20103181,
        0.01601562, -0.50269329,  0.32191259]), ['0']]
[array([ 0.19290417,  0.12185604,  0.21018767,  0.1221337 ,  0.11801528,
        0.04465657,  0.00046865,  0.00093541,  0.00055497, -0.12282443,
        0.01503906, -0.2685354 ,  0.34490925]), ['0']]
[array([ 0.14138304,  0.18655987,  0.17132928,  0.14885294,  0.07215201,
        0.06223551,  0.03452042,  0.03505606,  0.01058366, -0.12708859,
        0.01523437, -0.76273194,  0.33841517]), ['0']]
[array([ 0.20686101,  0.21823517,  0.08963131,  0.14566581,  0.02477441,
        0.06700165,  0.02141775,  0.0329804 , -0.02800241, -0.15241924,
        0.01455078, -0.53972565,  0.33581729]), ['0']]
[array([ 0.22441511,  0.2057657 ,  0.21649499,  0.1266756 ,  0.11827329,
        0.06956419,  0.07415941,  0.05520634, -0.0194242 , -0.16714451,
        0.01582031, -0.97186486,  0.33813407]), ['0']]
[array([ 0.23581282,  0.22365343,  0.17961774,  0.11717308,  0.09844571,
        0.0486077 ,  0.00178854,  0.03223415,  0.00161294, -0.11668657,
        0.01513672, -0.7286803 ,  0.3269367 ]), ['0']]
[array([ 0.30556372,  0.18754665,  0.22235114,  0.13983732,  0.09193277,
        0.06744798,  0.01419472,  0.02978069, -0.02188108, -0.13124046,
        0.01240234,  1.27907384,  0.33305406]), ['0']]
[array([ 0.275985  ,  0.22063047,  0.22180432,  0.1308257 ,  0.09709289,
        0.07159703,  0.05602468,  0.03384067,  0.02309522, -0.14041899,
        0.01328125, -0.65136367,  0.329073  ]), ['0']]
[array([ 0.2334968 ,  0.23014745,  0.20129615,  0.14096688,  0.12845707,
        0.0743005 ,  0.03381752,  0.04167394, -0.00118269, -0.13972818,
        0.01669922,  0.48725238,  0.3314394 ]), ['0']]
[array([ 0.21031493,  0.19725077,  0.2166844 ,  0.11988362,  0.09669123,
        0.08292454,  0.01602564,  0.01284992,  0.00685627, -0.11642866,
        0.01748047,  0.72335018,  0.33176717]), ['0']]
[array([ 0.23695225,  0.2241932 ,  0.1860907 ,  0.14114031,  0.10213459,
        0.1091165 ,  0.06443916,  0.02922328, -0.01170359, -0.19818753,
        0.01435547,  0.96338424,  0.3372797 ]), ['0']]
[array([ 0.26782583,  0.21930277,  0.18569764,  0.12586344,  0.07756499,
        0.06868106,  0.05032902, -0.00700776, -0.01635196, -0.17451272,
        0.01435547, -0.27298805,  0.32545179]), ['0']]
[array([ 0.18965592,  0.22871229,  0.17506551,  0.05800403,  0.06964035,
        0.04494711,  0.01070955, -0.01884405,  0.00299035, -0.15425523,
        0.01474609, -0.04580901,  0.32352127]), ['0']]
[array([ 0.21611534,  0.19749112,  0.12428355,  0.08110805,  0.04333572,
       -0.02153953,  0.01055934, -0.02157933, -0.05779962, -0.17953342,
        0.01552734, -0.73958368,  0.32232038]), ['0']]
[array([ 0.21643796,  0.1844784 ,  0.09388278,  0.0562959 ,  0.0657655 ,
        0.04433591,  0.0345809 , -0.03209747, -0.06225408, -0.15601305,
        0.01503906, -0.28159677,  0.3265702 ]), ['0']]
[array([ 0.16884862,  0.19594482,  0.16827377,  0.08975436,  0.11253273,
        0.10003727, -0.01206261, -0.03780386, -0.01975423, -0.1704802 ,
        0.01289062, -0.31085866,  0.3403335 ]), ['0']]
[array([ 0.15599265,  0.16929918,  0.18538975,  0.0879224 ,  0.08039628,
        0.07214532,  0.03317343, -0.03696363, -0.01446639, -0.15635263,
        0.01650391,  1.03418625,  0.33491561]), ['0']]
[array([  2.32723104e-01,   1.99823960e-01,   1.40697892e-01,
         1.04296717e-01,   4.89249601e-02,   7.16520123e-02,
         1.00428501e-03,  -4.67955373e-02,  -3.81743508e-02,
        -1.22972374e-01,   1.50390625e-02,   1.68119743e+00,
         3.29073004e-01]), ['0']]
[array([ 0.1298031 ,  0.20725029,  0.13897111,  0.09777736,  0.06566698,
        0.06805166,  0.02203832, -0.00846584, -0.03176637, -0.09417773,
        0.01796875, -0.51641995,  0.32730013]), ['0']]
[array([ 0.1382366 ,  0.16918861,  0.10660977,  0.10475406,  0.0652731 ,
        0.05306566, -0.00334018,  0.01059121, -0.01642554, -0.0808396 ,
        0.01513672,  3.07964108,  0.34242689]), ['0']]
[array([ 0.1614724 ,  0.17179191,  0.12351688,  0.02584477,  0.07197141,
        0.0608505 ,  0.04210194,  0.0038216 , -0.03247187, -0.08483798,
        0.01728516, -0.09745254,  0.34466731]), ['0']]
[array([ 0.17265766,  0.14517216,  0.17533188,  0.06527418,  0.10007669,
        0.06090166,  0.08047122,  0.01089598, -0.02610561, -0.08604699,
        0.01484375, -0.64538173,  0.35118834]), ['0']]
[array([ 0.2658818 ,  0.20607581,  0.16981761,  0.13324695,  0.05180425,
        0.01180541,  0.04631668,  0.01235139,  0.01225838, -0.11042435,
        0.01435547, -0.33699932,  0.33273589]), ['0']]
[array([ 0.2199506 ,  0.16899009,  0.15893127,  0.1454502 ,  0.10530958,
        0.08694459,  0.01417926, -0.00166852, -0.00259109, -0.11779039,
        0.01396484, -0.11467015,  0.34609918]), ['0']]
[array([ 0.23729808,  0.18917743,  0.14373342,  0.09026307,  0.09415161,
        0.06650125,  0.04826367,  0.03005924, -0.00435701, -0.11489374,
        0.0140625 , -0.05604602,  0.34368581]), ['0']]
[array([ 0.17404639,  0.16012291,  0.16954051,  0.13443895,  0.09838836,
        0.06651516,  0.01625298,  0.00707545, -0.0034825 , -0.12403772,
        0.01865234,  0.1256265 ,  0.34586378]), ['0']]
[array([ 0.24641488,  0.15811053,  0.20490106,  0.09176562,  0.11957077,
        0.04798034, -0.00139519,  0.01145806, -0.00373696, -0.12626133,
        0.01640625, -0.59661318,  0.34318661]), ['0']]
[array([ 0.13932733,  0.1861679 ,  0.17911883,  0.09341807,  0.06386491,
        0.07876236,  0.01730554,  0.01551439,  0.01958812, -0.09376448,
        0.01708984, -0.23479608,  0.33399481]), ['0']]
[array([ 0.24072684,  0.17141998,  0.18809335,  0.08691239,  0.07403261,
        0.06963222,  0.03808411, -0.02017492,  0.01857887, -0.13248266,
        0.01455078,  0.15826917,  0.33670063]), ['0']]
[array([ 0.20562671,  0.2246982 ,  0.1855406 ,  0.10507635,  0.06316097,
        0.09099645,  0.07512223,  0.00200588,  0.01051534, -0.1196941 ,
        0.01679687, -1.0235994 ,  0.32941906]), ['0']]
[array([ 0.22746262,  0.17231859,  0.06656164,  0.12133686,  0.07532102,
        0.1141861 ,  0.06574026,  0.00442554,  0.03655735, -0.1733253 ,
        0.01601562, -0.52921305,  0.3540173 ]), ['0']]
[array([ 0.16663798,  0.17105673,  0.17931968,  0.1197022 ,  0.1038841 ,
        0.09614433,  0.03604514,  0.01818895, -0.00055091, -0.15570115,
        0.01601562, -0.12086764,  0.3463333 ]), ['0']]
[array([ 0.2080314 ,  0.16361095,  0.17275981,  0.11304192,  0.11611932,
        0.11564601,  0.07178372,  0.02724895, -0.00536473, -0.11070712,
        0.01425781, -0.62861822,  0.35055739]), ['0']]
[array([ 0.24827713,  0.12015269,  0.14253937,  0.12775877,  0.0887079 ,
        0.09627166,  0.0596435 , -0.0092716 ,  0.01504378, -0.15009427,
        0.01455078, -0.35724341,  0.35536555]), ['0']]
[array([ 0.25862062,  0.15624386,  0.14784573,  0.05093253,  0.09791888,
        0.1059388 ,  0.0582884 ,  0.0307425 ,  0.02933291, -0.14743601,
        0.01494141,  3.37120589,  0.35685684]), ['0']]
[array([ 0.26330773,  0.17427975,  0.1219992 ,  0.11197462,  0.06640834,
        0.07093774,  0.05330316, -0.01917139,  0.00243839, -0.0954562 ,
        0.01386719, -0.00794918,  0.34191293]), ['0']]
[array([ 0.24838513,  0.19391948,  0.15050788,  0.09098685,  0.08182545,
        0.07797444,  0.06403031, -0.01335989,  0.0274973 , -0.08546404,
        0.01289062, -1.0967587 ,  0.34318661]), ['0']]
[array([ 0.2355411 ,  0.16072181,  0.12412402,  0.08367741,  0.02597783,
        0.04902209,  0.02355998,  0.02598265,  0.02613093, -0.06723695,
        0.01435547, -0.31876784,  0.35776354]), ['0']]
[array([ 0.28635978,  0.13931971,  0.11791998,  0.11948959,  0.10981798,
        0.05906606,  0.03925414,  0.01078037,  0.01065141, -0.09924491,
        0.01376953, -0.27020667,  0.35362427]), ['0']]
[array([ 0.2264887 ,  0.15356293,  0.14525752,  0.13351267,  0.11949387,
        0.08613535,  0.05981536,  0.01328149,  0.02893818, -0.14206684,
        0.01621094, -0.48372562,  0.35282738]), ['0']]
[array([ 0.28883854,  0.1964003 ,  0.17093666,  0.12142492,  0.09072547,
        0.08613143,  0.06207061,  0.00549388,  0.03019726, -0.10025239,
        0.01152344, -0.89768165,  0.3403335 ]), ['0']]
[array([ 0.30382256,  0.20986539,  0.14887645,  0.14882572,  0.08513496,
        0.06412113,  0.04135955,  0.03174053,  0.03170847, -0.10394889,
        0.01367188, -1.23476276,  0.33521825]), ['0']]
[array([ 0.24402037,  0.21126847,  0.11728789,  0.15690726,  0.06456537,
        0.07004046,  0.04774127,  0.0234612 ,  0.03963761, -0.04997343,
        0.01552734, -0.29733219,  0.33336991]), ['0']]
[array([ 0.28706048,  0.20639043,  0.15746082,  0.10752027,  0.02581633,
        0.04555612,  0.07049078,  0.02037017,  0.06105055, -0.04820754,
        0.01201172, -1.09568186,  0.33611374]), ['0']]
[array([ 0.2502404 ,  0.16348417,  0.15461966,  0.1280251 ,  0.06994303,
        0.07480888,  0.06134192,  0.03942029,  0.06198383, -0.098303  ,
        0.01376953, -0.3761851 ,  0.36962471]), ['0']]
[array([ 0.28423806,  0.2060639 ,  0.15601051,  0.13995596,  0.08011021,
        0.02447847,  0.05875323, -0.00861423,  0.05378083, -0.08380144,
        0.01191406, -0.78094661,  0.33581729]), ['0']]
[array([ 0.31150844,  0.19292287,  0.15685334,  0.13233671,  0.04195233,
        0.03625109,  0.06359207,  0.03978882,  0.0368559 , -0.06538971,
        0.01230469, -0.51523841,  0.33368348]), ['0']]
[array([ 0.21436022,  0.21341391,  0.16150082,  0.1006687 ,  0.05513861,
        0.04152022,  0.07285509,  0.0569122 ,  0.03392686, -0.05768862,
        0.01376953, -0.43396766,  0.33044097]), ['0']]
[array([ 0.20426353,  0.20014111,  0.17658616,  0.10532633,  0.02612611,
        0.03302212,  0.02756694,  0.06611051,  0.06597797, -0.06437149,
        0.01474609,  0.09332797,  0.35201559]), ['0']]
[array([ 0.28029676,  0.19735988,  0.11196108,  0.13198709,  0.01849563,
       -0.04092834,  0.03711261,  0.05882026,  0.05002856, -0.06134219,
        0.01396484, -0.59506091,  0.339794  ]), ['0']]
[array([  2.81862882e-01,   2.27433853e-01,   1.69199070e-01,
         1.34714628e-01,   5.58728613e-02,  -2.55931054e-04,
         6.11572376e-02,   8.14742847e-02,   5.93179801e-02,
        -7.17554785e-02,   1.52343750e-02,  -5.01258607e-01,
         3.30776338e-01]), ['0']]
[array([ 0.27653751,  0.21478777,  0.128353  ,  0.09778325,  0.00961225,
        0.01471246,  0.04098461,  0.05276305,  0.04063969, -0.10320802,
        0.01318359, -0.55765251,  0.329073  ]), ['0']]
[array([ 0.24000262,  0.20085957,  0.1409073 ,  0.08095238, -0.00297102,
       -0.03180548,  0.0112788 ,  0.05141384,  0.03982987, -0.14340157,
        0.01738281, -0.54293608,  0.33044097]), ['0']]
[array([ 0.29201742,  0.20731837,  0.1309865 ,  0.10033753,  0.03172097,
        0.00558016,  0.04700069,  0.04823705,  0.04210253, -0.07776484,
        0.01201172, -0.53981027,  0.33368348]), ['0']]
[array([ 0.30950102,  0.1544051 ,  0.13097233,  0.01498265, -0.04003958,
       -0.08043115, -0.00849171,  0.02745321,  0.03107676, -0.10967892,
        0.01367188,  0.63172627,  0.36456065]), ['0']]
[array([ 0.23650907,  0.1971321 ,  0.13094225, -0.0508681 ,  0.01335747,
       -0.00761165,  0.05270675,  0.01590203,  0.0234939 , -0.09780856,
        0.01416016, -0.57669582,  0.31981414]), ['0']]
[array([ 0.32098114,  0.18170587,  0.11112201, -0.02062351,  0.02722953,
       -0.00309649,  0.04717367,  0.01913421,  0.01025   , -0.09835791,
        0.01220703, -0.39280689,  0.32620059]), ['0']]
[array([ 0.22339279,  0.20644101,  0.16602598,  0.08935647,  0.01620781,
        0.02923172,  0.03208423,  0.0267854 ,  0.03655053, -0.11622391,
        0.01591797, -0.20473533,  0.32872417]), ['0']]
[array([ 0.27520765,  0.20974332,  0.12009715,  0.01091929,  0.01628148,
        0.00446543, -0.00238492,  0.02393503,  0.00395628, -0.12066364,
        0.01171875,  0.30949847,  0.31850461]), ['0']]
[array([ 0.2224946 ,  0.18531075,  0.10382708,  0.09716491,  0.0064043 ,
       -0.02272098,  0.06138199,  0.0332238 ,  0.02057464, -0.1426184 ,
        0.01464844,  0.24176906,  0.33368348]), ['0']]
[array([ 0.24106608,  0.21732808,  0.14968415,  0.04815282,  0.02721195,
       -0.02607225,  0.00390856,  0.02844206,  0.03496536, -0.1260253 ,
        0.01474609, -0.3037519 ,  0.3265702 ]), ['0']]
[array([ 0.26665441,  0.20776021,  0.14691372,  0.14857   ,  0.03837621,
        0.04185361,  0.03385433,  0.0081639 , -0.00250162, -0.07699268,
        0.01220703, -0.95272201,  0.33368348]), ['0']]
[array([ 0.27281523,  0.17634881,  0.13221719,  0.08837024, -0.053597  ,
        0.00904521,  0.01955345,  0.03515246,  0.00802966, -0.10469352,
        0.01181641, -0.98927326,  0.33077634]), ['0']]
[array([ 0.28504161,  0.22223118,  0.14685558,  0.0438841 ,  0.00262577,
        0.04194666,  0.03637144,  0.05307029,  0.01576865, -0.12896866,
        0.01259766, -0.38944838,  0.32272438]), ['0']]
[array([ 0.3001143 ,  0.23296571,  0.14044233,  0.07658082,  0.05091578,
        0.07741505,  0.05179365,  0.03114897, -0.01733362, -0.11151793,
        0.01132812, -0.50024367,  0.31894552]), ['0']]
[array([ 0.2694389 ,  0.22610066,  0.17624429,  0.02462575,  0.02429962,
        0.07700903,  0.11589859,  0.04404036,  0.00997366, -0.07081335,
        0.01347656, -0.79590955,  0.32730013]), ['0']]
[array([ 0.2321671 ,  0.18112271,  0.18335511, -0.06616685,  0.06192742,
        0.0629194 ,  0.10232611,  0.05146422, -0.00762052, -0.09438548,
        0.01308594,  1.14974414,  0.35342641]), ['0']]
[array([ 0.23679519,  0.21255391,  0.14162575,  0.0575261 ,  0.03562181,
        0.03389559,  0.03305916,  0.03600535,  0.04147723, -0.09474953,
        0.01152344, -0.27567162,  0.32272438]), ['0']]
[array([ 0.31189343,  0.20618082,  0.09211157,  0.08272593,  0.05128239,
        0.04638267,  0.08535751,  0.02934099,  0.03567667, -0.05945957,
        0.01035156, -0.31006025,  0.33924771]), ['0']]
[array([ 0.25037838,  0.15753271,  0.11423177,  0.03259427,  0.06353533,
        0.07898983,  0.08700359,  0.01666947,  0.0433694 , -0.10068117,
        0.01416016, -0.38795284,  0.36501861]), ['0']]
[array([ 0.25020859,  0.20483646,  0.1304182 ,  0.1027758 ,  0.07259152,
        0.11656883,  0.06669155,  0.00353293,  0.00421136, -0.08694113,
        0.01279297, -0.80117124,  0.34586378]), ['0']]
[array([ 0.26816681,  0.22273628,  0.14591637,  0.09294169, -0.06085481,
        0.07197771,  0.09823378,  0.01544119,  0.02267894, -0.06136113,
        0.01279297, -0.0774474 ,  0.32352127]), ['0']]
[array([ 0.23503473,  0.22050285,  0.14140478,  0.09797281,  0.09975689,
        0.08261548,  0.04012949,  0.01855926,  0.04430577, -0.09795389,
        0.01142578, -0.26116018,  0.33841517]), ['0']]
[array([ 0.21916205,  0.20395221,  0.14584865,  0.0832964 ,  0.10734031,
        0.10433547,  0.03438751,  0.01685569,  0.02349951, -0.09575145,
        0.01464844, -0.18916564,  0.34490925]), ['0']]
[array([ 0.25902735,  0.2156242 ,  0.13749953,  0.10823972,  0.11901345,
        0.06219249,  0.03260213,  0.01651936,  0.03741787, -0.07272294,
        0.01308594, -0.31527041,  0.33869446]), ['0']]
[array([ 0.20051303,  0.1923117 ,  0.07690373,  0.03420662,  0.11874063,
        0.12005091,  0.00431342,  0.01020787,  0.01535616, -0.07824828,
        0.01328125, -0.17201597,  0.34926731]), ['0']]
[array([ 0.23423818,  0.19859685,  0.15720115,  0.07823326,  0.10416912,
        0.04062015, -0.01247468,  0.03099889,  0.00396884, -0.09973727,
        0.01318359, -0.31539714,  0.33869446]), ['0']]
[array([ 0.27021931,  0.17689533,  0.08047265,  0.07426261,  0.08749728,
        0.07452856, -0.0438806 ,  0.00519328, -0.00232779, -0.08206583,
        0.01230469, -0.32990926,  0.34514986]), ['0']]
[array([ 0.21523698,  0.16628708,  0.10338631,  0.07467728,  0.06028509,
        0.04635709, -0.01639351,  0.03632006, -0.02906205, -0.10037081,
        0.0125    , -0.58685182,  0.34490925]), ['0']]
[array([ 0.22415307,  0.22197145,  0.13452083,  0.05700469,  0.05876515,
        0.07064972, -0.07503123,  0.0395104 , -0.00855578, -0.12636163,
        0.01318359, -0.21690591,  0.31894552]), ['0']]
[array([ 0.29268694,  0.16782624,  0.10258376,  0.10065501,  0.04947765,
        0.02171382, -0.01899368,  0.02089859, -0.00362723, -0.15862979,
        0.01181641, -0.52371905,  0.339794  ]), ['0']]
[array([ 0.172212  ,  0.1966414 ,  0.1528464 ,  0.08309685,  0.09984201,
        0.04525361, -0.00945165,  0.0520436 , -0.04144849, -0.15307123,
        0.01533203,  0.24424178,  0.33640817]), ['0']]
[array([ 0.15990582,  0.2088419 ,  0.13709187,  0.05875926,  0.08907886,
        0.05989665, -0.04787609,  0.02883118,  0.002881  , -0.15148986,
        0.01240234, -0.27648363,  0.32507249]), ['0']]
[array([ 0.21426926,  0.20757417,  0.14586884,  0.06664521,  0.05633638,
        0.01186839, -0.06821219,  0.06252665, -0.00477445, -0.19380172,
        0.01455078, -0.22123721,  0.32941906]), ['0']]
[array([ 0.23510398,  0.18093226,  0.09613089,  0.10262599,  0.03818944,
        0.02478786, -0.01784741,  0.0173291 , -0.00463843, -0.13071977,
        0.01455078, -0.12742764,  0.33399481]), ['0']]
[array([ 0.20192061,  0.18966393,  0.15744232,  0.09677931,  0.01836469,
       -0.09357813,  0.02492974,  0.04809366, -0.03172522, -0.14810058,
        0.01455078, -0.7096454 ,  0.32507249]), ['0']]
[array([ 0.16673985,  0.14465699,  0.15080111,  0.06651152,  0.03482132,
        0.05189019, -0.01304977,  0.03724506,  0.01166586, -0.17740725,
        0.01669922, -0.1966611 ,  0.35479285]), ['0']]
[array([ 0.22913897,  0.19291241,  0.12117463,  0.03533356,  0.10267721,
        0.02851749, -0.03274107,  0.03015987, -0.01697128, -0.13333213,
        0.01171875, -0.86564071,  0.3372797 ]), ['0']]
[array([ 0.21691296,  0.18177178,  0.14174979,  0.07839561, -0.01380266,
       -0.00183285, -0.02041363,  0.035865  , -0.02257804, -0.18110588,
        0.01464844,  1.19534911,  0.32801799]), ['0']]
[array([ 0.26317484,  0.08800337,  0.16033241,  0.08107259,  0.10278192,
        0.02467384, -0.01000535,  0.03107849, -0.01526351, -0.1045286 ,
        0.01201172,  1.11313632,  0.35242338]), ['0']]
[array([ 0.25368745,  0.13654978,  0.11027292,  0.06506285,  0.07685574,
       -0.02897499, -0.03757984,  0.06754687, -0.01803348, -0.16191646,
        0.01181641, -0.20656013,  0.36547179]), ['0']]
[array([ 0.2046835 ,  0.15187879,  0.15603584,  0.07230593,  0.03325444,
        0.05016867, -0.01747327,  0.00524409, -0.01906088, -0.15791293,
        0.01289062,  0.61919418,  0.33756636]), ['0']]
[array([ 0.19817501,  0.18159395,  0.15973553,  0.09282039,  0.05248968,
       -0.04413808, -0.06900458,  0.04272605, -0.05162759, -0.12573287,
        0.01298828,  3.71902184,  0.33044097]), ['0']]
[array([ 0.22883238,  0.16076658,  0.11823996,  0.040471  ,  0.05187045,
        0.01961885,  0.01220048,  0.05383596, -0.00748297, -0.16337373,
        0.01435547,  2.55465616,  0.35517549]), ['0']]
[array([ 0.27853962,  0.19397964,  0.17218046,  0.05446405,  0.05900849,
        0.0387871 , -0.0033042 ,  0.06222013,  0.02674553, -0.11907146,
        0.01386719, -0.72384565,  0.33521825]), ['0']]
[array([ 0.2274043 ,  0.15302341,  0.1146269 ,  0.01992951,  0.04817309,
        0.02065339,  0.00714243,  0.07210079,  0.05826585, -0.10685315,
        0.01591797, -0.40429465,  0.37464882]), ['0']]
[array([ 0.09879537,  0.17566556,  0.15101109,  0.05981251,  0.06563821,
       -0.02714478,  0.00504379,  0.0793908 ,  0.05135959, -0.1495202 ,
        0.01875   , -0.34336744,  0.36621674]), ['0']]
[array([ 0.29544216,  0.1585227 ,  0.17999515,  0.08614796,  0.02507326,
       -0.14452567, -0.02275023,  0.05876313,  0.0333384 , -0.14767812,
        0.01367188, -0.54771015,  0.35740313]), ['0']]
[array([ 0.14212898,  0.13916834,  0.17308217,  0.05285249,  0.04422201,
       -0.08388879,  0.05181781,  0.05300459,  0.05464896, -0.11054844,
        0.01884766, -0.39164413,  0.37265744]), ['0']]
[array([ 0.29551938,  0.183548  ,  0.17805035,  0.10816499,  0.019294  ,
       -0.02126649,  0.04376158,  0.04522006,  0.03302284, -0.11123892,
        0.01484375,  0.70984169,  0.33430391]), ['0']]
[array([ 0.27644794,  0.19457204,  0.12577512,  0.07610836,  0.05395637,
       -0.07157544, -0.00308679,  0.03967632,  0.04881424, -0.14708023,
        0.01464844, -0.61663009,  0.33611374]), ['0']]
[array([ 0.2309439 ,  0.18388785,  0.16179366,  0.11145246,  0.06182324,
       -0.04059979,  0.06366027,  0.03198061,  0.04080672, -0.09056956,
        0.01582031,  2.22900947,  0.34060076]), ['0']]
[array([ 0.21219857,  0.14268372,  0.17556743,  0.01743001, -0.09112349,
       -0.01682649, -0.00295512,  0.02652787,  0.0162591 , -0.14660789,
        0.01357422, -0.38794034,  0.33699113]), ['0']]
[array([ 0.25578208,  0.17617087,  0.17495732,  0.04186949,  0.05158865,
       -0.1086144 ,  0.03240305,  0.03022284, -0.01721378, -0.18491899,
        0.01386719,  0.58767088,  0.32730013]), ['0']]
[array([ 0.2126051 ,  0.19071722,  0.18336216,  0.05786476,  0.0623996 ,
       -0.01089763, -0.03127701, -0.0059519 , -0.01071881, -0.16721555,
        0.01572266,  0.26804491,  0.32545179]), ['0']]
[array([ 0.21807903,  0.17279238,  0.1869875 ,  0.07396649,  0.0237851 ,
        0.01633382,  0.00714625, -0.00888947, -0.00725342, -0.13611275,
        0.01425781, -0.63589345,  0.32801799]), ['0']]
[array([ 0.22688755,  0.14083226,  0.1842214 ,  0.11802849,  0.02898865,
       -0.02568211, -0.06601107, -0.05051161,  0.00558262, -0.09869736,
        0.01533203, -0.6022226 ,  0.3355188 ]), ['0']]
[array([ 0.26339976,  0.16992706,  0.10704333,  0.07888261,  0.00445548,
        0.02319808,  0.01777578, -0.03821437,  0.00898849, -0.09238695,
        0.01367188, -0.41695896,  0.33611374]), ['0']]
[array([ 0.24880142,  0.17369412,  0.15515903,  0.05232701,  0.06351118,
       -0.03428651,  0.00282796, -0.04799832,  0.03603281, -0.09886159,
        0.01289062, -0.13988928,  0.33813407]), ['0']]
[array([ 0.16870354,  0.19116742,  0.15157726,  0.07908124, -0.12864067,
        0.03428495,  0.02743844, -0.04137671,  0.03650894, -0.10291519,
        0.01455078,  1.53710888,  0.329073  ]), ['0']]
[array([ 0.22527918,  0.17777039,  0.13989696,  0.05268256, -0.01702509,
       -0.04826941,  0.00728632, -0.06586838,  0.02416425, -0.08988336,
        0.01445313, -0.57997488,  0.32620059]), ['0']]
[array([ 0.3681505 ,  0.1960719 ,  0.12681446,  0.11514596,  0.04721863,
        0.00621048,  0.01709569, -0.0582595 ,  0.00388526, -0.16113303,
        0.01035156, -0.30239853,  0.33044097]), ['0']]
[array([ 0.36627801,  0.16245861,  0.16922383,  0.07577416,  0.01139934,
       -0.02693441,  0.03771647, -0.01116838,  0.02334207, -0.12676317,
        0.00908203,  0.59246306,  0.33699113]), ['0']]
[array([ 0.30310085,  0.17061383,  0.16586233,  0.02232091,  0.02576974,
        0.00841314,  0.02654764, -0.02514803,  0.00564212, -0.13750648,
        0.00996094, -0.90743528,  0.3243038 ]), ['0']]
[array([ 0.28969857,  0.15441789,  0.09608864,  0.06087595,  0.03706677,
        0.02335277,  0.04242021,  0.01267709, -0.0088865 , -0.13775382,
        0.00917969,  0.3759251 ,  0.34904852]), ['0']]
[array([ 0.32712012,  0.18143221,  0.1563641 ,  0.06617795,  0.05769399,
        0.02754175, -0.03546252, -0.06450681, -0.0123385 , -0.10822965,
        0.00830078, -0.11945304,  0.32941906]), ['0']]
[array([ 0.24572034,  0.16655879,  0.12712195,  0.03301138,  0.02169251,
       -0.04768026, -0.00292357, -0.01112073,  0.04783726, -0.1136111 ,
        0.01289062, -0.03470456,  0.3656218 ]), ['0']]
[array([ 0.24020207,  0.18297811,  0.11296381,  0.12701703, -0.05930932,
        0.02599945, -0.04410109,  0.03312735,  0.04262577, -0.14677664,
        0.01054688, -0.01340046,  0.3355188 ]), ['0']]
[array([ 0.34288675,  0.19671834,  0.13368334,  0.06278298, -0.04245862,
        0.0533295 , -0.00425298,  0.02691689,  0.06253792, -0.12491766,
        0.01259766, -1.04257249,  0.35013161]), ['0']]
[array([ 0.12232173,  0.18358236,  0.16949926,  0.07795962, -0.07968541,
        0.02811604,  0.02978023,  0.06752972,  0.06216628, -0.09306927,
        0.015625  , -0.0568506 ,  0.36486649]), ['0']]
[array([ 0.26177974,  0.19759931,  0.18393523,  0.09555762, -0.00202004,
        0.04214533, -0.00265679,  0.03414572,  0.03878387, -0.07959089,
        0.01523437, -0.73367761,  0.32976237]), ['0']]
[array([ 0.11076962,  0.19029713,  0.18592665,  0.08863044, -0.14245601,
        0.02941993,  0.02360103,  0.00573368,  0.01790575, -0.09360923,
        0.01630859,  1.72210239,  0.3258278 ]), ['0']]
[array([ 0.34087198,  0.1748099 ,  0.16794686,  0.13102172, -0.11639785,
        0.01175854,  0.00383454,  0.00193197,  0.02292456, -0.10997169,
        0.01259766, -1.10078222,  0.33521825]), ['0']]
[array([ 0.27751663,  0.1673156 ,  0.16871387,  0.08547149, -0.1075335 ,
       -0.02207141,  0.00559734, -0.00383113,  0.02489321, -0.09855919,
        0.01083984, -0.1344306 ,  0.33273589]), ['0']]
[array([ 0.15913165,  0.2163024 ,  0.20938142,  0.09553584, -0.11482163,
        0.0306899 ,  0.05399332, -0.01923179,  0.03285671, -0.1336463 ,
        0.01376953, -0.58248246,  0.32352127]), ['0']]
[array([ 0.27230785,  0.17858406,  0.10336862,  0.0830496 , -0.06434086,
        0.04195652,  0.0373627 ,  0.02562869,  0.03913924, -0.12597621,
        0.01162109,  1.46754438,  0.35460025]), ['0']]
[array([ 0.24409241,  0.1730644 ,  0.17391621,  0.10251863, -0.00528246,
        0.05828323,  0.03468742, -0.01444254,  0.06376834, -0.1296853 ,
        0.01171875, -0.19260919,  0.3570397 ]), ['0']]
[array([ 0.18150881,  0.19755011,  0.1664863 ,  0.10072249, -0.08636678,
        0.07449502,  0.06188066,  0.01304157,  0.03556239, -0.10413578,
        0.01308594, -1.00671294,  0.33209248]), ['0']]
[array([ 0.23394009,  0.17064458,  0.16998983,  0.1022489 , -0.11671584,
        0.04555646,  0.03384237, -0.00977911,  0.02634538, -0.1576813 ,
        0.01533203,  0.49814758,  0.33273589]), ['0']]
[array([ 0.22587358,  0.19994958,  0.18081216,  0.08442529, -0.04545817,
        0.03725163,  0.06324329, -0.00476701,  0.02960739, -0.13930894,
        0.01445313, -0.30889495,  0.3258278 ]), ['0']]
[array([ 0.15333933,  0.20127785,  0.15368204,  0.10829628, -0.06020798,
        0.01235443,  0.04288406, -0.01133541,  0.02287017, -0.14095287,
        0.01552734, -0.5235642 ,  0.32872417]), ['0']]
[array([ 0.09514665,  0.1510494 ,  0.14070221,  0.11756535, -0.07275853,
        0.00238428,  0.04621348,  0.01868196,  0.04463663, -0.1407207 ,
        0.01357422, -0.27271818,  0.36425263]), ['0']]
[array([ 0.14740108,  0.19859558,  0.16831153,  0.09020147, -1.53525298,
       -0.13374522,  0.00889746, -0.00858594,  0.02594259, -0.1245122 ,
        0.01464844,  0.88535093,  0.3239143 ]), ['0']]
[array([ 0.2220526 ,  0.18913207,  0.14270769,  0.10559477, -0.15133484,
       -0.02249988,  0.04052667, -0.00591451,  0.03286812, -0.14573394,
        0.01240234,  0.11001666,  0.33399481]), ['0']]
[array([ 0.26769071,  0.21773988,  0.13641143,  0.10789169, -0.01217114,
        0.03959533,  0.00715242,  0.00446418,  0.00590164, -0.09559477,
        0.01279297, -0.92476678,  0.32066573]), ['0']]
[array([ 0.18558593,  0.17162193,  0.18783462,  0.07195292, -0.07400745,
        0.05032386,  0.06135786, -0.01028809,  0.02426948, -0.08723759,
        0.01582031,  0.09308407,  0.33273589]), ['0']]
[array([ 0.22832345,  0.16801998,  0.172554  ,  0.06384502, -0.1111826 ,
       -0.06419963,  0.0384618 , -0.01916716,  0.0238277 , -0.10941425,
        0.01367188,  3.11928506,  0.32976237]), ['0']]
[array([ 0.24849085,  0.20045509,  0.18274868,  0.08875642, -0.08976168,
        0.00749008,  0.04636774, -0.00533757, -0.00454874, -0.13110632,
        0.01191406, -1.10718503,  0.32545179]), ['0']]
[array([ 0.19730206,  0.1998885 ,  0.19186077,  0.07468272, -0.03666605,
       -0.03084057,  0.03718887, -0.02188511, -0.01131684, -0.12478406,
        0.01396484, -0.55516215,  0.32468985]), ['0']]
[array([ 0.19942548,  0.19089196,  0.18297127,  0.10756509, -0.11280942,
        0.01153529,  0.04386758, -0.01428079,  0.00336983, -0.17876134,
        0.01523437,  0.01677187,  0.32941906]), ['0']]
[array([ 0.22293203,  0.20575891,  0.20286119,  0.09623159, -0.14539415,
        0.02959704,  0.04014408, -0.00393073,  0.00894178, -0.16721938,
        0.01533203, -0.84230624,  0.32507249]), ['0']]
[array([ 0.20545917,  0.19372703,  0.22025005,  0.12283638, -0.00897828,
       -0.0025247 ,  0.02672616, -0.03432836, -0.00976901, -0.13245994,
        0.01591797, -0.4978636 ,  0.3269367 ]), ['0']]
[array([ 0.19332481,  0.2087711 ,  0.17398749,  0.15234276, -0.03783542,
        0.02982522,  0.03229037, -0.00878108, -0.00611237, -0.17419663,
        0.01552734, -0.05554979,  0.33077634]), ['0']]
[array([ 0.23947857,  0.23488466,  0.20892004,  0.15568151,  0.00249654,
       -0.00307307,  0.04835334, -0.01107936,  0.03991662, -0.12173175,
        0.01347656, -1.05503222,  0.32837251]), ['0']]
[array([ 0.25644758,  0.22243178,  0.18932649,  0.15645887, -0.04583018,
        0.06357473,  0.05239576, -0.02755032, -0.00242688, -0.15259741,
        0.01425781, -0.37270719,  0.33077634]), ['0']]
[array([ 0.20728081,  0.23140157,  0.22263536,  0.13313767,  0.00328722,
        0.0499909 ,  0.04433345,  0.01726147,  0.00977114, -0.09892395,
        0.01660156, -0.70742896,  0.329073  ]), ['0']]
[array([ 0.24124578,  0.22798879,  0.22977816,  0.14745921, -0.05079326,
       -0.00918596,  0.08660761,  0.01924924,  0.06003732, -0.11246697,
        0.01416016, -0.53175263,  0.330103  ]), ['0']]
[array([ 0.15503893,  0.23561973,  0.23735301,  0.1554921 , -0.02498656,
        0.03703688,  0.09523756,  0.03067027,  0.06025456, -0.05533604,
        0.01533203, -0.30434683,  0.330103  ]), ['0']]
[array([ 0.23812912,  0.23860025,  0.26972981,  0.18261805,  0.01617208,
        0.03558332,  0.10190086,  0.05222563,  0.03952709, -0.07027381,
        0.01630859, -0.11951601,  0.32976237]), ['1']]
[array([ 0.26169364,  0.2346481 ,  0.24868732,  0.14564598,  0.05383811,
        0.09061382,  0.12926483,  0.07234215,  0.06492614, -0.0383803 ,
        0.01738281, -0.92195973,  0.33044097]), ['1']]
[array([ 0.262188  ,  0.2140741 ,  0.23316746,  0.17610285,  0.07025032,
        0.10563837,  0.11688082,  0.05735466,  0.0789831 , -0.04722516,
        0.01855469,  1.83625636,  0.34191293]), ['1']]
[array([ 0.27687953,  0.25528165,  0.24806737,  0.19048293,  0.0100673 ,
        0.10783976,  0.10106069,  0.0706447 ,  0.09930745, -0.07444067,
        0.01650391,  0.04165203,  0.33399481]), ['1']]
[array([ 0.26343096,  0.24210809,  0.22666862,  0.17146731,  0.06447045,
        0.08832827,  0.1184911 ,  0.04170501,  0.07819656, -0.04487298,
        0.01640625,  1.36593298,  0.33305406]), ['1']]
[array([ 0.24487531,  0.2495552 ,  0.23994393,  0.15828947,  0.06784665,
        0.07223546,  0.07029681,  0.03452581,  0.07102983, -0.02917241,
        0.01816406, -0.92419899,  0.32941906]), ['1']]
[array([ 0.26513396,  0.23734387,  0.23773011,  0.16661185,  0.03516783,
        0.0745101 ,  0.07982073,  0.02995241,  0.07291438, -0.0411948 ,
        0.01640625, -0.52800788,  0.33110913]), ['1']]
[array([ 0.30071026,  0.25842471,  0.25354991,  0.14686392, -0.02424211,
        0.08446444,  0.05613942,  0.01690753,  0.07427749, -0.05207257,
        0.01386719, -1.14225052,  0.32620059]), ['1']]
[array([ 0.29266138,  0.25019712,  0.22789757,  0.1691004 ,  0.05505442,
        0.11891457,  0.09696539,  0.01404945,  0.05396701, -0.04325825,
        0.01416016, -0.57347493,  0.33044097]), ['1']]
[array([ 0.29042258,  0.26379544,  0.23469722,  0.17314832,  0.06241118,
        0.07159855,  0.06936063,  0.04086034,  0.04759175, -0.07270492,
        0.01416016, -0.79639779,  0.32766054]), ['1']]
[array([ 0.30462058,  0.26192916,  0.24134038,  0.19475776,  0.03906022,
        0.06253957,  0.10713021,  0.03631818,  0.04133746, -0.03687428,
        0.01396484, -0.8928928 ,  0.33044097]), ['1']]
[array([ 0.31122329,  0.26847565,  0.22882691,  0.20317164,  0.09168795,
        0.08739968,  0.09044372,  0.05441636,  0.06611713, -0.05116678,
        0.01464844, -0.37251276,  0.33110913]), ['1']]
[array([ 0.292615  ,  0.25746405,  0.27213296,  0.19701573,  0.04327744,
        0.09512416,  0.10649801,  0.0831041 ,  0.07356702, -0.01758607,
        0.0171875 , -0.3667516 ,  0.33044097]), ['1']]
[array([ 0.27911761,  0.25858083,  0.22056414,  0.21268993,  0.05618405,
        0.10913911,  0.11862728,  0.07918181,  0.10222829, -0.01305446,
        0.01787109, -0.19655803,  0.33521825]), ['1']]
[array([ 0.2744761 ,  0.28966292,  0.29917719,  0.22678091,  0.05720411,
        0.11111441,  0.11683404,  0.09750656,  0.10543232, -0.00227166,
        0.01591797, -0.2115504 ,  0.33077634]), ['1']]
[array([ 0.28705407,  0.25952978,  0.27092226,  0.24929219,  0.09867915,
        0.10567539,  0.1306268 ,  0.08011648,  0.10361993,  0.00895251,
        0.01591797, -1.06403932,  0.33430391]), ['1']]
[array([ 0.29371579,  0.26840858,  0.28169822,  0.23289099,  0.09742996,
        0.10468801,  0.13158113,  0.10104765,  0.1011875 ,  0.0068095 ,
        0.01572266,  2.39184244,  0.33581729]), ['1']]
[array([ 0.30941084,  0.28455614,  0.2519596 ,  0.21270534,  0.10664661,
        0.09017311,  0.11422787,  0.10062895,  0.10338324,  0.01004505,
        0.01660156, -0.76407721,  0.33273589]), ['1']]
[array([ 0.30203403,  0.27126366,  0.2738063 ,  0.23402806,  0.07494974,
        0.11880742,  0.14391219,  0.11105036,  0.11407945,  0.0036522 ,
        0.01767578, -0.16997563,  0.33430391]), ['1']]
[array([ 0.30284744,  0.28769154,  0.29181764,  0.24649185,  0.08945736,
        0.11937383,  0.13159403,  0.13908759,  0.12401142,  0.01669656,
        0.01611328,  2.30518292,  0.33461084]), ['1']]
[array([ 0.33565358,  0.28062254,  0.31875218,  0.25806392,  0.10957876,
        0.11466855,  0.15074553,  0.12833323,  0.12401882,  0.00762501,
        0.01708984, -0.78305805,  0.33273589]), ['1']]
[array([ 0.3259521 ,  0.30291264,  0.3044539 ,  0.27136145,  0.12263809,
        0.13461239,  0.14650961,  0.11788747,  0.13566826,  0.00748934,
        0.01787109, -0.87193097,  0.33491561]), ['1']]
[array([  3.15572360e-01,   3.06017456e-01,   3.04709226e-01,
         2.44891998e-01,   1.14708832e-01,   1.17442148e-01,
         1.55694516e-01,   1.40502762e-01,   1.39189506e-01,
         6.11462783e-04,   1.83593750e-02,  -6.49995210e-01,
         3.34610837e-01]), ['1']]
[array([ 0.32968376,  0.32937424,  0.32478456,  0.23749945,  0.16300364,
        0.12781474,  0.13043183,  0.14773201,  0.15730752,  0.02835885,
        0.01708984, -0.90060526,  0.32872417]), ['1']]
[array([ 0.2886151 ,  0.32594003,  0.30518369,  0.23740531,  0.13199852,
        0.10041578,  0.1262705 ,  0.09797019,  0.17011265,  0.03112637,
        0.01992187, -0.20192015,  0.32837251]), ['1']]
[array([ 0.34990061,  0.32997503,  0.27548605,  0.25221247,  0.14879427,
        0.1271532 ,  0.14966253,  0.13576397,  0.17110917,  0.0309044 ,
        0.01884766, -0.79999917,  0.33241538]), ['1']]
[array([ 0.33730401,  0.31961352,  0.27832591,  0.21612921,  0.17243464,
        0.13926099,  0.15378823,  0.13595848,  0.14645618,  0.01065084,
        0.01738281, -0.12311651,  0.33077634]), ['1']]
[array([ 0.35471347,  0.33793074,  0.26630666,  0.20947341,  0.17009405,
        0.1359787 ,  0.12715858,  0.13289592,  0.15457058,  0.02639386,
        0.01621094, -1.23269591,  0.32545179]), ['1']]
[array([ 0.31572226,  0.33578477,  0.29550583,  0.2148631 ,  0.19302696,
        0.07643298,  0.12728933,  0.12476985,  0.15001242,  0.03825874,
        0.01572266, -1.22843704,  0.3258278 ]), ['1']]
[array([ 0.32817319,  0.35825318,  0.28028279,  0.23885762,  0.17056192,
        0.14660216,  0.1675053 ,  0.14174929,  0.16478961,  0.05890533,
        0.01464844, -0.94162238,  0.3239143 ]), ['1']]
[array([ 0.34513099,  0.36829481,  0.26547972,  0.25466957,  0.1391667 ,
        0.15104265,  0.09674639,  0.10963982,  0.12941013,  0.07254985,
        0.01513672, -1.32985219,  0.31528614]), ['1']]
[array([ 0.36282404,  0.36992524,  0.29492679,  0.22459568,  0.18560822,
        0.17178315,  0.10870039,  0.1404016 ,  0.14858224,  0.05364578,
        0.01396484, -1.07694075,  0.31981414]), ['1']]
[array([ 0.34660165,  0.39424694,  0.26449297,  0.23181104,  0.1898423 ,
        0.15657419,  0.13418837,  0.15623775,  0.15115093,  0.03469004,
        0.01240234, -1.4494252 ,  0.30688813]), ['1']]
[array([ 0.3557577 ,  0.35475897,  0.29649179,  0.22563302,  0.15960492,
        0.16304867,  0.13516338,  0.16691896,  0.16389239,  0.0278798 ,
        0.01533203, -0.90641733,  0.3265702 ]), ['1']]
[array([ 0.37327986,  0.37664065,  0.29314227,  0.19440475,  0.19150666,
        0.18111454,  0.14134942,  0.18499562,  0.19294454,  0.01634005,
        0.01494141, -1.12030738,  0.32272438]), ['1']]
[array([ 0.36191011,  0.37286477,  0.3019615 ,  0.21697848,  0.19654686,
        0.20365715,  0.15491193,  0.18498102,  0.2145878 ,  0.00634753,
        0.01689453, -1.01818458,  0.32507249]), ['1']]
[array([ 0.38951027,  0.39869183,  0.30887508,  0.22143477,  0.17980007,
        0.21065778,  0.1500919 ,  0.18301135,  0.21704962, -0.02222247,
        0.01494141, -0.73320821,  0.31894552]), ['1']]
[array([ 0.38144658,  0.35920055,  0.24693045,  0.19413325,  0.20787013,
        0.18451434,  0.16979137,  0.16192789,  0.19884705,  0.00493932,
        0.01337891, -1.03646575,  0.32545179]), ['1']]
[array([ 0.36929872,  0.38818707,  0.26533986,  0.19821787,  0.1988953 ,
        0.2171103 ,  0.20960103,  0.14684876,  0.20378442,  0.04694728,
        0.01396484, -1.50253735,  0.31128981]), ['1']]
[array([ 0.3746607 ,  0.42103263,  0.28036972,  0.21754778,  0.20576427,
        0.23397038,  0.25929691,  0.17038313,  0.21292293,  0.08104405,
        0.01367188, -0.8440447 ,  0.29931606]), ['1']]
Processing recording: null1
0
         4894520 function calls (4892420 primitive calls) in 34.516 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    7.087    1.772    7.183    1.796 analyzer.py:211(trim_outliers)
    14323    6.502    0.000    6.502    0.000 {sum}
    14310    4.787    0.000    4.787    0.000 {numpy.core.multiarray.array}
        4    3.966    0.991   27.867    6.967 analyzer.py:308(analyze)
  4086968    1.943    0.000    1.943    0.000 {max}
     2286    1.706    0.001    1.706    0.001 {method 'extend' of 'list' objects}
     1050    1.074    0.001    1.400    0.001 analyzer.py:260(avg_zero_crossing_rate)
        4    0.769    0.192    3.273    0.818 mlab.py:207(_spectral_helper)
     2773    0.638    0.000    0.638    0.000 {numpy.fft.fftpack_lite.cfftf}
    13611    0.394    0.000    0.723    0.000 arrayprint.py:591(__call__)
     3141    0.366    0.000    0.779    0.000 arrayprint.py:538(fillFormat)
     1050    0.337    0.000    0.838    0.001 analyzer.py:247(slice_rolloff_freq)
    14548    0.236    0.000    0.236    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        4    0.183    0.046    6.939    1.735 analyzer.py:197(moving_average)
    33508    0.175    0.000    0.395    0.000 numeric.py:2178(seterr)
        3    0.165    0.055    0.317    0.106 analyzer.py:278(high_pass_filter)
        5    0.165    0.033    0.460    0.092 __init__.py:2(<module>)
    33508    0.146    0.000    0.155    0.000 numeric.py:2274(geterr)
        6    0.135    0.022    0.135    0.022 {imp.load_module}
    26082    0.113    0.000    0.139    0.000 arrayprint.py:627(_digits)
        1    0.096    0.096    0.096    0.096 lapack.py:201(<module>)
        4    0.093    0.023    0.093    0.023 analyzer.py:46(pop_working_set)
     1054    0.090    0.000    0.150    0.000 _methods.py:60(_var)
     1047    0.086    0.000    0.878    0.001 arrayprint.py:456(_formatArray)
        4    0.086    0.021   29.752    7.438 analyzer.py:439(_process_file)
        3    0.075    0.025    0.674    0.225 analyzer.py:175(freq_bins)
        1    0.072    0.072    0.076    0.076 FixTk.py:1(<module>)
      230    0.064    0.000    0.161    0.001 doccer.py:12(docformat)
        1    0.060    0.060    0.065    0.065 numeric.py:1(<module>)
     1047    0.057    0.000    1.856    0.002 arrayprint.py:225(_array2string)
    13611    0.052    0.000    0.068    0.000 arrayprint.py:448(_extendLine)
        1    0.051    0.051    0.052    0.052 blas.py:101(<module>)
        1    0.050    0.050    0.052    0.052 {cPickle.load}
        1    0.050    0.050    0.050    0.050 socket.py:45(<module>)
        1    0.049    0.049    0.060    0.060 __init__.py:83(<module>)
        1    0.048    0.048    0.073    0.073 __init__.py:525(<module>)
    33509    0.047    0.000    0.047    0.000 {numpy.core.umath.seterrobj}
        1    0.046    0.046    0.046    0.046 linalg.py:10(<module>)
        1    0.045    0.045    0.045    0.045 arpack.py:7(<module>)
        1    0.043    0.043    0.053    0.053 __init__.py:119(<module>)
        1    0.042    0.042    0.042    0.042 _ode.py:39(<module>)
        1    0.042    0.042    0.042    0.042 flinalg.py:5(<module>)
        1    0.040    0.040    0.042    0.042 linsolve.py:1(<module>)
        4    0.040    0.010   31.685    7.921 analyzer.py:452(add)
170182/169870    0.039    0.000    0.039    0.000 {len}
    68580    0.037    0.000    0.037    0.000 {method 'rstrip' of 'str' objects}
        1    0.036    0.036    0.037    0.037 __init__.py:88(<module>)
        1    0.034    0.034    0.034    0.034 fitpack.py:23(<module>)
        1    0.033    0.033    0.943    0.943 stats.py:165(<module>)
        2    0.033    0.016    0.075    0.038 machar.py:114(_do_init)
        1    0.032    0.032    0.039    0.039 iterative.py:1(<module>)
     1047    0.031    0.000    0.071    0.000 arrayprint.py:636(__init__)
       19    0.031    0.002    0.031    0.002 {numpy.core.multiarray.zeros}
       17    0.030    0.002    2.819    0.166 __init__.py:1(<module>)
        1    0.028    0.028    0.599    0.599 figure.py:13(<module>)
        1    0.027    0.027    0.032    0.032 mio5.py:8(<module>)
    67016    0.027    0.000    0.027    0.000 {numpy.core.umath.geterrobj}
     6035    0.027    0.000    0.027    0.000 {method 'expandtabs' of 'str' objects}
        1    0.025    0.025    0.025    0.025 basic.py:5(<module>)
     3141    0.024    0.000    0.024    0.000 {method 'compress' of 'numpy.ndarray' objects}
     1050    0.023    0.000    0.184    0.000 analyzer.py:302(autocorrelation_coefficient)
     3141    0.023    0.000    0.802    0.000 arrayprint.py:524(__init__)
    86947    0.022    0.000    0.022    0.000 {method 'append' of 'list' objects}
      247    0.021    0.000    0.033    0.000 doccer.py:71(indentcount_lines)
        1    0.021    0.021    0.837    0.837 distributions.py:7(<module>)
     6043    0.021    0.000    0.021    0.000 {method 'splitlines' of 'str' objects}
        1    0.020    0.020    0.020    0.020 mathtext.py:19(<module>)
        1    0.020    0.020    0.078    0.078 font_manager.py:21(<module>)
     1047    0.018    0.000    1.878    0.002 arrayprint.py:335(array2string)
        1    0.018    0.018    0.018    0.018 hashlib.py:55(<module>)
     5087    0.017    0.000    0.141    0.000 fromnumeric.py:1563(any)
     2773    0.017    0.000    0.670    0.000 fftpack.py:43(_raw_fft)
        1    0.016    0.016    0.016    0.016 odepack.py:2(<module>)
        1    0.016    0.016    0.027    0.027 image.py:5(<module>)
   312/74    0.016    0.000    0.042    0.001 sre_parse.py:380(_parse)
        1    0.016    0.016    2.841    2.841 analyzer.py:5(<module>)
        1    0.016    0.016    0.096    0.096 Image.py:27(<module>)
        1    0.016    0.016    0.017    0.017 __init__.py:4(<module>)
        1    0.016    0.016    0.075    0.075 ndgriddata.py:6(<module>)
        1    0.015    0.015    0.017    0.017 transforms.py:30(<module>)
     1047    0.015    0.000    1.893    0.002 numeric.py:1365(array_repr)
     7199    0.015    0.000    0.033    0.000 numeric.py:322(asanyarray)
        1    0.015    0.015    0.576    0.576 __init__.py:106(<module>)
        3    0.015    0.005    0.064    0.021 __init__.py:6(<module>)
        1    0.014    0.014    0.129    0.129 __init__.py:99(<module>)
        1    0.014    0.014    0.232    0.232 basic.py:7(<module>)
     2108    0.014    0.000    0.015    0.000 _methods.py:32(_count_reduce_items)
        1    0.014    0.014    0.014    0.014 backend_agg.py:22(<module>)
      130    0.014    0.000    0.015    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
     5087    0.013    0.000    0.087    0.000 _methods.py:24(_any)
        1    0.013    0.013    0.045    0.045 backend_tkagg.py:3(<module>)
      271    0.013    0.000    0.016    0.000 function_base.py:3220(add_newdoc)
        1    0.013    0.013    0.013    0.013 quadpack.py:2(<module>)
      223    0.012    0.000    0.021    0.000 sre_compile.py:208(_optimize_charset)
     1047    0.012    0.000    0.488    0.000 arrayprint.py:697(__init__)
    14435    0.012    0.000    0.012    0.000 {isinstance}
     1053    0.012    0.000    0.013    0.000 analyzer.py:371(_raw_data_in_slices)
        1    0.012    0.012    0.084    0.084 axes.py:1(<module>)
        1    0.012    0.012    0.024    0.024 triangulation.py:1(<module>)
     1054    0.012    0.000    0.049    0.000 _methods.py:42(_mean)
        1    0.012    0.012    0.012    0.012 cobyla.py:11(<module>)
        1    0.011    0.011    0.046    0.046 contour.py:4(<module>)
     4907    0.011    0.000    1.819    0.000 numeric.py:252(asarray)
        2    0.011    0.005    0.013    0.007 function_base.py:1(<module>)
        1    0.011    0.011    0.011    0.011 lbfgsb.py:9(<module>)
     5087    0.011    0.000    0.098    0.000 {method 'any' of 'numpy.ndarray' objects}
        4    0.011    0.003    0.011    0.003 {numpy.core.multiarray.fromfile}
       11    0.010    0.001    0.013    0.001 collections.py:282(namedtuple)
        1    0.010    0.010    0.010    0.010 morestats.py:5(<module>)
        1    0.010    0.010    0.012    0.012 legendre.py:83(<module>)
        2    0.010    0.005    0.214    0.107 __init__.py:173(<module>)
        1    0.010    0.010    0.015    0.015 filters.py:31(<module>)
        1    0.010    0.010    0.010    0.010 kde.py:20(<module>)
        1    0.010    0.010    0.013    0.013 cbook.py:4(<module>)
   601/69    0.010    0.000    0.038    0.001 sre_compile.py:33(_compile)
        1    0.010    0.010    0.011    0.011 hermite_e.py:59(<module>)
        1    0.010    0.010    0.010    0.010 _validation.py:1(<module>)
        1    0.009    0.009    0.009    0.009 minpack.py:1(<module>)
        1    0.009    0.009    0.009    0.009 slsqp.py:14(<module>)
        1    0.009    0.009    0.010    0.010 mio4.py:2(<module>)
        1    0.009    0.009    0.366    0.366 backend_bases.py:28(<module>)
        1    0.009    0.009    0.067    0.067 urllib.py:23(<module>)
        1    0.009    0.009    0.012    0.012 polynomial.py:54(<module>)
        1    0.009    0.009    0.009    0.009 nnls.py:1(<module>)
        1    0.009    0.009    0.009    0.009 linesearch.py:13(<module>)
     3570    0.009    0.000    0.010    0.000 sre_parse.py:183(__next)
        1    0.009    0.009   34.546   34.546 train.py:1(<module>)
        1    0.009    0.009    0.009    0.009 tkagg.py:1(<module>)
    14421    0.009    0.000    0.009    0.000 {min}
        1    0.008    0.008    0.302    0.302 __init__.py:141(<module>)
        1    0.008    0.008    0.011    0.011 laguerre.py:59(<module>)
     6296    0.008    0.000    0.009    0.000 {method 'join' of 'str' objects}
        1    0.008    0.008    0.008    0.008 fftpack.py:32(<module>)
        1    0.008    0.008    0.167    0.167 widgets.py:10(<module>)
     1054    0.008    0.000    0.064    0.000 function_base.py:412(average)
       59    0.008    0.000    0.008    0.000 sre_compile.py:259(_mk_bitmap)
        1    0.008    0.008    0.011    0.011 hermite.py:59(<module>)
        1    0.008    0.008    0.012    0.012 case.py:1(<module>)
        1    0.008    0.008    0.008    0.008 distance.py:63(<module>)
     2773    0.008    0.000    0.678    0.000 fftpack.py:81(fft)
        2    0.008    0.004    0.016    0.008 __init__.py:38(<module>)
        1    0.008    0.008    0.063    0.063 __init__.py:74(<module>)
        1    0.008    0.008    0.975    0.975 __init__.py:317(<module>)
        1    0.008    0.008    0.008    0.008 tnc.py:33(<module>)
     1050    0.007    0.000    0.007    0.000 {numpy.core.multiarray.correlate2}
    12/11    0.007    0.001    0.128    0.012 {__import__}
        1    0.007    0.007    0.072    0.072 __init__.py:15(<module>)
  828/308    0.007    0.000    0.008    0.000 sre_parse.py:141(getwidth)
        1    0.007    0.007    0.017    0.017 dates.py:109(<module>)
        1    0.007    0.007    0.008    0.008 chebyshev.py:87(<module>)
        1    0.007    0.007    0.030    0.030 tempfile.py:18(<module>)
        1    0.007    0.007    0.041    0.041 __init__.py:45(<module>)
        1    0.006    0.006    0.447    0.447 __init__.py:142(<module>)
     1047    0.006    0.000    0.008    0.000 arrayprint.py:686(__init__)
     1047    0.006    0.000    0.006    0.000 arrayprint.py:713(__init__)
        1    0.006    0.006    0.666    0.666 pyplot.py:17(<module>)
      389    0.006    0.000    0.006    0.000 {method 'search' of '_sre.SRE_Pattern' objects}
        1    0.006    0.006    0.006    0.006 collections.py:1(<module>)
        1    0.006    0.006    0.093    0.093 textpath.py:3(<module>)
        1    0.005    0.005    0.005    0.005 zeros.py:1(<module>)
        4    0.005    0.001    0.067    0.017 _methods.py:100(_std)
        1    0.005    0.005    0.016    0.016 result.py:1(<module>)
     3141    0.005    0.000    0.005    0.000 arrayprint.py:658(__init__)
       11    0.005    0.000    0.011    0.001 artist.py:817(get_aliases)
        1    0.005    0.005    0.008    0.008 utilities.py:1(<module>)
       11    0.005    0.000    0.010    0.001 artist.py:873(_get_setters_and_targets)
        1    0.005    0.005    0.027    0.027 artist.py:1(<module>)
        1    0.005    0.005    0.005    0.005 shutil.py:5(<module>)
        1    0.005    0.005    0.035    0.035 full.py:1(<module>)
        1    0.005    0.005    0.045    0.045 _minimize.py:8(<module>)
       41    0.004    0.000    0.004    0.000 {dir}
        3    0.004    0.001    0.842    0.281 analyzer.py:257(all_rolloff_freq)
       41    0.004    0.000    0.004    0.000 {nt._isdir}
        1    0.004    0.004    0.020    0.020 __init__.py:137(<module>)
        1    0.004    0.004    0.049    0.049 inspect.py:25(<module>)
        1    0.004    0.004    0.118    0.118 __init__.py:147(<module>)
        1    0.004    0.004    0.020    0.020 ticker.py:123(<module>)
        1    0.004    0.004    0.141    0.141 __init__.py:96(<module>)
       85    0.004    0.000    0.147    0.002 distributions.py:986(__init__)
     8399    0.004    0.000    0.004    0.000 {method 'startswith' of 'str' objects}
        1    0.004    0.004    0.015    0.015 __init__.py:65(<module>)
    12646    0.004    0.000    0.004    0.000 {method 'lstrip' of 'str' objects}
        1    0.004    0.004    0.012    0.012 npyio.py:1(<module>)
        1    0.004    0.004    0.076    0.076 __init__.py:47(<module>)
        1    0.004    0.004    0.006    0.006 pickle.py:25(<module>)
        1    0.004    0.004    0.037    0.037 pyparsing_py2.py:59(<module>)
     1047    0.004    0.000    0.004    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     1050    0.004    0.000    0.093    0.000 fromnumeric.py:2592(var)
     2389    0.004    0.000    0.006    0.000 sre_parse.py:131(__getitem__)
        1    0.004    0.004    0.005    0.005 mlab.py:142(<module>)
        1    0.004    0.004    0.004    0.004 _pylab_helpers.py:3(<module>)
        1    0.004    0.004    0.006    0.006 legend.py:13(<module>)
        1    0.004    0.004    0.426    0.426 colorbar.py:20(<module>)
        1    0.004    0.004    0.027    0.027 __init__.py:3(<module>)
        1    0.004    0.004    0.004    0.004 parametercontainer.py:1(<module>)
        1    0.003    0.003    0.038    0.038 interpolate.py:2(<module>)
     2997    0.003    0.000    0.012    0.000 sre_parse.py:202(get)
        1    0.003    0.003    0.049    0.049 mio.py:3(<module>)
        1    0.003    0.003    0.011    0.011 util.py:1(<module>)
      393    0.003    0.000    0.003    0.000 function_base.py:1819(__init__)
     1047    0.003    0.000    0.014    0.000 fromnumeric.py:1087(ravel)
        1    0.003    0.003    0.013    0.013 _internal.py:4(<module>)
        1    0.003    0.003    0.021    0.021 ctypeslib.py:51(<module>)
     1047    0.003    0.000    0.003    0.000 {reduce}
        1    0.003    0.003    0.004    0.004 rrule.py:6(<module>)
4285/4265    0.003    0.000    0.004    0.000 {issubclass}
        6    0.003    0.001    0.055    0.009 patches.py:1598(_pprint_styles)
        1    0.003    0.003    0.004    0.004 arrayprint.py:4(<module>)
        1    0.003    0.003    0.376    0.376 collections.py:10(<module>)
        1    0.003    0.003    0.011    0.011 cm.py:6(<module>)
        1    0.003    0.003    0.015    0.015 decimal.py:116(<module>)
        1    0.003    0.003    0.066    0.066 rcsetup.py:14(<module>)
     3717    0.003    0.000    0.003    0.000 {getattr}
       16    0.003    0.000    0.003    0.000 {nt.stat}
        1    0.003    0.003    0.359    0.359 nonlin.py:110(<module>)
      399    0.003    0.000    0.010    0.000 artist.py:845(get_valid_values)
        1    0.003    0.003    0.003    0.003 mstats.py:78(<module>)
        1    0.003    0.003    0.003    0.003 __init__.py:24(<module>)
      266    0.003    0.000    0.004    0.000 inspect.py:743(getargs)
        1    0.003    0.003    0.018    0.018 index_tricks.py:1(<module>)
        1    0.003    0.003    0.055    0.055 misc.py:1(<module>)
        1    0.003    0.003    0.021    0.021 random.py:40(<module>)
   217/69    0.003    0.000    0.043    0.001 sre_parse.py:302(_parse_sub)
        1    0.003    0.003    0.005    0.005 decorators.py:15(<module>)
        1    0.003    0.003    0.006    0.006 axis.py:3(<module>)
     1050    0.003    0.000    0.004    0.000 numeric.py:674(_mode_from_name)
        1    0.003    0.003    0.006    0.006 Tkinter.py:31(<module>)
        1    0.003    0.003    0.003    0.003 loader.py:1(<module>)
        3    0.003    0.001    0.003    0.001 {nt.open}
       11    0.003    0.000    0.024    0.002 artist.py:950(pprint_setters)
      592    0.003    0.000    0.003    0.000 {abs}
        1    0.003    0.003    0.007    0.007 core.py:21(<module>)
        1    0.003    0.003    0.003    0.003 shortcuts.py:1(<module>)
        1    0.003    0.003    0.007    0.007 _datasource.py:33(<module>)
        1    0.003    0.003    0.006    0.006 numerictypes.py:82(<module>)
        6    0.003    0.000    0.003    0.000 analyzer.py:157(find_indexes)
        1    0.003    0.003    0.004    0.004 subprocess.py:389(<module>)
        1    0.003    0.003    0.306    0.306 gate.py:4(<module>)
        1    0.003    0.003    0.011    0.011 connection.py:1(<module>)
        1    0.002    0.002    0.371    0.371 _root.py:7(<module>)
        1    0.002    0.002    0.049    0.049 __init__.py:44(<module>)
        2    0.002    0.001    0.003    0.002 __init__.py:10(<module>)
        1    0.002    0.002    0.003    0.003 dis.py:1(<module>)
        1    0.002    0.002    0.047    0.047 fontconfig_pattern.py:7(<module>)
        1    0.002    0.002    0.003    0.003 scale.py:1(<module>)
        1    0.002    0.002    0.003    0.003 utils.py:3(<module>)
        1    0.002    0.002    0.088    0.088 lines.py:4(<module>)
        1    0.002    0.002    0.004    0.004 compat.py:3(<module>)
     1050    0.002    0.000    0.014    0.000 numeric.py:679(correlate)
        1    0.002    0.002    0.002    0.002 arrayterator.py:9(<module>)
        1    0.002    0.002    0.049    0.049 __init__.py:8(<module>)
        1    0.002    0.002    0.289    0.289 type_check.py:3(<module>)
        1    0.002    0.002    0.005    0.005 parser.py:7(<module>)
       85    0.002    0.000    0.135    0.002 distributions.py:1071(_construct_doc)
        1    0.002    0.002    0.066    0.066 patches.py:3(<module>)
       65    0.002    0.000    0.002    0.000 cm.py:29(revcmap)
      223    0.002    0.000    0.024    0.000 sre_compile.py:179(_compile_charset)
        1    0.002    0.002    0.016    0.016 colors.py:49(<module>)
        1    0.002    0.002    0.002    0.002 Tkinter.py:2764(Radiobutton)
        1    0.002    0.002    0.004    0.004 afm.py:35(<module>)
       10    0.002    0.000    0.002    0.000 {open}
        6    0.002    0.000    0.002    0.000 {imp.find_module}
        1    0.002    0.002    0.405    0.405 add_newdocs.py:9(<module>)
        1    0.002    0.002    0.079    0.079 decomp_schur.py:1(<module>)
        1    0.002    0.002    0.002    0.002 FileDialog.py:9(<module>)
        1    0.002    0.002    0.304    0.304 functions.py:1(<module>)
        4    0.002    0.001    3.275    0.819 mlab.py:430(specgram)
        1    0.002    0.002    0.147    0.147 csr.py:1(<module>)
        1    0.002    0.002    0.002    0.002 triangulate.py:1(<module>)
      266    0.002    0.000    0.008    0.000 inspect.py:803(getargspec)
        1    0.002    0.002    0.035    0.035 tokenize.py:23(<module>)
        1    0.002    0.002    0.003    0.003 __init__.py:761(rc_params_from_file)
     1054    0.002    0.000    0.050    0.000 {method 'mean' of 'numpy.ndarray' objects}
      188    0.002    0.000    0.098    0.001 re.py:226(_compile)
        2    0.002    0.001    0.002    0.001 shape_base.py:1(<module>)
     2179    0.002    0.000    0.003    0.000 sre_parse.py:196(match)
       11    0.002    0.000    0.002    0.000 {compile}
      685    0.002    0.000    0.002    0.000 {method 'replace' of 'str' objects}
        1    0.002    0.002    0.002    0.002 case.py:133(TestCase)
     1720    0.002    0.000    0.002    0.000 {built-in method __new__ of type object at 0x1E227020}
       13    0.002    0.000    0.002    0.000 {method 'close' of 'file' objects}
      433    0.002    0.000    0.002    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
     1409    0.002    0.000    0.002    0.000 artist.py:905(is_alias)
        1    0.002    0.002    0.002    0.002 hb.py:11(<module>)
        1    0.002    0.002    0.002    0.002 lil.py:2(<module>)
        1    0.002    0.002    0.002    0.002 tz.py:6(<module>)
      190    0.002    0.000    0.002    0.000 {zip}
      132    0.002    0.000    0.002    0.000 pyparsing_py2.py:681(__init__)
        1    0.002    0.002    0.976    0.976 importancemixing.py:1(<module>)
        1    0.002    0.002    0.006    0.006 sysconfig.py:10(<module>)
    174/2    0.002    0.000    0.005    0.002 pyparsing_py2.py:926(_parseNoCache)
       11    0.001    0.000    0.005    0.000 decorator.py:142(make)
      642    0.001    0.000    0.002    0.000 string.py:158(convert)
     2773    0.001    0.000    0.001    0.000 mlab.py:192(detrend_none)
        1    0.001    0.001    0.021    0.021 kohonen.py:1(<module>)
        1    0.001    0.001    0.988    0.988 backprop.py:1(<module>)
       69    0.001    0.000    0.011    0.000 sre_compile.py:362(_compile_info)
        1    0.001    0.001    0.001    0.001 misc.py:4(<module>)
        1    0.001    0.001    0.120    0.120 _tukeylambda_stats.py:1(<module>)
        1    0.001    0.001    0.002    0.002 runner.py:1(<module>)
        1    0.001    0.001    0.006    0.006 pyplot.py:1926(_setup_pyplot_info_docstrings)
       91    0.001    0.000    0.001    0.000 docstring.py:38(__call__)
        1    0.001    0.001    0.003    0.003 decorator.py:29(<module>)
      757    0.001    0.000    0.001    0.000 {hasattr}
     1047    0.001    0.000    0.001    0.000 arrayprint.py:741(__init__)
        1    0.001    0.001    0.050    0.050 polynomial.py:3(<module>)
        1    0.001    0.001    0.008    0.008 gaussprocess.py:1(<module>)
        1    0.001    0.001    0.003    0.003 main.py:1(<module>)
       19    0.001    0.000    0.003    0.000 six.py:320(exec_)
        1    0.001    0.001    0.046    0.046 __init__.py:19(<module>)
        1    0.001    0.001    0.010    0.010 optimize.py:16(<module>)
      169    0.001    0.000    0.008    0.000 cbook.py:892(dedent)
        1    0.001    0.001    0.002    0.002 supervised.py:1(<module>)
        1    0.001    0.001    0.043    0.043 __init__.py:52(<module>)
        4    0.001    0.000    0.001    0.000 function_base.py:2329(hanning)
        1    0.001    0.001    0.001    0.001 fromnumeric.py:2(<module>)
        1    0.001    0.001    0.002    0.002 miobase.py:7(<module>)
        1    0.001    0.001    0.003    0.003 sequential.py:1(<module>)
     1032    0.001    0.000    0.002    0.000 copy_reg.py:46(_reconstructor)
      399    0.001    0.000    0.001    0.000 {method 'mro' of 'type' objects}
        2    0.001    0.000    0.050    0.025 __init__.py:9(<module>)
        1    0.001    0.001    0.001    0.001 functions.py:3(<module>)
      237    0.001    0.000    0.002    0.000 sre_compile.py:355(_simple)
        1    0.001    0.001    0.001    0.001 six.py:1(<module>)
        1    0.001    0.001    0.004    0.004 special_matrices.py:1(<module>)
       69    0.001    0.000    0.095    0.001 sre_compile.py:496(compile)
        1    0.001    0.001    0.002    0.002 arraysetops.py:25(<module>)
        1    0.001    0.001    0.001    0.001 __init__.py:101(<module>)
        1    0.001    0.001    0.001    0.001 evolvable.py:1(<module>)
       50    0.001    0.000    0.002    0.000 colors.py:329(to_rgba)
      843    0.001    0.000    0.001    0.000 sre_parse.py:139(append)
        4    0.001    0.000   29.653    7.413 analyzer.py:379(push)
        1    0.001    0.001    0.001    0.001 ImagePalette.py:19(<module>)
     1047    0.001    0.000    0.001    0.000 {method 'strip' of 'str' objects}
        1    0.001    0.001    0.001    0.001 defmatrix.py:1(<module>)
        1    0.001    0.001    0.001    0.001 base.py:1(<module>)
        1    0.001    0.001    0.001    0.001 errors.py:9(<module>)
        1    0.001    0.001    0.001    0.001 measurements.py:31(<module>)
        1    0.001    0.001    0.001    0.001 shared.py:1(<module>)
        1    0.001    0.001    0.001    0.001 geo.py:1(<module>)
     1152    0.001    0.000    0.001    0.000 sre_parse.py:127(__len__)
       26    0.001    0.000    0.001    0.000 numerictypes.py:230(bitname)
        1    0.001    0.001    0.002    0.002 biasunit.py:1(<module>)
       69    0.001    0.000    0.044    0.001 sre_parse.py:676(parse)
      140    0.001    0.000    0.005    0.000 cm.py:57(_generate_cmap)
        1    0.001    0.001    0.001    0.001 neurondecomposable.py:1(<module>)
     1053    0.001    0.000    0.001    0.000 analyzer.py:275(_step_length)
        3    0.001    0.000    0.001    0.000 {nt.listdir}
      502    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
        1    0.001    0.001    0.002    0.002 swiping.py:1(<module>)
        1    0.001    0.001    0.002    0.002 feedforward.py:3(<module>)
        1    0.001    0.001    0.002    0.002 io.py:34(<module>)
      526    0.001    0.000    0.001    0.000 {range}
       59    0.001    0.000    0.001    0.000 ntpath.py:164(split)
       10    0.001    0.000    0.002    0.000 abc.py:86(__new__)
        1    0.001    0.001    0.001    0.001 neuronlayer.py:1(<module>)
        1    0.001    0.001    0.001    0.001 dataset.py:1(<module>)
      601    0.001    0.000    0.001    0.000 sre_parse.py:91(__init__)
      290    0.001    0.000    0.001    0.000 {method 'format' of 'str' objects}
       13    0.001    0.000    0.025    0.002 distributions.py:5740(__init__)
       42    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
        1    0.001    0.001    0.005    0.005 matfuncs.py:5(<module>)
        1    0.001    0.001    0.002    0.002 _mathtext_data.py:3(<module>)
     1341    0.001    0.000    0.001    0.000 _mathtext_data.py:1767(<genexpr>)
        1    0.001    0.001    0.001    0.001 network.py:1(<module>)
      485    0.001    0.000    0.001    0.000 urllib.py:1200(<genexpr>)
      485    0.001    0.000    0.001    0.000 urlparse.py:331(<genexpr>)
        1    0.001    0.001    0.001    0.001 compressed.py:2(<module>)
        1    0.001    0.001    0.001    0.001 offsetbox.py:15(<module>)
        1    0.001    0.001    0.002    0.002 pyplot.py:1618(get_plot_commands)
        1    0.001    0.001    0.001    0.001 pilutil.py:7(<module>)
     1359    0.001    0.000    0.001    0.000 {method 'group' of '_sre.SRE_Match' objects}
        1    0.001    0.001    0.001    0.001 bidirectional.py:1(<module>)
        1    0.001    0.001    0.001    0.001 dviread.py:20(<module>)
        2    0.001    0.000    0.001    0.000 {numpy.fft.fftpack_lite.cffti}
       10    0.001    0.000    0.003    0.000 colors.py:723(from_list)
        1    0.001    0.001    0.001    0.001 signals.py:1(<module>)
       11    0.001    0.000    0.002    0.000 decorator.py:81(__init__)
        6    0.001    0.000    0.001    0.000 patches.py:1561(_pprint_table)
      331    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
        1    0.001    0.001    0.001    0.001 _import_tools.py:1(<module>)
     1092    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     1204    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
        1    0.001    0.001    0.001    0.001 anneal.py:4(<module>)
        3    0.001    0.000    0.001    0.000 numeric.py:207(extend_all)
       11    0.001    0.000    0.001    0.000 {eval}
       13    0.001    0.000    0.002    0.000 path.py:87(__init__)
      399    0.001    0.000    0.001    0.000 artist.py:915(aliased_name)
        2    0.001    0.000    0.001    0.000 {nt.urandom}
      246    0.001    0.000    0.001    0.000 pyplot.py:1937(pad)
        1    0.001    0.001    0.001    0.001 records.py:36(<module>)
        1    0.001    0.001    0.001    0.001 legend_handler.py:25(<module>)
       51    0.001    0.000    0.002    0.000 nosetester.py:137(__init__)
        1    0.001    0.001    0.001    0.001 _util.py:1(<module>)
        1    0.001    0.001    0.001    0.001 patches.py:2860(ArrowStyle)
        1    0.001    0.001    0.001    0.001 _iotools.py:1(<module>)
     1607    0.001    0.000    0.001    0.000 {callable}
      463    0.001    0.000    0.001    0.000 inspect.py:142(isfunction)
      140    0.001    0.000    0.001    0.000 colors.py:491(__init__)
       18    0.001    0.000    0.001    0.000 pyparsing_py2.py:137(_str2dict)
      138    0.001    0.000    0.001    0.000 sre_compile.py:475(isstring)
        1    0.001    0.001    0.002    0.002 FixTk.py:21(convert_path)
        1    0.001    0.001    0.001    0.001 base64.py:3(<module>)
        1    0.001    0.001    0.004    0.004 mio5_params.py:6(<module>)
        3    0.001    0.000    0.001    0.000 __init__.py:78(CFUNCTYPE)
        1    0.001    0.001    0.005    0.005 markers.py:5(<module>)
       31    0.001    0.000    0.001    0.000 _inspect.py:157(formatargspec)
        1    0.001    0.001    0.001    0.001 fitpack2.py:7(<module>)
        2    0.001    0.000    0.001    0.001 utils.py:1(<module>)
        1    0.001    0.001    0.001    0.001 scale.py:101(LogScale)
      144    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
      140    0.000    0.000    0.001    0.000 colors.py:649(__init__)
        1    0.000    0.000    0.001    0.001 polar.py:1(<module>)
        1    0.000    0.000    0.008    0.008 text.py:3(<module>)
        1    0.000    0.000    0.001    0.001 netcdf.py:13(<module>)
        1    0.000    0.000    0.001    0.001 path.py:3(<module>)
        1    0.000    0.000    0.000    0.000 docstring.py:1(<module>)
      172    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.001    0.001 tzwin.py:2(<module>)
      155    0.000    0.000    0.001    0.000 sre_parse.py:258(_escape)
        1    0.000    0.000    0.000    0.000 heapq.py:31(<module>)
        1    0.000    0.000    0.001    0.001 precision.py:6(<module>)
  142/140    0.000    0.000    0.001    0.000 pyparsing_py2.py:287(__init__)
        1    0.000    0.000    0.001    0.001 opcode.py:5(<module>)
       42    0.000    0.000    0.001    0.000 copy.py:306(_reconstruct)
        1    0.000    0.000    0.002    0.002 numerictypes.py:302(_add_aliases)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:8(<module>)
        1    0.000    0.000    0.001    0.001 threading.py:1(<module>)
       87    0.000    0.000    0.007    0.000 docstring.py:103(dedent_interpd)
      161    0.000    0.000    0.007    0.000 docstring.py:86(dedent)
        1    0.000    0.000    0.001    0.001 calendar.py:6(<module>)
       58    0.000    0.000    0.001    0.000 ntpath.py:63(join)
        1    0.000    0.000    0.000    0.000 polyutils.py:33(<module>)
        1    0.000    0.000    0.001    0.001 extras.py:10(<module>)
        1    0.000    0.000    0.000    0.000 numpytest.py:1(<module>)
        1    0.000    0.000    0.000    0.000 module.py:1(<module>)
        1    0.000    0.000    0.000    0.000 gradientdescent.py:1(<module>)
        1    0.000    0.000    0.004    0.004 urlparse.py:29(<module>)
       36    0.000    0.000    0.001    0.000 pyparsing_py2.py:2664(__init__)
        1    0.000    0.000    0.000    0.000 umfpack.py:6(<module>)
       54    0.000    0.000    0.001    0.000 cbook.py:484(is_string_like)
       13    0.000    0.000    0.023    0.002 distributions.py:5835(_construct_doc)
      266    0.000    0.000    0.001    0.000 <string>:8(__new__)
       69    0.000    0.000    0.050    0.001 sre_compile.py:481(_code)
       69    0.000    0.000    0.000    0.000 {_sre.compile}
      266    0.000    0.000    0.001    0.000 inspect.py:67(ismethod)
       27    0.000    0.000    0.001    0.000 core.py:821(__init__)
        1    0.000    0.000    0.000    0.000 mio4.py:98(VarReader4)
       23    0.000    0.000    0.001    0.000 pyparsing_py2.py:1548(__init__)
        8    0.000    0.000    0.000    0.000 utils.py:113(__call__)
       31    0.000    0.000    0.000    0.000 _inspect.py:59(getargs)
        1    0.000    0.000    0.000    0.000 moduleslice.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nonlin.py:669(LowRankMatrix)
        1    0.000    0.000    0.000    0.000 artist.py:65(Artist)
    75/72    0.000    0.000    0.001    0.000 pyparsing_py2.py:110(_ustr)
        1    0.000    0.000    0.000    0.000 ImageColor.py:20(<module>)
        3    0.000    0.000    0.000    0.000 {method 'split' of '_sre.SRE_Pattern' objects}
        1    0.000    0.000    0.031    0.031 csr.py:11(swig_import_helper)
      139    0.000    0.000    0.001    0.000 inspect.py:472(getmodule)
     1481    0.000    0.000    0.000    0.000 {chr}
      175    0.000    0.000    0.000    0.000 pyparsing_py2.py:1475(__getattr__)
        1    0.000    0.000    0.000    0.000 helper.py:3(<module>)
        1    0.000    0.000    0.001    0.001 mio5.py:108(MatFile5Reader)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
       27    0.000    0.000    0.000    0.000 artist.py:28(allow_rasterization)
        1    0.000    0.000    0.000    0.000 streamplot.py:4(<module>)
       72    0.000    0.000    0.000    0.000 pyparsing_py2.py:907(preParse)
        1    0.000    0.000    0.052    0.052 patches.py:1692(BoxStyle)
        1    0.000    0.000    0.000    0.000 _inspect.py:6(<module>)
      423    0.000    0.000    0.000    0.000 collections.py:323(<genexpr>)
       36    0.000    0.000    0.001    0.000 pyparsing_py2.py:2395(__init__)
        1    0.000    0.000    0.000    0.000 utf_16.py:8(<module>)
        1    0.000    0.000    0.000    0.000 bezier.py:3(<module>)
       85    0.000    0.000    0.000    0.000 cbook.py:475(iterable)
       21    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        1    0.000    0.000    0.000    0.000 textwrap.py:243(_wrap_chunks)
        1    0.000    0.000    0.000    0.000 quiver.py:15(<module>)
        1    0.000    0.000    0.007    0.007 texmanager.py:34(<module>)
        1    0.000    0.000    0.000    0.000 idl.py:29(<module>)
        1    0.000    0.000    0.000    0.000 classification.py:1(<module>)
        1    0.000    0.000    0.000    0.000 polyint.py:1(<module>)
        1    0.000    0.000    0.001    0.001 pyparsing_py2.py:3276(oneOf)
    17/13    0.000    0.000    0.001    0.000 abc.py:148(__subclasscheck__)
       43    0.000    0.000    0.003    0.000 copy.py:66(copy)
        7    0.000    0.000    0.003    0.000 nonlin.py:1464(_nonlin_wrapper)
        6    0.000    0.000    0.000    0.000 function_base.py:6(linspace)
      266    0.000    0.000    0.000    0.000 inspect.py:209(iscode)
      267    0.000    0.000    0.000    0.000 {numpy.lib._compiled_base.add_docstring}
       27    0.000    0.000    0.033    0.001 {map}
       18    0.000    0.000    0.000    0.000 {numpy.core.multiarray.arange}
        1    0.000    0.000    0.004    0.004 axes.py:344(Axes)
        1    0.000    0.000    0.000    0.000 py3k.py:4(<module>)
        1    0.000    0.000    0.000    0.000 core.py:5507(mvoid)
        4    0.000    0.000    0.000    0.000 miobase.py:127(convert_dtypes)
       11    0.000    0.000    0.035    0.003 artist.py:1237(kwdoc)
       74    0.000    0.000    0.000    0.000 _inspect.py:150(strseq)
     30/2    0.000    0.000    0.005    0.002 pyparsing_py2.py:2406(parseImpl)
      117    0.000    0.000    0.002    0.000 re.py:134(match)
        1    0.000    0.000    0.000    0.000 mdrnnlayer.py:10(<module>)
        1    0.000    0.000    0.000    0.000 _cm.py:5(<module>)
      127    0.000    0.000    0.000    0.000 ntpath.py:122(splitdrive)
        1    0.000    0.000    0.000    0.000 legend.py:38(DraggableLegend)
       23    0.000    0.000    0.002    0.000 core.py:5932(getdoc)
        9    0.000    0.000    0.000    0.000 inspect.py:844(formatargspec)
     22/3    0.000    0.000    0.000    0.000 pyparsing_py2.py:2342(streamline)
     1200    0.000    0.000    0.000    0.000 sre_compile.py:25(_identityfunction)
        1    0.000    0.000    0.000    0.000 _endian.py:4(<module>)
        2    0.000    0.000    0.000    0.000 {_ctypes.POINTER}
        1    0.000    0.000    0.000    0.000 parser.py:290(parser)
        1    0.000    0.000    0.000    0.000 axes.py:8940(SubplotBase)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:3(<module>)
        9    0.000    0.000    0.009    0.001 pyparsing_py2.py:1685(__init__)
      142    0.000    0.000    0.000    0.000 pyparsing_py2.py:278(__new__)
       18    0.000    0.000    0.000    0.000 core.py:905(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:675(RegularPolygon)
        1    0.000    0.000    0.003    0.003 version.py:27(<module>)
     1192    0.000    0.000    0.000    0.000 {ord}
        1    0.000    0.000    0.001    0.001 gzip.py:4(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:343(_add_integer_aliases)
       95    0.000    0.000    0.000    0.000 sre_parse.py:226(_class_escape)
        1    0.000    0.000    0.000    0.000 decimal.py:506(Decimal)
       96    0.000    0.000    0.000    0.000 sre_parse.py:73(opengroup)
       14    0.000    0.000    0.015    0.001 pyparsing_py2.py:1809(__init__)
     20/8    0.000    0.000    0.004    0.001 pyparsing_py2.py:2531(parseImpl)
        1    0.000    0.000    0.000    0.000 csv.py:4(<module>)
        1    0.000    0.000    0.024    0.024 csc.py:9(<module>)
        1    0.000    0.000    0.000    0.000 trainer.py:1(<module>)
       69    0.000    0.000    0.001    0.000 sre_parse.py:179(__init__)
        1    0.000    0.000    0.000    0.000 defchararray.py:17(<module>)
        1    0.000    0.000    0.001    0.001 patches.py:2378(ConnectionStyle)
        1    0.000    0.000    0.000    0.000 interpolate.py:1(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:4024(ConnectionPatch)
       40    0.000    0.000    0.002    0.000 core.py:107(get_object_signature)
        1    0.000    0.000    0.000    0.000 blocking_input.py:23(<module>)
        1    0.000    0.000    0.000    0.000 format.py:136(<module>)
        3    0.000    0.000    0.000    0.000 __init__.py:493(PYFUNCTYPE)
        1    0.000    0.000    0.000    0.000 _internal.py:191(_getintp_ctype)
       49    0.000    0.000    0.002    0.000 pyplot.py:2239(<lambda>)
        1    0.000    0.000    0.000    0.000 mmio.py:3(<module>)
       36    0.000    0.000    0.001    0.000 pyparsing_py2.py:1195(__add__)
        1    0.000    0.000    0.000    0.000 polytemplate.py:11(<module>)
       11    0.000    0.000    0.007    0.001 decorator.py:171(create)
        1    0.000    0.000    0.000    0.000 mstats_basic.py:6(<module>)
       40    0.000    0.000    0.001    0.000 _inspect.py:118(getargspec)
       15    0.000    0.000    0.000    0.000 rcsetup.py:38(__init__)
        1    0.000    0.000    0.000    0.000 numerictypes.py:456(_set_array_types)
        4    0.000    0.000    0.000    0.000 {method 'readline' of 'file' objects}
      235    0.000    0.000    0.000    0.000 {setattr}
        1    0.000    0.000    0.000    0.000 container.py:1(<module>)
       43    0.000    0.000    0.001    0.000 pyparsing_py2.py:2290(__init__)
        1    0.000    0.000    0.031    0.031 csr.py:9(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:1378(LogLocator)
        1    0.000    0.000    0.000    0.000 getlimits.py:2(<module>)
        1    0.000    0.000    0.000    0.000 gridspec.py:15(<module>)
       52    0.000    0.000    0.000    0.000 __init__.py:721(__getitem__)
        4    0.000    0.000    0.000    0.000 analyzer.py:146(nextpow2)
        1    0.000    0.000    0.000    0.000 polar.py:212(PolarAxes)
       73    0.000    0.000    0.003    0.000 docstring.py:117(<lambda>)
       62    0.000    0.000    0.000    0.000 ntpath.py:55(isabs)
       30    0.000    0.000    0.000    0.000 numerictypes.py:448(_add_array_type)
       21    0.000    0.000    0.000    0.000 numerictypes.py:217(_evalname)
       70    0.000    0.000    0.003    0.000 cm.py:45(_reverse_cmap_spec)
       43    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
      237    0.000    0.000    0.000    0.000 sre_parse.py:135(__setitem__)
       26    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        2    0.000    0.000    0.003    0.002 os.py:209(walk)
        1    0.000    0.000    0.002    0.002 table.py:21(<module>)
       42    0.000    0.000    0.003    0.000 pyparsing_py2.py:704(copy)
        4    0.000    0.000    0.000    0.000 {nt.putenv}
     13/7    0.000    0.000    0.007    0.001 __init__.py:291(wrapper)
       18    0.000    0.000    0.000    0.000 sre_parse.py:217(isname)
       69    0.000    0.000    0.000    0.000 sre_parse.py:68(__init__)
        1    0.000    0.000    0.000    0.000 utf_32.py:3(<module>)
       12    0.000    0.000    0.001    0.000 pyparsing_py2.py:3081(postParse)
        1    0.000    0.000    0.005    0.005 pyparsing_py2.py:3472(_makeTags)
        4    0.000    0.000    0.001    0.000 mlab.py:165(window_hanning)
        1    0.000    0.000    0.000    0.000 __init__.py:691(RcParams)
        1    0.000    0.000    0.000    0.000 core.py:2574(MaskedArray)
       15    0.000    0.000    0.000    0.000 pyparsing_py2.py:1860(__str__)
       12    0.000    0.000    0.076    0.006 getlimits.py:91(__new__)
       11    0.000    0.000    0.007    0.001 decorator.py:193(decorator)
      106    0.000    0.000    0.000    0.000 {repr}
       53    0.000    0.000    0.001    0.000 pyparsing_py2.py:1509(__init__)
       11    0.000    0.000    0.000    0.000 decorator.py:128(update)
        1    0.000    0.000    0.005    0.005 fontconfig_pattern.py:74(__init__)
     56/2    0.000    0.000    0.004    0.002 pyparsing_py2.py:2679(parseImpl)
        1    0.000    0.000    0.000    0.000 spines.py:1(<module>)
        1    0.000    0.000    0.002    0.002 difflib.py:29(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:286(_add_types)
       11    0.000    0.000    0.011    0.001 artist.py:799(__init__)
       34    0.000    0.000    0.007    0.000 doccer.py:115(decorate)
        1    0.000    0.000    0.000    0.000 relativedelta.py:6(<module>)
       71    0.000    0.000    0.097    0.001 re.py:188(compile)
       32    0.000    0.000    0.000    0.000 pyparsing_py2.py:1736(parseImpl)
       11    0.000    0.000    0.000    0.000 pyparsing_py2.py:1781(__str__)
        1    0.000    0.000    0.000    0.000 <string>:7(Polynomial)
       36    0.000    0.000    0.000    0.000 pyparsing_py2.py:425(__iadd__)
       55    0.000    0.000    0.001    0.000 {all}
        3    0.000    0.000    0.000    0.000 {nt.fdopen}
        1    0.000    0.000    0.000    0.000 pickle.py:827(Unpickler)
       96    0.000    0.000    0.000    0.000 sre_parse.py:84(closegroup)
        1    0.000    0.000    0.000    0.000 typeconv.py:1(<module>)
        7    0.000    0.000    0.000    0.000 {sorted}
        4    0.000    0.000    0.000    0.000 analyzer.py:127(__init__)
        2    0.000    0.000    0.076    0.038 getlimits.py:124(_init)
       14    0.000    0.000    0.003    0.000 genericpath.py:15(exists)
        1    0.000    0.000    0.000    0.000 distributions.py:5575(rv_discrete)
        1    0.000    0.000    0.000    0.000 recurrent.py:4(<module>)
        4    0.000    0.000    0.012    0.003 wavfile.py:97(read)
        1    0.000    0.000    0.000    0.000 numerictypes.py:785(_construct_lookups)
        1    0.000    0.000    0.000    0.000 mbcs.py:9(<module>)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quadrature.py:1(<module>)
        1    0.000    0.000    0.000    0.000 utf_8.py:8(<module>)
        1    0.000    0.000    0.000    0.000 data.py:7(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:297(create_unicode_buffer)
       59    0.000    0.000    0.001    0.000 ntpath.py:203(dirname)
       12    0.000    0.000    0.000    0.000 pyparsing_py2.py:342(__delitem__)
        4    0.000    0.000    0.004    0.001 __init__.py:71(search_function)
        1    0.000    0.000    0.000    0.000 fullnotself.py:1(<module>)
        1    0.000    0.000    0.000    0.000 machar.py:4(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:2049(Parser)
        1    0.000    0.000    0.000    0.000 bsr.py:1(<module>)
        1    0.000    0.000    0.000    0.000 legend.py:91(Legend)
        1    0.000    0.000    0.000    0.000 dok.py:1(<module>)
       49    0.000    0.000    0.000    0.000 pyplot.py:2234(_autogen_docstring)
        6    0.000    0.000    0.000    0.000 ntpath.py:398(normpath)
       13    0.000    0.000    0.000    0.000 pyparsing_py2.py:756(_normalizeParseActionArgs)
        1    0.000    0.000    0.000    0.000 kdtree.py:3(<module>)
      139    0.000    0.000    0.000    0.000 inspect.py:51(ismodule)
        1    0.000    0.000    0.000    0.000 nosetester.py:6(<module>)
       51    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        1    0.000    0.000    0.000    0.000 softmax.py:1(<module>)
        8    0.000    0.000    0.001    0.000 utils.py:157(deprecate)
        1    0.000    0.000    0.000    0.000 Dialog.py:3(<module>)
       22    0.000    0.000    0.003    0.000 analyzer.py:72(push_multiple)
       28    0.000    0.000    0.000    0.000 {method 'read' of 'file' objects}
        8    0.000    0.000    0.000    0.000 nonlin.py:216(_set_doc)
       97    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        7    0.000    0.000    0.000    0.000 parser.py:215(_convert)
        3    0.000    0.000    0.003    0.001 tempfile.py:230(_mkstemp_inner)
        1    0.000    0.000    0.000    0.000 numerictypes.py:433(_construct_char_code_lookup)
       50    0.000    0.000    0.000    0.000 docstring.py:81(__call__)
      140    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
      269    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 rprop.py:2(<module>)
        1    0.000    0.000    0.000    0.000 ssl.py:56(<module>)
        1    0.000    0.000    0.000    0.000 borderswiping.py:1(<module>)
       47    0.000    0.000    0.000    0.000 docstring.py:42(update)
        1    0.000    0.000    0.000    0.000 orthogonal.py:79(<module>)
        1    0.000    0.000    0.007    0.007 texmanager.py:76(TexManager)
       33    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:372(Misc)
        1    0.000    0.000    0.000    0.000 linear.py:1(<module>)
        1    0.000    0.000    0.000    0.000 lstm.py:1(<module>)
       10    0.000    0.000    0.000    0.000 getlimits.py:148(<lambda>)
        1    0.000    0.000    0.002    0.002 markers.py:21(MarkerStyle)
        1    0.000    0.000    0.000    0.000 kdtree.py:172(KDTree)
        1    0.000    0.000    0.000    0.000 units.py:44(<module>)
        2    0.000    0.000    0.000    0.000 __init__.py:349(__init__)
       13    0.000    0.000    0.000    0.000 pyparsing_py2.py:854(setParseAction)
       29    0.000    0.000    0.000    0.000 pyparsing_py2.py:1436(__str__)
      234    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 wavfile.py:10(<module>)
       72    0.000    0.000    0.000    0.000 numerictypes.py:128(english_lower)
        1    0.000    0.000    0.000    0.000 mdlstm.py:1(<module>)
       87    0.000    0.000    0.000    0.000 {sys._getframe}
       12    0.000    0.000    0.000    0.000 ctypeslib.py:306(prep_simple)
       74    0.000    0.000    0.000    0.000 docstring.py:93(do_copy)
        4    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
       75    0.000    0.000    0.000    0.000 pyparsing_py2.py:1392(setWhitespaceChars)
        3    0.000    0.000    0.005    0.002 __init__.py:202(_is_writable_dir)
       32    0.000    0.000    0.000    0.000 pyparsing_py2.py:1568(parseImpl)
       57    0.000    0.000    0.000    0.000 inspect.py:837(strseq)
        1    0.000    0.000    0.000    0.000 gaussianlayer.py:1(<module>)
       11    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        9    0.000    0.000    0.000    0.000 pyparsing_py2.py:3268(_escapeRegexRangeChars)
        1    0.000    0.000    0.000    0.000 statedependentlayer.py:1(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:147(_check_size)
       87    0.000    0.000    0.000    0.000 {iter}
        1    0.000    0.000    0.000    0.000 ImageFilter.py:18(<module>)
        1    0.000    0.000    0.001    0.001 numbers.py:6(<module>)
        1    0.000    0.000    0.000    0.000 scale.py:311(SymmetricalLogScale)
      119    0.000    0.000    0.000    0.000 opcode.py:27(def_op)
        1    0.000    0.000    0.000    0.000 table.py:1(<module>)
        1    0.000    0.000    0.000    0.000 token.py:3(<module>)
        1    0.000    0.000    0.000    0.000 coo.py:1(<module>)
        3    0.000    0.000    0.000    0.000 tempfile.py:135(next)
        1    0.000    0.000    0.000    0.000 scimath.py:17(<module>)
        4    0.000    0.000    0.000    0.000 {nt._getfullpathname}
        1    0.000    0.000    0.000    0.000 csc.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decomp.py:15(<module>)
        1    0.000    0.000    0.000    0.000 subsampling.py:1(<module>)
        8    0.000    0.000    0.000    0.000 type_check.py:234(iscomplexobj)
       67    0.000    0.000    0.000    0.000 core.py:5641(isMaskedArray)
        1    0.000    0.000    0.000    0.000 rcsetup.py:276(validate_ps_distiller)
        7    0.000    0.000    0.000    0.000 pyparsing_py2.py:2871(__init__)
       12    0.000    0.000    0.000    0.000 {method 'tell' of 'file' objects}
        1    0.000    0.000    0.000    0.000 rbf.py:44(<module>)
      126    0.000    0.000    0.000    0.000 {_sre.getlower}
        1    0.000    0.000    0.000    0.000 mmio.py:95(MMFile)
        1    0.000    0.000    0.000    0.000 transforms.py:243(BboxBase)
        3    0.000    0.000    0.000    0.000 decimal.py:3782(__init__)
        1    0.000    0.000    0.000    0.000 geo.py:246(AitoffAxes)
       13    0.000    0.000    0.000    0.000 typeconv.py:22(convtypecode)
        6    0.000    0.000    0.000    0.000 core.py:1052(__init__)
     23/4    0.000    0.000    0.000    0.000 pyparsing_py2.py:2704(streamline)
        1    0.000    0.000    0.000    0.000 geo.py:405(MollweideAxes)
        1    0.000    0.000    0.000    0.000 transforms.py:736(Bbox)
        1    0.000    0.000    0.000    0.000 geo.py:19(GeoAxes)
       12    0.000    0.000    0.000    0.000 pyparsing_py2.py:485(copy)
        5    0.000    0.000    0.000    0.000 precision.py:15(_get_precisions)
       18    0.000    0.000    0.000    0.000 random.py:272(choice)
        4    0.000    0.000    0.011    0.003 wavfile.py:39(_read_data_chunk)
      117    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        1    0.000    0.000    0.000    0.000 mstats_extras.py:8(<module>)
        1    0.000    0.000    0.000    0.000 dia.py:1(<module>)
      179    0.000    0.000    0.000    0.000 {method 'end' of '_sre.SRE_Match' objects}
       22    0.000    0.000    0.000    0.000 analyzer.py:76(_trim)
        1    0.000    0.000    0.000    0.000 defchararray.py:1732(chararray)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:3389(<lambda>)
      174    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}
     10/6    0.000    0.000    0.001    0.000 pyparsing_py2.py:2311(leaveWhitespace)
        1    0.000    0.000    0.000    0.000 socket.py:179(_socketobject)
        4    0.000    0.000    0.000    0.000 __init__.py:382(__getitem__)
        3    0.000    0.000    0.007    0.002 __init__.py:508(_get_configdir)
        1    0.000    0.000    0.000    0.000 importance.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:265(_reset_cache)
       23    0.000    0.000    0.002    0.000 core.py:5928(__init__)
       13    0.000    0.000    0.001    0.000 abc.py:105(register)
        1    0.000    0.000    0.000    0.000 _solvers.py:1(<module>)
        6    0.000    0.000    0.002    0.000 pyparsing_py2.py:3064(__init__)
        1    0.000    0.000    0.000    0.000 tanhlayer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 reinforcement.py:1(<module>)
       56    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
       55    0.000    0.000    0.000    0.000 collections.py:349(<genexpr>)
        9    0.000    0.000    0.000    0.000 decorator.py:60(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:910(Arrow)
      108    0.000    0.000    0.000    0.000 rcsetup.py:42(func)
        4    0.000    0.000    0.002    0.000 warnings.py:45(filterwarnings)
        1    0.000    0.000    0.000    0.000 sigmoidlayer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:325(HammerAxes)
        1    0.000    0.000    0.000    0.000 lines.py:73(Line2D)
        1    0.000    0.000    0.000    0.000 relulayer.py:1(<module>)
        1    0.000    0.000    0.000    0.000 linearlayer.py:1(<module>)
        1    0.000    0.000    0.052    0.052 font_manager.py:933(pickle_load)
       19    0.000    0.000    0.001    0.000 pyparsing_py2.py:3044(__init__)
        1    0.000    0.000    0.000    0.000 identity.py:1(<module>)
        8    0.000    0.000    0.000    0.000 ntpath.py:275(expanduser)
       55    0.000    0.000    0.000    0.000 collections.py:347(<genexpr>)
        3    0.000    0.000    0.004    0.001 tempfile.py:430(NamedTemporaryFile)
       43    0.000    0.000    0.000    0.000 _inspect.py:161(<lambda>)
        1    0.000    0.000    0.000    0.000 new.py:5(<module>)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:7(<module>)
        1    0.000    0.000    0.000    0.000 geo.py:497(LambertAxes)
        1    0.000    0.000    0.000    0.000 {_winreg.ConnectRegistry}
       12    0.000    0.000    0.000    0.000 pyparsing_py2.py:3383(<lambda>)
       35    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        6    0.000    0.000    0.003    0.001 {method 'encode' of 'str' objects}
       13    0.000    0.000    0.000    0.000 functions.py:60(zeros)
       40    0.000    0.000    0.000    0.000 _inspect.py:13(ismethod)
      106    0.000    0.000    0.000    0.000 sre_parse.py:211(isident)
       30    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
        1    0.000    0.000    0.000    0.000 pprint.py:35(<module>)
        1    0.000    0.000    0.000    0.000 modulemesh.py:1(<module>)
       42    0.000    0.000    0.000    0.000 copy_reg.py:92(__newobj__)
        1    0.000    0.000    0.000    0.000 {_winreg.OpenKey}
       23    0.000    0.000    0.000    0.000 precision.py:31(_lookup)
        1    0.000    0.000    0.000    0.000 image.py:32(_AxesImageBase)
        1    0.000    0.000    0.000    0.000 numerictypes.py:384(_set_up_aliases)
        1    0.000    0.000    0.000    0.000 path.py:19(Path)
        1    0.000    0.000    0.000    0.000 os.py:35(_get_exports_list)
        9    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        1    0.000    0.000    0.003    0.003 __init__.py:616(matplotlib_fname)
        1    0.000    0.000    0.000    0.000 scale.py:496(get_scale_docs)
        1    0.000    0.000    0.000    0.000 axes.py:9070(subplot_class_factory)
        4    0.000    0.000    0.000    0.000 analyzer.py:141(<dictcomp>)
        4    0.000    0.000    0.000    0.000 wavfile.py:77(_read_riff_chunk)
        1    0.000    0.000    0.000    0.000 unsupervised.py:3(<module>)
     12/6    0.000    0.000    0.002    0.000 pyparsing_py2.py:2685(leaveWhitespace)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:2787(__init__)
        6    0.000    0.000    0.000    0.000 decimal.py:515(__new__)
       21    0.000    0.000    0.000    0.000 __init__.py:270(report)
       74    0.000    0.000    0.000    0.000 pyparsing_py2.py:1442(streamline)
        1    0.000    0.000    0.000    0.000 windowing.py:8(<module>)
       12    0.000    0.000    0.000    0.000 pyparsing_py2.py:1513(setName)
        8    0.000    0.000    0.000    0.000 core.py:7137(getdoc)
       34    0.000    0.000    0.000    0.000 six.py:93(__init__)
       40    0.000    0.000    0.000    0.000 numerictypes.py:155(english_upper)
        1    0.000    0.000    0.000    0.000 ufuncs.py:1(<module>)
        1    0.000    0.000    0.000    0.000 tricontour.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2384(And)
        2    0.000    0.000    0.001    0.000 random.py:100(seed)
       17    0.000    0.000    0.000    0.000 pyparsing_py2.py:714(setName)
        1    0.000    0.000    0.000    0.000 lgmres.py:4(<module>)
        1    0.000    0.000    0.000    0.000 dual.py:12(<module>)
       17    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
       18    0.000    0.000    0.000    0.000 doccer.py:129(unindent_string)
        1    0.000    0.000    0.002    0.002 _plotutils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:1651(Affine2D)
        2    0.000    0.000    0.003    0.002 mio5_params.py:166(_convert_codecs)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        1    0.000    0.000    0.000    0.000 construct.py:2(<module>)
      368    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        1    0.000    0.000    0.000    0.000 triplot.py:1(<module>)
        2    0.000    0.000    0.000    0.000 {function seed at 0x028616F0}
        1    0.000    0.000    0.000    0.000 hb.py:362(HBMatrixType)
        1    0.000    0.000    0.000    0.000 twodim_base.py:169(eye)
        1    0.000    0.000    0.000    0.000 _methods.py:4(<module>)
        8    0.000    0.000    0.001    0.000 __init__.py:467(_get_home)
        1    0.000    0.000    0.000    0.000 figure.py:233(Figure)
        5    0.000    0.000    0.000    0.000 re.py:204(escape)
        1    0.000    0.000    0.029    0.029 bsr.py:9(<module>)
        1    0.000    0.000    0.000    0.000 matfuncs.py:3(<module>)
       40    0.000    0.000    0.000    0.000 _inspect.py:24(isfunction)
        1    0.000    0.000    0.000    0.000 interface.py:1(<module>)
      167    0.000    0.000    0.000    0.000 {method 'start' of '_sre.SRE_Match' objects}
        7    0.000    0.000    0.000    0.000 pyparsing_py2.py:2520(__init__)
        9    0.000    0.000    0.000    0.000 extras.py:243(getdoc)
        1    0.000    0.000    0.000    0.000 collections.py:27(Collection)
        1    0.000    0.000    0.000    0.000 _support.py:1(<module>)
        6    0.000    0.000    0.011    0.002 string.py:148(substitute)
        1    0.000    0.000    0.000    0.000 parser.py:702(_result)
        1    0.000    0.000    0.000    0.000 minres.py:1(<module>)
        1    0.000    0.000    0.000    0.000 morphology.py:31(<module>)
        1    0.000    0.000    0.000    0.000 pickle.py:171(Pickler)
        2    0.000    0.000    0.004    0.002 pyparsing_py2.py:2826(parseImpl)
        1    0.000    0.000    0.000    0.000 lobpcg.py:11(<module>)
       21    0.000    0.000    0.000    0.000 __init__.py:302(ge)
       50    0.000    0.000    0.000    0.000 docstring.py:77(__init__)
        6    0.000    0.000    0.000    0.000 hashlib.py:94(__get_openssl_constructor)
       12    0.000    0.000    0.000    0.000 pyparsing_py2.py:460(_asStringList)
        4    0.000    0.000    0.000    0.000 weakref.py:47(__init__)
       73    0.000    0.000    0.000    0.000 docstring.py:110(copy_dedent)
        1    0.000    0.000    0.000    0.000 decomp_svd.py:1(<module>)
       13    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.000    0.000 dual.py:50(register_func)
        1    0.000    0.000    0.000    0.000 calendar.py:47(_localized_month)
        2    0.000    0.000    0.000    0.000 doccer.py:121(unindent_dict)
        1    0.000    0.000    0.000    0.000 axis.py:598(Axis)
        1    0.000    0.000    0.017    0.017 dia.py:9(<module>)
       13    0.000    0.000    0.000    0.000 _methods.py:28(_all)
        4    0.000    0.000    0.000    0.000 polynomial.py:1031(__init__)
        3    0.000    0.000    0.000    0.000 numerictypes.py:608(obj2sctype)
        1    0.000    0.000    0.000    0.000 lsqr.py:50(<module>)
        7    0.000    0.000    0.000    0.000 pyparsing_py2.py:1306(__or__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2864(Text)
      158    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        9    0.000    0.000    0.000    0.000 core.py:2436(getdoc)
        1    0.000    0.000    0.000    0.000 _components.py:1(<module>)
        1    0.000    0.000    0.000    0.000 common.py:4(<module>)
        4    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.067    0.017 fromnumeric.py:2491(std)
       79    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       74    0.000    0.000    0.000    0.000 docstring.py:91(copy)
        1    0.000    0.000    0.017    0.017 dia.py:11(swig_import_helper)
      105    0.000    0.000    0.000    0.000 {unichr}
        2    0.000    0.000    0.000    0.000 warnings.py:74(simplefilter)
        1    0.000    0.000    0.000    0.000 tripcolor.py:1(<module>)
        3    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.046    0.046 __init__.py:14(pylab_setup)
        6    0.000    0.000    0.000    0.000 tempfile.py:382(__getattr__)
        3    0.000    0.000    0.000    0.000 {method 'write' of 'file' objects}
        1    0.000    0.000    0.000    0.000 parser.py:700(_tzparser)
        4    0.000    0.000    0.000    0.000 __init__.py:705(__setitem__)
        4    0.000    0.000    0.000    0.000 function_base.py:1206(trim_zeros)
        1    0.000    0.000    0.000    0.000 backend_agg.py:56(RendererAgg)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
        1    0.000    0.000    0.000    0.000 StringIO.py:30(<module>)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:2118(__init__)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:151(FigureCanvasTkAgg)
       21    0.000    0.000    0.000    0.000 _weakrefset.py:68(__contains__)
        1    0.000    0.000    0.000    0.000 lsmr.py:17(<module>)
        8    0.000    0.000    0.000    0.000 core.py:7132(__init__)
        1    0.000    0.000    0.029    0.029 bsr.py:11(swig_import_helper)
        1    0.000    0.000    0.000    0.000 patches.py:46(Patch)
       17    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        2    0.000    0.000    0.000    0.000 threading.py:259(__init__)
        1    0.000    0.000    0.000    0.000 <string>:7(HermiteE)
       12    0.000    0.000    0.000    0.000 {_struct.unpack}
        1    0.000    0.000    0.000    0.000 defmatrix.py:195(matrix)
        1    0.000    0.000    0.000    0.000 decomp_lu.py:1(<module>)
       17    0.000    0.000    0.000    0.000 data.py:82(_create_method)
       14    0.000    0.000    0.000    0.000 os.py:442(__contains__)
        1    0.000    0.000    0.000    0.000 transforms.py:1843(IdentityTransform)
       14    0.000    0.000    0.000    0.000 numerictypes.py:182(english_capitalize)
        1    0.000    0.000    0.000    0.000 _ni_support.py:31(<module>)
        1    0.000    0.000    0.000    0.000 rcsetup.py:135(validate_nseq_float)
       30    0.000    0.000    0.000    0.000 pyparsing_py2.py:368(__bool__)
        1    0.000    0.000    0.000    0.000 contingency.py:2(<module>)
       31    0.000    0.000    0.000    0.000 _inspect.py:37(iscode)
        3    0.000    0.000    0.000    0.000 threading.py:131(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2164(Canvas)
        1    0.000    0.000    0.000    0.000 _binned_statistic.py:1(<module>)
       22    0.000    0.000    0.000    0.000 pyparsing_py2.py:320(__getitem__)
        3    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
        4    0.000    0.000    0.000    0.000 _methods.py:16(_sum)
        2    0.000    0.000    0.005    0.003 pyparsing_py2.py:3391(srange)
        1    0.000    0.000    0.000    0.000 _decomp_qz.py:1(<module>)
        1    0.000    0.000    0.000    0.000 decomp_qr.py:1(<module>)
      205    0.000    0.000    0.000    0.000 {globals}
        4    0.000    0.000    0.019    0.005 function_base.py:781(copy)
        3    0.000    0.000    0.000    0.000 tempfile.py:124(rng)
        9    0.000    0.000    0.000    0.000 core.py:2430(__init__)
        1    0.000    0.000    0.000    0.000 interpolation.py:31(<module>)
        2    0.000    0.000    0.076    0.038 machar.py:95(__init__)
       72    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 sputils.py:2(<module>)
        4    0.000    0.000    0.000    0.000 shape_base.py:6(atleast_1d)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1519(Wm)
        1    0.000    0.000    0.000    0.000 text.py:139(Text)
        2    0.000    0.000    0.000    0.000 version.py:268(parse)
       12    0.000    0.000    0.000    0.000 getlimits.py:147(<lambda>)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:2876(parseImpl)
        1    0.000    0.000    0.000    0.000 array_printer.py:2(<module>)
        4    0.000    0.000    0.000    0.000 pyparsing_py2.py:329(__setitem__)
        1    0.000    0.000    0.000    0.000 mathtext.py:664(BakomaFonts)
        4    0.000    0.000    0.000    0.000 __init__.py:49(normalize_encoding)
        1    0.000    0.000    0.000    0.000 tight_bbox.py:3(<module>)
        1    0.000    0.000    0.021    0.021 coo.py:9(<module>)
        1    0.000    0.000    0.000    0.000 transforms.py:2089(CompositeGenericTransform)
        1    0.000    0.000    0.000    0.000 rv.py:1(<module>)
       24    0.000    0.000    0.000    0.000 getlimits.py:11(_frz)
        5    0.000    0.000    0.000    0.000 cbook.py:1056(__init__)
        1    0.000    0.000    0.000    0.000 linalg_version.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1435(FigureCanvasBase)
       37    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 <string>:1(Mismatch)
       23    0.000    0.000    0.000    0.000 sre_compile.py:52(fixup)
        2    0.000    0.000    0.000    0.000 getlimits.py:242(__init__)
        4    0.000    0.000    0.000    0.000 codecs.py:77(__new__)
        1    0.000    0.000    0.000    0.000 numbers.py:295(Integral)
       45    0.000    0.000    0.000    0.000 decorator.py:66(__iter__)
        1    0.000    0.000    0.000    0.000 decimal.py:3763(Context)
        1    0.000    0.000    0.016    0.016 csgraph.py:9(<module>)
        4    0.000    0.000    0.000    0.000 __init__.py:375(__getattr__)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        1    0.000    0.000    0.021    0.021 coo.py:11(swig_import_helper)
        1    0.000    0.000    0.024    0.024 csc.py:11(swig_import_helper)
        1    0.000    0.000    0.000    0.000 <string>:7(Legendre)
        1    0.000    0.000    0.000    0.000 decomp_cholesky.py:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:7(Hermite)
        1    0.000    0.000    0.000    0.000 __init__.py:1489(basicConfig)
        1    0.000    0.000    0.000    0.000 <string>:7(Laguerre)
        1    0.000    0.000    0.000    0.000 base.py:47(spmatrix)
        1    0.000    0.000    0.000    0.000 keyword.py:11(<module>)
        2    0.000    0.000    0.000    0.000 __config__.py:3(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:456(StringConverter)
        1    0.000    0.000    0.000    0.000 <string>:7(Chebyshev)
        1    0.000    0.000    0.016    0.016 csgraph.py:11(swig_import_helper)
        1    0.000    0.000    0.000    0.000 fourier.py:31(<module>)
        1    0.000    0.000    0.000    0.000 {built-in method now}
       36    0.000    0.000    0.000    0.000 analyzer.py:64(__init__)
        4    0.000    0.000    0.000    0.000 numeric.py:120(ones)
        4    0.000    0.000    0.000    0.000 _util.py:22(__init__)
        1    0.000    0.000    0.000    0.000 numeric.py:1884(identity)
        2    0.000    0.000    0.000    0.000 {nt.getcwd}
       27    0.000    0.000    0.000    0.000 decimal.py:3809(<genexpr>)
        1    0.000    0.000    0.000    0.000 <string>:1(Match)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:670(ParserElement)
        9    0.000    0.000    0.000    0.000 six.py:108(__init__)
       55    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        1    0.000    0.000    0.000    0.000 financial.py:8(<module>)
        1    0.000    0.000    0.000    0.000 {_ctypes.LoadLibrary}
        1    0.000    0.000    0.000    0.000 gzip.py:36(GzipFile)
        1    0.000    0.000    0.000    0.000 distributions.py:782(rv_continuous)
        1    0.000    0.000    0.000    0.000 twodim_base.py:3(<module>)
       13    0.000    0.000    0.000    0.000 pyparsing_py2.py:1790(charsAsStr)
       33    0.000    0.000    0.000    0.000 cm.py:24(_reverser)
        4    0.000    0.000    0.000    0.000 ntpath.py:466(abspath)
        1    0.000    0.000    0.000    0.000 threading.py:638(Thread)
        1    0.000    0.000    0.000    0.000 atexit.py:6(<module>)
        1    0.000    0.000    0.000    0.000 mio5.py:499(VarWriter5)
        3    0.000    0.000    0.000    0.000 threading.py:146(acquire)
        1    0.000    0.000    0.000    0.000 transforms.py:1889(BlendedGenericTransform)
        1    0.000    0.000    0.000    0.000 result.py:26(TestResult)
        5    0.000    0.000    0.000    0.000 os.py:444(get)
        5    0.000    0.000    0.000    0.000 iterative.py:70(combine)
        1    0.000    0.000    0.000    0.000 parser.py:200(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:271(ParseResults)
        1    0.000    0.000    0.000    0.000 colorbar.py:207(ColorbarBase)
        1    0.000    0.000    0.000    0.000 Tkconstants.py:4(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:34(Complex)
        2    0.000    0.000    0.000    0.000 genericpath.py:26(isfile)
        1    0.000    0.000    0.000    0.000 ticker.py:341(ScalarFormatter)
        1    0.000    0.000    0.000    0.000 patches.py:532(Rectangle)
        1    0.000    0.000    0.000    0.000 spines.py:17(Spine)
       18    0.000    0.000    0.000    0.000 {_struct.calcsize}
       22    0.000    0.000    0.000    0.000 decorator.py:189(<genexpr>)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2633(Menu)
        2    0.000    0.000    0.000    0.000 getlimits.py:267(max)
        1    0.000    0.000    0.000    0.000 _laplacian.py:3(<module>)
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.001    0.001 glob.py:1(<module>)
        9    0.000    0.000    0.000    0.000 extras.py:239(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:1405(TransformWrapper)
        3    0.000    0.000    0.000    0.000 {filter}
        1    0.000    0.000    0.000    0.000 axis.py:23(Tick)
       43    0.000    0.000    0.000    0.000 six.py:80(__init__)
        8    0.000    0.000    0.000    0.000 utils.py:108(__init__)
        4    0.000    0.000    0.000    0.000 core.py:90(doc_note)
        2    0.000    0.000    0.000    0.000 mlab.py:2392(__init__)
       19    0.000    0.000    0.000    0.000 tokenize.py:44(group)
        1    0.000    0.000    0.000    0.000 sysconfig.py:50(_python_build)
       35    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _internal.py:219(_ctypes)
        1    0.000    0.000    0.000    0.000 spfun_stats.py:34(<module>)
        4    0.000    0.000    1.692    0.423 analyzer.py:39(push_samples)
        1    0.000    0.000    0.000    0.000 byteordercodes.py:7(<module>)
        1    0.000    0.000    0.000    0.000 collections.py:26(OrderedDict)
       17    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 tzwin.py:16(_settzkeyname)
        2    0.000    0.000    0.005    0.003 pyparsing_py2.py:1058(parseString)
        3    0.000    0.000    0.000    0.000 result.py:14(failfast)
        3    0.000    0.000    0.000    0.000 threading.py:113(RLock)
        1    0.000    0.000    0.001    0.001 {method 'decode' of 'str' objects}
        4    0.000    0.000    0.000    0.000 os.py:419(__setitem__)
        1    0.000    0.000    0.000    0.000 font_manager.py:590(FontProperties)
       27    0.000    0.000    0.000    0.000 decimal.py:3816(<genexpr>)
        1    0.000    0.000    0.000    0.000 transforms.py:1046(Transform)
        1    0.000    0.000    0.000    0.000 threading.py:654(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:544(_get_data_path)
       44    0.000    0.000    0.000    0.000 {method 'iterkeys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:218(Verbose)
        1    0.000    0.000    0.000    0.000 <string>:1(DecimalTuple)
        1    0.000    0.000    0.000    0.000 <string>:1(ModuleInfo)
        4    0.000    0.000    0.000    0.000 wavfile.py:24(_read_fmt_chunk)
        4    0.000    0.000    0.000    0.000 analyzer.py:113(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2539(Listbox)
        1    0.000    0.000    0.000    0.000 transforms.py:1503(AffineBase)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:1472(getException)
       17    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 <string>:1(SplitResult)
        1    0.000    0.000    0.000    0.000 analyzer.py:126(FeatureVectorExtractor)
        1    0.000    0.000    0.000    0.000 transforms.py:1562(Affine2DBase)
        2    0.000    0.000    0.000    0.000 {_csv.register_dialect}
       11    0.000    0.000    0.000    0.000 opcode.py:31(name_op)
        1    0.000    0.000    0.000    0.000 <string>:1(ParseResult)
        1    0.000    0.000    0.002    0.002 artist.py:793(ArtistInspector)
        9    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 netcdf.py:81(netcdf_file)
        1    0.000    0.000    0.000    0.000 quiver.py:367(Quiver)
        1    0.000    0.000    0.000    0.000 dataset.py:19(DataSet)
        7    0.000    0.000    0.000    0.000 legend_handler.py:120(__init__)
       11    0.000    0.000    0.000    0.000 {vars}
        1    0.000    0.000    0.000    0.000 <string>:1(Attribute)
        1    0.000    0.000    0.000    0.000 backend_bases.py:661(GraphicsContextBase)
       10    0.000    0.000    0.000    0.000 legend_handler.py:54(__init__)
        4    0.000    0.000    0.000    0.000 ntpath.py:42(normcase)
        1    0.000    0.000    0.000    0.000 tz.py:83(tzlocal)
        7    0.000    0.000    0.000    0.000 {method 'acquire' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 arraypad.py:4(<module>)
       70    0.000    0.000    0.000    0.000 pyparsing_py2.py:922(postParse)
        1    0.000    0.000    0.000    0.000 pyplot.py:59(_backend_selection)
        3    0.000    0.000    0.000    0.000 tempfile.py:216(_get_candidate_names)
        1    0.000    0.000    0.000    0.000 io.py:1(<module>)
        1    0.000    0.000    0.000    0.000 compressed.py:19(_cs_matrix)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2149(__init__)
        1    0.000    0.000    0.000    0.000 _iotools.py:236(NameValidator)
        1    0.000    0.000    0.006    0.006 __init__.py:746(rc_params)
        1    0.000    0.000    0.000    0.000 <string>:1(Traceback)
       46    0.000    0.000    0.000    0.000 {_ctypes.sizeof}
        1    0.000    0.000    0.000    0.000 Image.py:444(Image)
        1    0.000    0.000    0.000    0.000 transforms.py:53(TransformNode)
        1    0.000    0.000    0.000    0.000 lambertw.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:15(Gcf)
        1    0.000    0.000    0.000    0.000 mathtext.py:893(StixFonts)
        1    0.000    0.000    0.000    0.000 extract.py:2(<module>)
        1    0.000    0.000    0.000    0.000 quiver.py:220(QuiverKey)
        3    0.000    0.000    0.000    0.000 __init__.py:210(_acquireLock)
        6    0.000    0.000    0.001    0.000 pyparsing_py2.py:722(setResultsName)
        1    0.000    0.000    0.000    0.000 bsr.py:21(bsr_matrix)
        1    0.000    0.000    0.000    0.000 backend_bases.py:116(RendererBase)
        4    0.000    0.000    0.000    0.000 legend_handler.py:150(__init__)
        1    0.000    0.000    0.000    0.000 network.py:22(Network)
        1    0.000    0.000    0.000    0.000 <string>:1(ArgInfo)
        1    0.000    0.000    0.000    0.000 getlimits.py:192(iinfo)
        1    0.000    0.000    0.000    0.000 doccer.py:2(<module>)
       55    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 precision.py:21(_fill_table)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:38(IntFormat)
        1    0.000    0.000    0.000    0.000 fnmatch.py:11(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(ArgSpec)
        1    0.000    0.000    0.000    0.000 polynomial.py:928(poly1d)
        1    0.000    0.000    0.000    0.000 netcdf.py:686(netcdf_variable)
        2    0.000    0.000    0.000    0.000 six.py:83(__get__)
        1    0.000    0.000    0.000    0.000 loader.py:38(TestLoader)
        1    0.000    0.000    0.000    0.000 <string>:1(Arguments)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3183(delimitedList)
        1    0.000    0.000    0.000    0.000 __init__.py:1605(info)
        1    0.000    0.000    0.000    0.000 text.py:1679(Annotation)
        1    0.000    0.000    0.000    0.000 table.py:34(Cell)
        1    0.000    0.000    0.000    0.000 ufunclike.py:4(<module>)
        1    0.000    0.000    0.000    0.000 lil.py:22(lil_matrix)
       10    0.000    0.000    0.000    0.000 pyparsing_py2.py:3294(<lambda>)
        1    0.000    0.000    0.000    0.000 hb.py:423(HBFile)
        1    0.000    0.000    0.000    0.000 arrayterator.py:21(Arrayterator)
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        8    0.000    0.000    0.000    0.000 utils.py:93(_set_function_name)
        1    0.000    0.000    0.000    0.000 table.py:144(Table)
        1    0.000    0.000    0.000    0.000 {time.localtime}
        7    0.000    0.000    0.000    0.000 threading.py:58(__init__)
        1    0.000    0.000    0.000    0.000 copy.py:113(_copy_with_constructor)
        2    0.000    0.000    0.000    0.000 version.py:3(<module>)
        4    0.000    0.000    0.000    0.000 UserDict.py:4(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2434(Entry)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:2174(__init__)
        1    0.000    0.000    0.000    0.000 tempfile.py:497(SpooledTemporaryFile)
        5    0.000    0.000    0.000    0.000 scale.py:463(get_scale_names)
        1    0.000    0.000    0.000    0.000 dok.py:26(dok_matrix)
        1    0.000    0.000    0.000    0.000 collections.py:381(Counter)
        1    0.000    0.000    0.000    0.000 patches.py:2163(FancyBboxPatch)
        1    0.000    0.000    0.000    0.000 numbers.py:169(Real)
        1    0.000    0.000    0.000    0.000 numerictypes.py:864(<lambda>)
        1    0.000    0.000    0.000    0.000 stackplot.py:8(<module>)
        1    0.000    0.000    0.000    0.000 triangulation.py:6(Triangulation)
        1    0.000    0.000    0.000    0.000 ticker.py:1206(MaxNLocator)
        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
        1    0.000    0.000    0.000    0.000 image.py:790(PcolorImage)
        1    0.000    0.000    0.000    0.000 ImageMode.py:17(<module>)
        1    0.000    0.000    0.000    0.000 calendar.py:66(_localized_day)
        1    0.000    0.000    0.000    0.000 parametercontainer.py:9(ParameterContainer)
        1    0.000    0.000    0.000    0.000 cm.py:157(ScalarMappable)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2496(NavigationToolbar2)
        3    0.000    0.000    0.000    0.000 index_tricks.py:228(__init__)
        1    0.000    0.000    0.000    0.000 rrule.py:893(_rrulestr)
        1    0.000    0.000    0.000    0.000 text.py:1018(TextWithDash)
        1    0.000    0.000    0.002    0.002 textwrap.py:115(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:1088(__init__)
        1    0.000    0.000    0.000    0.000 urllib.py:116(URLopener)
        1    0.000    0.000    0.000    0.000 contour.py:51(ContourLabeler)
        3    0.000    0.000    0.000    0.000 tempfile.py:376(__init__)
        1    0.000    0.000    0.000    0.000 textpath.py:27(__init__)
        1    0.000    0.000    0.000    0.000 axis.py:1540(XAxis)
       17    0.000    0.000    0.000    0.000 pyparsing_py2.py:1384(leaveWhitespace)
        1    0.000    0.000    0.000    0.000 compat.py:106(Unpickler)
        3    0.000    0.000    0.000    0.000 __init__.py:281(wrap)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:174(__init__)
        1    0.000    0.000    0.000    0.000 utilities.py:146(Serializable)
        1    0.000    0.000    0.000    0.000 __init__.py:1109(__init__)
        2    0.000    0.000    0.000    0.000 {method 'Close' of 'PyHKEY' objects}
        1    0.000    0.000    0.000    0.000 kde.py:42(gaussian_kde)
        1    0.000    0.000    0.000    0.000 __init__.py:655(__init__)
        1    0.000    0.000    0.000    0.000 fontconfig_pattern.py:39(FontconfigPatternParser)
       42    0.000    0.000    0.000    0.000 decorator.py:99(<lambda>)
        1    0.000    0.000    0.000    0.000 _ode.py:103(ode)
        1    0.000    0.000    0.000    0.000 patches.py:3693(FancyArrowPatch)
        1    0.000    0.000    0.000    0.000 geo.py:249(AitoffTransform)
        1    0.000    0.000    0.000    0.000 dia.py:16(dia_matrix)
        9    0.000    0.000    0.000    0.000 string.py:308(join)
        2    0.000    0.000    0.000    0.000 getlimits.py:146(<lambda>)
        3    0.000    0.000    0.000    0.000 threading.py:186(release)
       18    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 _iotools.py:145(LineSplitter)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.set_string_function}
        1    0.000    0.000    0.000    0.000 utf_32.py:141(getregentry)
        1    0.000    0.000    0.000    0.000 mathtext.py:1016(StandardPsFonts)
        1    0.000    0.000    0.000    0.000 core.py:5697(MaskedConstant)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1941(Grid)
        3    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1037(enablePackrat)
        3    0.000    0.000    0.000    0.000 pyparsing_py2.py:3093(__init__)
        1    0.000    0.000    0.000    0.000 utf_8.py:33(getregentry)
        1    0.000    0.000    0.000    0.000 difflib.py:1672(HtmlDiff)
        1    0.000    0.000    0.000    0.000 collections.py:800(RegularPolyCollection)
        1    0.000    0.000    0.000    0.000 patches.py:787(Polygon)
        1    0.000    0.000    0.000    0.000 runner.py:28(TextTestResult)
        1    0.000    0.000    0.000    0.000 mbcs.py:38(getregentry)
        1    0.000    0.000    0.000    0.000 backend_bases.py:977(TimerBase)
        1    0.000    0.000    0.000    0.000 cbook.py:1070(Stack)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:98(ExpFormat)
        8    0.000    0.000    0.000    0.000 mathtext.py:1710(__init__)
        1    0.000    0.000    0.000    0.000 {_codecs.mbcs_decode}
        1    0.000    0.000    0.000    0.000 utilities.py:200(Named)
       12    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
       42    0.000    0.000    0.000    0.000 {id}
        1    0.000    0.000    0.000    0.000 __init__.py:646(Handler)
        1    0.000    0.000    0.000    0.000 data.py:21(_data_matrix)
        6    0.000    0.000    0.000    0.000 opcode.py:35(jrel_op)
        5    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 patches.py:851(Wedge)
        1    0.000    0.000    0.000    0.000 {math.exp}
        1    0.000    0.000    0.000    0.000 transforms.py:2215(CompositeAffine2D)
        1    0.000    0.000    0.000    0.000 ssl.py:100(SSLSocket)
        2    0.000    0.000    0.001    0.000 random.py:91(__init__)
        1    0.000    0.000    0.000    0.000 calendar.py:126(Calendar)
        1    0.000    0.000    0.000    0.000 _ode.py:567(vode)
        1    0.000    0.000    0.000    0.000 afm.py:336(AFM)
        1    0.000    0.000    0.000    0.000 analyzer.py:63(DataBuffer)
        1    0.000    0.000    0.000    0.000 socket.py:235(_fileobject)
        1    0.000    0.000    0.000    0.000 textpath.py:19(TextToPath)
        8    0.000    0.000    0.000    0.000 os.py:422(__getitem__)
        1    0.000    0.000    0.000    0.000 _cm.py:45(cubehelix)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1212(AnnotationBbox)
        2    0.000    0.000    0.000    0.000 threading.py:241(Condition)
        2    0.000    0.000    0.000    0.000 {binascii.hexlify}
        1    0.000    0.000    0.000    0.000 bezier.py:149(BezierSegment)
        4    0.000    0.000    0.000    0.000 getlimits.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 pprint.py:84(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 mdrnnlayer.py:23(MdrnnLayer)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1522(__init__)
        1    0.000    0.000    0.000    0.000 mio4.py:298(MatFile4Reader)
        1    0.000    0.000    0.000    0.000 parser.py:165(parserinfo)
       16    0.000    0.000    0.000    0.000 pyparsing_py2.py:264(__getitem__)
        1    0.000    0.000    0.000    0.000 numbers.py:270(Rational)
        1    0.000    0.000    0.000    0.000 tempfile.py:108(_RandomNameSequence)
        1    0.000    0.000    0.000    0.000 triangulate.py:24(Triangulation)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 csv.py:73(DictReader)
        2    0.000    0.000    0.000    0.000 six.py:126(_resolve)
        1    0.000    0.000    0.000    0.000 transforms.py:2344(BboxTransformTo)
        1    0.000    0.000    0.000    0.000 Tkinter.py:198(Variable)
        6    0.000    0.000    0.004    0.001 <string>:1(non_reentrant)
        1    0.000    0.000    0.000    0.000 numerictypes.py:778(__getitem__)
        1    0.000    0.000    0.000    0.000 threading.py:573(set)
        1    0.000    0.000    0.000    0.000 coo.py:19(coo_matrix)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3371(Spinbox)
        1    0.000    0.000    0.000    0.000 main.py:63(TestProgram)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:2218(__init__)
        1    0.000    0.000    0.000    0.000 fitpack2.py:64(UnivariateSpline)
        2    0.000    0.000    0.000    0.000 __init__.py:583(_get_data_path_cached)
        1    0.000    0.000    0.000    0.000 evolvable.py:8(Evolvable)
        1    0.000    0.000    0.000    0.000 utf_16.py:117(getregentry)
        1    0.000    0.000    0.000    0.000 contour.py:670(ContourSet)
        1    0.000    0.000    0.000    0.000 urlparse.py:73(ResultMixin)
        1    0.000    0.000    0.000    0.000 axis.py:1811(YAxis)
        1    0.000    0.000    0.000    0.000 cbook.py:813(RingBuffer)
       35    0.000    0.000    0.000    0.000 markers.py:691(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:1094(Logger)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3551(PanedWindow)
        1    0.000    0.000    0.001    0.001 version.py:63(StrictVersion)
        1    0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
        1    0.000    0.000    0.001    0.001 dates.py:319(DateFormatter)
        2    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 font_manager.py:942(FontManager)
        1    0.000    0.000    0.001    0.001 version.py:228(LooseVersion)
        1    0.000    0.000    0.000    0.000 copy_reg.py:14(pickle)
        1    0.000    0.000    0.000    0.000 dviread.py:37(Dvi)
        4    0.000    0.000    0.000    0.000 analyzer.py:33(__init__)
        4    0.000    0.000    0.000    0.000 docstring.py:34(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:81(__init__)
        1    0.000    0.000    0.000    0.000 core.py:5703(__new__)
        1    0.000    0.000    0.000    0.000 __init__.py:817(__init__)
        1    0.000    0.000    0.000    0.000 urllib.py:610(FancyURLopener)
        1    0.000    0.000    0.000    0.000 hb.py:49(HBInfo)
        1    0.000    0.000    0.000    0.000 collections.py:1068(EllipseCollection)
        1    0.000    0.000    0.000    0.000 legend_handler.py:477(__init__)
        1    0.000    0.000    0.000    0.000 _import_tools.py:6(PackageLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:432(__getattr__)
        1    0.000    0.000    0.000    0.000 patches.py:466(Shadow)
        1    0.000    0.000    0.000    0.000 dates.py:556(RRuleLocator)
        1    0.000    0.000    0.000    0.000 textpath.py:401(TextPath)
        1    0.000    0.000    0.000    0.000 core.py:2401(_arraymethod)
        2    0.000    0.000    0.000    0.000 numeric.py:1473(set_string_function)
        1    0.000    0.000    0.000    0.000 shared.py:28(SharedConnection)
        1    0.000    0.000    0.000    0.000 collections.py:1213(TriMesh)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:2754(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:1048(YAArrow)
        1    0.000    0.000    0.000    0.000 nosetester.py:85(NoseTester)
        1    0.000    0.000    0.000    0.000 transforms.py:2005(BlendedAffine2D)
        1    0.000    0.000    0.001    0.001 pyparsing_py2.py:1804(Regex)
        1    0.000    0.000    0.000    0.000 mio5.py:780(MatFile5Writer)
        1    0.000    0.000    0.000    0.000 rrule.py:824(rruleset)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:789(NavigationToolbar2TkAgg)
        1    0.000    0.000    0.000    0.000 rcsetup.py:84(validate_int)
        1    0.000    0.000    0.000    0.000 quiver.py:791(Barbs)
        1    0.000    0.000    0.000    0.000 _ode.py:951(lsoda)
        1    0.000    0.000    0.000    0.000 patches.py:1247(Circle)
        1    0.000    0.000    0.000    0.000 nonlin.py:539(InverseJacobian)
        1    0.000    0.000    0.002    0.002 textwrap.py:356(fill)
        1    0.000    0.000    0.000    0.000 text.py:1423(_AnnotationBase)
        1    0.000    0.000    0.000    0.000 mathtext.py:546(TruetypeFonts)
        1    0.000    0.000    0.000    0.000 backprop.py:11(BackpropTrainer)
        1    0.000    0.000    0.000    0.000 rcsetup.py:59(validate_bool)
        1    0.000    0.000    0.000    0.000 __init__.py:636(_addHandlerRef)
        1    0.000    0.000    0.000    0.000 collections.py:1036(CircleCollection)
        1    0.000    0.000    0.000    0.000 mathtext.py:2941(MathTextParser)
       10    0.000    0.000    0.000    0.000 pyparsing_py2.py:3293(<lambda>)
        1    0.000    0.000    0.000    0.000 subprocess.py:649(Popen)
        1    0.000    0.000    0.000    0.000 polar.py:22(PolarTransform)
        3    0.000    0.000    0.000    0.000 legend_handler.py:167(__init__)
        1    0.000    0.000    0.000    0.000 nonlin.py:887(BroydenFirst)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:226(FortranFormatParser)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 random.py:649(WichmannHill)
        2    0.000    0.000    0.000    0.000 doccer.py:96(filldoc)
        1    0.000    0.000    0.000    0.000 patches.py:1180(Ellipse)
        1    0.000    0.000    0.000    0.000 FileDialog.py:21(FileDialog)
        1    0.000    0.000    0.000    0.000 rcsetup.py:107(validate_backend)
        1    0.000    0.000    0.000    0.000 blocking_input.py:31(BlockingInput)
        1    0.000    0.000    0.000    0.000 miobase.py:320(MatFileReader)
        1    0.000    0.000    0.000    0.000 decorator.py:75(FunctionMaker)
        1    0.000    0.000    0.000    0.000 weakref.py:243(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:2962(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:2420(_Base)
        1    0.000    0.000    0.000    0.000 patches.py:759(PathPatch)
        1    0.000    0.000    0.000    0.000 collections.py:662(PathCollection)
        1    0.000    0.000    0.000    0.000 parser.py:39(_timelex)
        1    0.000    0.000    0.000    0.000 case.py:1018(FunctionTestCase)
        1    0.000    0.000    0.000    0.000 numeric.py:2571(_setdef)
        1    0.000    0.000    0.000    0.000 core.py:2471(MaskedIterator)
        1    0.000    0.000    0.000    0.000 transforms.py:1510(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3299(PhotoImage)
        1    0.000    0.000    0.000    0.000 lstm.py:11(LSTMLayer)
        1    0.000    0.000    0.000    0.000 npyio.py:126(NpzFile)
        7    0.000    0.000    0.000    0.000 relativedelta.py:18(__init__)
        1    0.000    0.000    0.000    0.000 gridspec.py:27(GridSpecBase)
        3    0.000    0.000    0.000    0.000 legend_handler.py:268(__init__)
        2    0.000    0.000    0.000    0.000 six.py:72(_import_module)
       18    0.000    0.000    0.000    0.000 version.py:273(<lambda>)
       17    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 pyplot.py:1696(colormaps)
        1    0.000    0.000    0.000    0.000 image.py:916(FigureImage)
        1    0.000    0.000    0.000    0.000 classification.py:7(ClassificationDataSet)
        1    0.000    0.000    0.000    0.000 getlimits.py:22(finfo)
        1    0.000    0.000    0.000    0.000 module.py:8(Module)
        1    0.000    0.000    0.000    0.000 records.py:284(recarray)
        7    0.000    0.000    0.000    0.000 rrule.py:53(__init__)
        1    0.000    0.000    0.000    0.000 connection.py:7(Connection)
        1    0.000    0.000    0.000    0.000 cbook.py:346(Scheduler)
        1    0.000    0.000    0.000    0.000 transforms.py:1002(TransformedBbox)
        1    0.000    0.000    0.000    0.000 image.py:667(NonUniformImage)
        1    0.000    0.000    0.000    0.000 supervised.py:10(SupervisedDataSet)
        1    0.000    0.000    0.001    0.001 cbook.py:764(mkdirs)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2085(Button)
        1    0.000    0.000    0.000    0.000 info.py:83(<module>)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1846(Pack)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2662(ParseElementEnhance)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:372(keys)
        1    0.000    0.000    0.000    0.000 backend_agg.py:411(FigureCanvasAgg)
        1    0.000    0.000    0.000    0.000 collections.py:1282(QuadMesh)
        1    0.000    0.000    0.000    0.000 __init__.py:1057(get_backend)
        1    0.000    0.000    0.000    0.000 docstring.py:6(Substitution)
        1    0.000    0.000    0.000    0.000 axes.py:157(_process_plot_var_args)
        1    0.000    0.000    0.000    0.000 distributions.py:422(rv_frozen)
        1    0.000    0.000    0.000    0.000 _datasource.py:148(DataSource)
        1    0.000    0.000    0.000    0.000 optimize.py:1588(Brent)
        1    0.000    0.000    0.000    0.000 transforms.py:2407(BboxTransformFrom)
        1    0.000    0.000    0.000    0.000 offsetbox.py:504(DrawingArea)
        1    0.000    0.000    0.000    0.000 distributions.py:6633(bernoulli_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:997(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:219(_releaseLock)
        1    0.000    0.000    0.000    0.000 textwrap.py:146(_munge_whitespace)
        1    0.000    0.000    0.000    0.000 csr.py:22(csr_matrix)
        1    0.000    0.000    0.000    0.000 _ode.py:412(complex_ode)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2791(Scale)
        3    0.000    0.000    0.000    0.000 __init__.py:494(CFunctionType)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2288(ParseExpression)
        1    0.000    0.000    0.000    0.000 colors.py:240(ColorConverter)
        5    0.000    0.000    0.000    0.000 iterative.py:69(set_docstring)
        1    0.000    0.000    0.000    0.000 optimize.py:69(Result)
        6    0.000    0.000    0.000    0.000 opcode.py:39(jabs_op)
        1    0.000    0.000    0.000    0.000 relativedelta.py:45(relativedelta)
        1    0.000    0.000    0.000    0.000 rbf.py:58(Rbf)
        1    0.000    0.000    0.000    0.000 umfpack.py:263(UmfpackContext)
        1    0.000    0.000    0.000    0.000 collections.py:697(PolyCollection)
        1    0.000    0.000    0.000    0.000 distributions.py:6673(nbinom_gen)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:1366(__invert__)
        1    0.000    0.000    0.000    0.000 mdlstm.py:12(MDLSTMLayer)
        1    0.000    0.000    0.001    0.001 textwrap.py:316(wrap)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3239(Image)
        1    0.000    0.000    0.000    0.000 patches.py:1293(Arc)
        1    0.000    0.000    0.000    0.000 extras.py:1427(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2559(__str__)
        3    0.000    0.000    0.002    0.001 <string>:1(_held_figure)
        1    0.000    0.000    0.000    0.000 difflib.py:46(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 _ode.py:835(dopri5)
        1    0.000    0.000    0.000    0.000 transforms.py:2301(BboxTransform)
        2    0.000    0.000    0.000    0.000 atexit.py:37(register)
        1    0.000    0.000    0.000    0.000 ticker.py:772(EngFormatter)
        1    0.000    0.000    0.000    0.000 distributions.py:6724(geom_gen)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1418(DraggableBase)
        1    0.000    0.000    0.000    0.000 __init__.py:13(register)
        1    0.000    0.000    0.000    0.000 analyzer.py:112(FeatureVectorBuffer)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2824(Scrollbar)
        1    0.000    0.000    0.000    0.000 records.py:83(format_parser)
        1    0.000    0.000    0.000    0.000 _internal.py:212(_missing_ctypes)
        1    0.000    0.000    0.000    0.000 patches.py:951(FancyArrow)
        1    0.000    0.000    0.000    0.000 mathtext.py:2354(State)
        1    0.000    0.000    0.000    0.000 classification.py:196(SequenceClassificationDataSet)
        1    0.000    0.000    0.000    0.000 streamplot.py:342(TerminateTrajectory)
        1    0.000    0.000    0.000    0.000 widgets.py:1526(Lasso)
        2    0.000    0.000    0.000    0.000 __init__.py:182(_checkLevel)
        1    0.000    0.000    0.000    0.000 ticker.py:1661(AutoMinorLocator)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1721(Tk)
        1    0.000    0.000    0.000    0.000 colors.py:642(LinearSegmentedColormap)
        1    0.000    0.000    0.000    0.000 textwrap.py:163(_split)
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 colors.py:482(Colormap)
        1    0.000    0.000    0.000    0.000 mio4.py:450(VarWriter4)
        1    0.000    0.000    0.000    0.000 distributions.py:2684(expon_gen)
        3    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 calendar.py:376(HTMLCalendar)
        1    0.000    0.000    0.000    0.000 runner.py:119(TextTestRunner)
        1    0.000    0.000    0.000    0.000 modulemesh.py:7(ModuleMesh)
        1    0.000    0.000    0.000    0.000 suite.py:78(TestSuite)
        1    0.000    0.000    0.000    0.000 threading.py:558(__init__)
        1    0.000    0.000    0.000    0.000 distributions.py:6575(binom_gen)
        1    0.000    0.000    0.000    0.000 info.py:147(<module>)
        2    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        1    0.000    0.000    0.000    0.000 geo.py:469(InvertedMollweideTransform)
        1    0.000    0.000    0.000    0.000 dates.py:671(AutoDateLocator)
        1    0.000    0.000    0.000    0.000 sequential.py:13(SequentialDataSet)
        2    0.000    0.000    0.000    0.000 __init__.py:244(set_level)
        1    0.000    0.000    0.000    0.000 transforms.py:2472(TransformedPath)
        1    0.000    0.000    0.000    0.000 distributions.py:2411(cauchy_gen)
        1    0.000    0.000    0.000    0.000 rrule.py:629(_iterinfo)
        1    0.000    0.000    0.000    0.000 figure.py:49(AxesStack)
        3    0.000    0.000    0.000    0.000 core.py:736(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:134(OffsetBox)
        1    0.000    0.000    0.000    0.000 mlab.py:815(PCA)
        1    0.000    0.000    0.000    0.000 cbook.py:1378(Grouper)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1891(Place)
        1    0.000    0.000    0.000    0.000 tzwin.py:28(tzwinbase)
        1    0.000    0.000    0.000    0.000 distributions.py:530(rv_generic)
       17    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 random.py:799(SystemRandom)
        1    0.000    0.000    0.000    0.000 cbook.py:1259(MemoryMonitor)
        1    0.000    0.000    0.000    0.000 distributions.py:6928(poisson_gen)
        1    0.000    0.000    0.000    0.000 core.py:5864(__init__)
        2    0.000    0.000    0.000    0.000 {math.log10}
        1    0.000    0.000    0.000    0.000 blocking_input.py:120(BlockingMouseInput)
        1    0.000    0.000    0.000    0.000 text.py:1383(OffsetFrom)
        1    0.000    0.000    0.000    0.000 cbook.py:158(_BoundMethodProxy)
        1    0.000    0.000    0.000    0.000 nonlin.py:1244(ExcitingMixing)
        1    0.000    0.000    0.000    0.000 distributions.py:2134(arcsine_gen)
        1    0.000    0.000    0.000    0.000 threading.py:372(notify)
        1    0.000    0.000    0.000    0.000 __init__.py:1375(__init__)
        1    0.000    0.000    0.000    0.000 rrule.py:82(rrulebase)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:939(ToolTip)
        1    0.000    0.000    0.000    0.000 cbook.py:388(Idle)
        1    0.000    0.000    0.000    0.000 core.py:2252(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 distributions.py:2028(norm_gen)
       17    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 ctypeslib.py:153(_ndptr)
        1    0.000    0.000    0.000    0.000 cbook.py:736(Null)
        1    0.000    0.000    0.000    0.000 distributions.py:3613(halfnorm_gen)
        1    0.000    0.000    0.000    0.000 neurondecomposable.py:15(NeuronDecomposableNetwork)
        1    0.000    0.000    0.000    0.000 utils.py:1424(__enter__)
        1    0.000    0.000    0.000    0.000 __init__.py:255(set_fileo)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:664(NavigationToolbar)
        1    0.000    0.000    0.000    0.000 mathtext.py:783(UnicodeFonts)
        1    0.000    0.000    0.000    0.000 ticker.py:178(Formatter)
        1    0.000    0.000    0.000    0.000 __init__.py:684(createLock)
        1    0.000    0.000    0.000    0.000 memmap.py:20(memmap)
        1    0.000    0.000    0.000    0.000 utils.py:1416(__init__)
        1    0.000    0.000    0.000    0.000 legend_handler.py:38(HandlerBase)
        1    0.000    0.000    0.000    0.000 offsetbox.py:861(AnchoredOffsetbox)
        1    0.000    0.000    0.000    0.000 units.py:69(ConversionInterface)
        1    0.000    0.000    0.000    0.000 dates.py:515(DateLocator)
        1    0.000    0.000    0.000    0.000 mlab.py:1216(FIFOBuffer)
        1    0.000    0.000    0.000    0.000 distributions.py:2930(foldnorm_gen)
        2    0.000    0.000    0.000    0.000 version.py:263(__init__)
        4    0.000    0.000    0.000    0.000 core.py:2443(__get__)
        1    0.000    0.000    0.000    0.000 transforms.py:2443(ScaledTranslation)
        1    0.000    0.000    0.000    0.000 image.py:1026(BboxImage)
        1    0.000    0.000    0.000    0.000 distributions.py:2642(erlang_gen)
        1    0.000    0.000    0.000    0.000 calendar.py:259(TextCalendar)
        1    0.000    0.000    0.000    0.000 statedependentlayer.py:10(StateDependentLayer)
        1    0.000    0.000    0.000    0.000 scale.py:323(SymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 patches.py:1636(_Style)
        2    0.000    0.000    0.000    0.000 cbook.py:1414(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2858(_NullToken)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:409(__getattr__)
        1    0.000    0.000    0.000    0.000 tz.py:31(tzutc)
        1    0.000    0.000    0.000    0.000 csv.py:26(Dialect)
       16    0.000    0.000    0.000    0.000 pyparsing_py2.py:3136(postParse)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2785(ZeroOrMore)
        1    0.000    0.000    0.000    0.000 widgets.py:1433(LassoSelector)
        1    0.000    0.000    0.000    0.000 distributions.py:7074(randint_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:6883(logser_gen)
        1    0.000    0.000    0.000    0.000 polyint.py:18(_Interpolator1D)
        1    0.000    0.000    0.000    0.000 cbook.py:412(silent_list)
        1    0.000    0.000    0.000    0.000 core.py:5876(__init__)
        1    0.000    0.000    0.000    0.000 collections.py:879(LineCollection)
        1    0.000    0.000    0.000    0.000 streamplot.py:248(Grid)
        1    0.000    0.000    0.000    0.000 cbook.py:242(CallbackRegistry)
        1    0.000    0.000    0.000    0.000 gridspec.py:183(GridSpec)
        4    0.000    0.000    0.000    0.000 six.py:67(_add_doc)
        1    0.000    0.000    0.000    0.000 offsetbox.py:600(TextArea)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1579(Keyword)
        1    0.000    0.000    0.000    0.000 index_tricks.py:431(__init__)
        1    0.000    0.000    0.000    0.000 recurrent.py:14(RecurrentNetworkComponent)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2966(Forward)
        1    0.000    0.000    0.000    0.000 distributions.py:7026(boltzmann_gen)
        1    0.000    0.000    0.000    0.000 container.py:3(Container)
        7    0.000    0.000    0.000    0.000 case.py:609(_deprecate)
        1    0.000    0.000    0.000    0.000 core.py:886(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 patches.py:2901(_Base)
        1    0.000    0.000    0.000    0.000 widgets.py:1157(RectangleSelector)
        1    0.000    0.000    0.000    0.000 ticker.py:600(LogFormatter)
        1    0.000    0.000    0.000    0.000 gaussprocess.py:11(GaussianProcess)
        1    0.000    0.000    0.000    0.000 _ode.py:520(IntegratorBase)
        1    0.000    0.000    0.000    0.000 mathtext.py:103(MathtextBackend)
        1    0.000    0.000    0.000    0.000 __init__.py:992(Manager)
        1    0.000    0.000    0.000    0.000 distributions.py:6973(planck_gen)
        1    0.000    0.000    0.000    0.000 nonlin.py:472(Jacobian)
        1    0.000    0.000    0.000    0.000 __init__.py:346(Formatter)
        1    0.000    0.000    0.000    0.000 dviread.py:640(PsfontsMap)
        7    0.000    0.000    0.000    0.000 rcsetup.py:360(__init__)
        8    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 distributions.py:3348(gengamma_gen)
        1    0.000    0.000    0.000    0.000 widgets.py:961(SpanSelector)
        1    0.000    0.000    0.000    0.000 utf_32.py:13(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 ticker.py:135(_DummyAxis)
        2    0.000    0.000    0.000    0.000 __init__.py:390(__init__)
        1    0.000    0.000    0.000    0.000 units.py:114(__init__)
        1    0.000    0.000    0.000    0.000 parser.py:292(__init__)
        1    0.000    0.000    0.000    0.000 distributions.py:2169(beta_gen)
        3    0.000    0.000    0.000    0.000 _cm.py:84(get_color_function)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2453(Or)
        1    0.000    0.000    0.000    0.000 machar.py:15(MachAr)
        1    0.000    0.000    0.000    0.000 interpolate.py:37(LinearInterpolator)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2200(__init__)
        1    0.000    0.000    0.000    0.000 geo.py:328(HammerTransform)
        1    0.000    0.000    0.000    0.000 distributions.py:6773(hypergeom_gen)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 interpolate.py:267(interp1d)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2574(Each)
        2    0.000    0.000    0.000    0.000 __init__.py:578(__init__)
        1    0.000    0.000    0.000    0.000 urllib.py:851(ftpwrapper)
        1    0.000    0.000    0.000    0.000 function_base.py:1706(vectorize)
        1    0.000    0.000    0.000    0.000 arrayprint.py:712(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1994(BaseWidget)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2405(Checkbutton)
        1    0.000    0.000    0.000    0.000 utils.py:1440(__exit__)
        1    0.000    0.000    0.000    0.000 collections.py:758(BrokenBarHCollection)
        1    0.000    0.000    0.000    0.000 transforms.py:2383(BboxTransformToMaxOnly)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:2890(__str__)
        1    0.000    0.000    0.000    0.000 tempfile.py:368(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 geo.py:500(LambertTransform)
        6    0.000    0.000    0.000    0.000 pyparsing_py2.py:3097(postParse)
        1    0.000    0.000    0.000    0.000 colorbar.py:816(Colorbar)
        1    0.000    0.000    0.000    0.000 _datasource.py:482(Repository)
        1    0.000    0.000    0.000    0.000 colors.py:819(Normalize)
        1    0.000    0.000    0.000    0.000 axis.py:313(XTick)
        1    0.000    0.000    0.000    0.000 axis.py:455(YTick)
        1    0.000    0.000    0.000    0.000 info.py:175(<module>)
        1    0.000    0.000    0.000    0.000 tempfile.py:120(__init__)
        1    0.000    0.000    0.000    0.000 interface.py:9(LinearOperator)
        1    0.000    0.000    0.000    0.000 widgets.py:21(LockDraw)
        7    0.000    0.000    0.000    0.000 threading.py:63(_note)
        1    0.000    0.000    0.000    0.000 utils.py:988(SafeEval)
        1    0.000    0.000    0.000    0.000 legend_handler.py:365(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1108(OffsetImage)
        1    0.000    0.000    0.000    0.000 suite.py:252(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 cbook.py:460(__init__)
        3    0.000    0.000    0.000    0.000 {locals}
        1    0.000    0.000    0.000    0.000 distributions.py:5034(semicircular_gen)
        1    0.000    0.000    0.000    0.000 rcsetup.py:47(__call__)
        1    0.000    0.000    0.000    0.000 __init__.py:1342(isEnabledFor)
        1    0.000    0.000    0.000    0.000 nonlin.py:1024(Anderson)
        1    0.000    0.000    0.000    0.000 distributions.py:5195(tukeylambda_gen)
        1    0.000    0.000    0.000    0.000 nonlin.py:1159(DiagBroyden)
        1    0.000    0.000    0.000    0.000 legend_handler.py:119(HandlerNpoints)
        1    0.000    0.000    0.000    0.000 distributions.py:2728(exponweib_gen)
        1    0.000    0.000    0.000    0.000 borderswiping.py:11(BorderSwipingNetwork)
        1    0.000    0.000    0.000    0.000 distributions.py:4596(lomax_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:3890(laplace_gen)
        1    0.000    0.000    0.000    0.000 kdtree.py:73(Rectangle)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2515(MatchFirst)
        3    0.000    0.000    0.000    0.000 __init__.py:104(CFunctionType)
        1    0.000    0.000    0.000    0.000 swiping.py:10(SwipingNetwork)
        1    0.000    0.000    0.000    0.000 distributions.py:4636(pearson3_gen)
        1    0.000    0.000    0.000    0.000 idl.py:639(AttrDict)
        1    0.000    0.000    0.000    0.000 records.py:214(record)
        1    0.000    0.000    0.000    0.000 Tkinter.py:296(IntVar)
        1    0.000    0.000    0.000    0.000 streamplot.py:188(DomainMap)
        1    0.000    0.000    0.000    0.000 trainer.py:7(Trainer)
        1    0.000    0.000    0.000    0.000 polar.py:115(InvertedPolarTransform)
        1    0.000    0.000    0.000    0.000 offsetbox.py:424(PaddedBox)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2414(FigureManagerBase)
        1    0.000    0.000    0.000    0.000 tz.py:475(tzrange)
        1    0.000    0.000    0.000    0.000 image.py:518(AxesImage)
        1    0.000    0.000    0.000    0.000 contour.py:1265(QuadContourSet)
        1    0.000    0.000    0.000    0.000 _import_tools.py:334(PackageLoaderDebug)
       13    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 distributions.py:4833(powernorm_gen)
        1    0.000    0.000    0.000    0.000 tz.py:54(tzoffset)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3748(Studbutton)
        1    0.000    0.000    0.000    0.000 csc.py:19(csc_matrix)
        1    0.000    0.000    0.000    0.000 ticker.py:1108(Base)
        1    0.000    0.000    0.000    0.000 cbook.py:628(Sorter)
        1    0.000    0.000    0.000    0.000 tz.py:191(tzfile)
        3    0.000    0.000    0.000    0.000 tempfile.py:45(_set_cloexec)
        1    0.000    0.000    0.000    0.000 __init__.py:27(get_projection_names)
        1    0.000    0.000    0.000    0.000 distributions.py:3277(gamma_gen)
        1    0.000    0.000    0.000    0.000 rrule.py:50(weekday)
        1    0.000    0.000    0.000    0.000 utf_16.py:18(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 scale.py:143(InvertedLog10Transform)
        1    0.000    0.000    0.000    0.000 distributions.py:5063(triang_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:2973(frechet_r_gen)
        1    0.000    0.000    0.000    0.000 geo.py:408(MollweideTransform)
        1    0.000    0.000    0.000    0.000 widgets.py:108(Button)
        1    0.000    0.000    0.000    0.000 __init__.py:1280(addHandler)
        1    0.000    0.000    0.000    0.000 _util.py:4(DeprecatedImport)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2490(Cursors)
        1    0.000    0.000    0.000    0.000 index_tricks.py:453(__init__)
        6    0.000    0.000    0.000    0.000 core.py:768(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:254(_Condition)
        1    0.000    0.000    0.000    0.000 distributions.py:2072(alpha_gen)
        1    0.000    0.000    0.000    0.000 info.py:34(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:157(MathtextBackendAgg)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:509(FigureManagerTkAgg)
        1    0.000    0.000    0.000    0.000 polyint.py:894(PchipInterpolator)
        1    0.000    0.000    0.000    0.000 __init__.py:332(CDLL)
        1    0.000    0.000    0.000    0.000 ticker.py:157(TickHelper)
        5    0.000    0.000    0.000    0.000 sre_parse.py:206(tell)
        1    0.000    0.000    0.000    0.000 ticker.py:859(Locator)
        1    0.000    0.000    0.000    0.000 arrayprint.py:523(FloatFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:1383(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 polar.py:81(PolarAffine)
        1    0.000    0.000    0.000    0.000 nonlin.py:1302(KrylovJacobian)
        1    0.000    0.000    0.000    0.000 calendar.py:132(__init__)
        1    0.000    0.000    0.001    0.001 textwrap.py:331(fill)
        1    0.000    0.000    0.000    0.000 nturl2path.py:1(<module>)
        1    0.000    0.000    0.000    0.000 mio4.py:80(VarHeader4)
        1    0.000    0.000    0.000    0.000 distributions.py:3649(hypsecant_gen)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:370(__iter__)
        1    0.000    0.000    0.000    0.000 distributions.py:4541(pareto_gen)
        1    0.000    0.000    0.000    0.000 kohonen.py:10(KohonenMap)
        1    0.000    0.000    0.000    0.000 figure.py:149(SubplotParams)
        1    0.000    0.000    0.000    0.000 distributions.py:2286(bradford_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4418(t_gen)
        1    0.000    0.000    0.000    0.000 __init__.py:954(rc_context)
        1    0.000    0.000    0.000    0.000 patches.py:1152(CirclePolygon)
        1    0.000    0.000    0.000    0.000 distributions.py:4289(nakagami_gen)
        1    0.000    0.000    0.000    0.000 _ode.py:904(dop853)
        2    0.000    0.000    0.000    0.000 legend_handler.py:204(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1885(Ship)
        1    0.000    0.000    0.000    0.000 geo.py:23(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1303(MouseEvent)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:170(ParseBaseException)
        1    0.000    0.000    0.000    0.000 info.py:84(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:1725(OldAutoLocator)
        4    0.000    0.000    0.000    0.000 pyparsing_py2.py:262(__init__)
        1    0.000    0.000    0.000    0.000 analyzer.py:93(NeuralNetworkClassifier)
        1    0.000    0.000    0.000    0.000 distributions.py:5311(wald_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:5279(vonmises_gen)
        1    0.000    0.000    0.000    0.000 index_tricks.py:210(AxisConcatenator)
        1    0.000    0.000    0.000    0.000 geo.py:297(InvertedAitoffTransform)
        1    0.000    0.000    0.000    0.000 interpolate.py:479(ppform)
        1    0.000    0.000    0.000    0.000 distributions.py:2450(chi_gen)
        1    0.000    0.000    0.000    0.000 offsetbox.py:757(AuxTransformBox)
        1    0.000    0.000    0.000    0.000 polyint.py:631(PiecewisePolynomial)
        1    0.000    0.000    0.000    0.000 mathtext.py:390(Fonts)
        1    0.000    0.000    0.000    0.000 cbook.py:83(converter)
        1    0.000    0.000    0.000    0.000 tz.py:639(_tzicalvtz)
        1    0.000    0.000    0.000    0.000 distributions.py:2761(exponpow_gen)
        1    0.000    0.000    0.000    0.000 scale.py:229(InvertedLogTransform)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:1032(resetCache)
        1    0.000    0.000    0.000    0.000 distributions.py:5341(wrapcauchy_gen)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2374(setResultsName)
        1    0.000    0.000    0.000    0.000 __init__.py:240(__init__)
        1    0.000    0.000    0.000    0.000 distributions.py:5147(truncnorm_gen)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:149(AdaptiveStepsize)
        1    0.000    0.000    0.000    0.000 difflib.py:766(Differ)
        1    0.000    0.000    0.000    0.000 distributions.py:2485(chi2_gen)
        1    0.000    0.000    0.000    0.000 analyzer.py:448(__init__)
        1    0.000    0.000    0.000    0.000 distributions.py:2103(anglit_gen)
        1    0.000    0.000    0.000    0.000 scale.py:168(InvertedLog2Transform)
        2    0.000    0.000    0.000    0.000 {delattr}
        1    0.000    0.000    0.000    0.000 extras.py:1497(__init__)
        1    0.000    0.000    0.000    0.000 dates.py:1115(DateConverter)
        1    0.000    0.000    0.000    0.000 _ode.py:721(zvode)
        1    0.000    0.000    0.000    0.000 widgets.py:227(Slider)
        1    0.000    0.000    0.000    0.000 distributions.py:2237(betaprime_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4325(ncx2_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:7131(zipf_gen)
        1    0.000    0.000    0.000    0.000 ticker.py:250(FixedFormatter)
        1    0.000    0.000    0.000    0.000 utils.py:1364(WarningMessage)
        1    0.000    0.000    0.000    0.000 threading.py:124(_RLock)
        1    0.000    0.000    0.000    0.000 colors.py:1005(BoundaryNorm)
        1    0.000    0.000    0.000    0.000 scale.py:118(LogTransformBase)
        1    0.000    0.000    0.000    0.000 relativedelta.py:15(weekday)
        1    0.000    0.000    0.000    0.000 tokenize.py:45(any)
        1    0.000    0.000    0.000    0.000 tz.py:701(tzical)
        1    0.000    0.000    0.000    0.000 scale.py:193(InvertedNaturalLogTransform)
        1    0.000    0.000    0.000    0.000 distributions.py:5101(truncexpon_gen)
        1    0.000    0.000    0.000    0.000 scale.py:206(LogTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:1139(info)
        1    0.000    0.000    0.000    0.000 analyzer.py:32(AudioBuffer)
        1    0.000    0.000    0.000    0.000 distributions.py:7231(skellam_gen)
        1    0.000    0.000    0.000    0.000 arpack.py:969(IterOpInv)
        1    0.000    0.000    0.000    0.000 _datasource.py:47(_FileOpeners)
        1    0.000    0.000    0.000    0.000 gradientdescent.py:9(GradientDescent)
        1    0.000    0.000    0.000    0.000 distributions.py:3578(halflogistic_gen)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:601(AxisMenu)
        1    0.000    0.000    0.000    0.000 bidirectional.py:10(BidirectionalNetwork)
        1    0.000    0.000    0.000    0.000 mathtext.py:1706(GlueSpec)
        1    0.000    0.000    0.000    0.000 geo.py:370(InvertedHammerTransform)
        1    0.000    0.000    0.000    0.000 distributions.py:3957(levy_l_gen)
        1    0.000    0.000    0.000    0.000 _datasource.py:70(__init__)
        1    0.000    0.000    0.000    0.000 widgets.py:67(AxesWidget)
        1    0.000    0.000    0.000    0.000 collections.py:1151(PatchCollection)
        1    0.000    0.000    0.000    0.000 distributions.py:2796(fatiguelife_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4188(gilbrat_gen)
        1    0.000    0.000    0.000    0.000 runner.py:12(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 table.py:7(Table)
        1    0.000    0.000    0.000    0.000 distributions.py:3462(gumbel_r_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:3093(genpareto_gen)
        1    0.000    0.000    0.000    0.000 utf_32.py:48(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1872(QuotedString)
        1    0.000    0.000    0.000    0.000 analyzer.py:82(Classifier)
        6    0.000    0.000    0.000    0.000 {method 'release' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 distributions.py:3503(gumbel_l_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4046(logistic_gen)
        1    0.000    0.000    0.000    0.000 threading.py:422(_Semaphore)
        1    0.000    0.000    0.000    0.000 interface.py:220(IdentityOperator)
        1    0.000    0.000    0.000    0.000 distributions.py:2380(fisk_gen)
        1    0.000    0.000    0.000    0.000 nonlin.py:1205(LinearMixing)
        1    0.000    0.000    0.000    0.000 widgets.py:656(SubplotTool)
        1    0.000    0.000    0.000    0.000 version.py:292(__cmp__)
        1    0.000    0.000    0.000    0.000 ImagePalette.py:25(ImagePalette)
        1    0.000    0.000    0.000    0.000 socket.py:167(_closedsocket)
        1    0.000    0.000    0.000    0.000 distributions.py:3011(frechet_l_gen)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1676(Word)
        1    0.000    0.000    0.000    0.000 distributions.py:4765(powerlaw_gen)
        1    0.000    0.000    0.000    0.000 threading.py:539(Event)
        1    0.000    0.000    0.000    0.000 mlab.py:2352(FormatObj)
        1    0.000    0.000    0.000    0.000 widgets.py:880(MultiCursor)
        1    0.000    0.000    0.000    0.000 gridspec.py:378(SubplotSpec)
        1    0.000    0.000    0.000    0.000 decorators.py:85(set_test)
        1    0.000    0.000    0.000    0.000 distributions.py:4469(nct_gen)
        1    0.000    0.000    0.000    0.000 linear.py:8(LinearConnection)
        1    0.000    0.000    0.000    0.000 distributions.py:3714(invgamma_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:2331(burr_gen)
        1    0.000    0.000    0.000    0.000 optimize.py:48(MemoizeJac)
        1    0.000    0.000    0.000    0.000 mbcs.py:20(decode)
        1    0.000    0.000    0.000    0.000 full.py:9(FullConnection)
        1    0.000    0.000    0.000    0.000 tz.py:152(_ttinfo)
        1    0.000    0.000    0.000    0.000 widgets.py:791(Cursor)
        1    0.000    0.000    0.000    0.000 mio5_params.py:218(MatlabObject)
        1    0.000    0.000    0.000    0.000 mathtext.py:1283(Char)
        1    0.000    0.000    0.005    0.005 pyparsing_py2.py:3501(makeHTMLTags)
        5    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 distributions.py:4896(rayleigh_gen)
        1    0.000    0.000    0.000    0.000 mathtext.py:1562(Vlist)
        1    0.000    0.000    0.000    0.000 distributions.py:3389(genhalflogistic_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4930(reciprocal_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4078(loggamma_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:4363(ncf_gen)
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 distributions.py:4219(maxwell_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:2558(dgamma_gen)
        1    0.000    0.000    0.000    0.000 patches.py:1730(_Base)
        1    0.000    0.000    0.000    0.000 distributions.py:5246(uniform_gen)
        1    0.000    0.000    0.000    0.000 colors.py:1178(LightSource)
        1    0.000    0.000    0.000    0.000 distributions.py:2870(f_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:3053(genlogistic_gen)
        1    0.000    0.000    0.000    0.000 widgets.py:535(RadioButtons)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2147(LineStart)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2866(Optional)
        1    0.000    0.000    0.000    0.000 fullnotself.py:7(FullNotSelfConnection)
        1    0.000    0.000    0.000    0.000 recurrent.py:140(RecurrentNetwork)
        1    0.000    0.000    0.000    0.000 distributions.py:5002(recipinvgauss_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:3183(genextreme_gen)
        1    0.000    0.000    0.000    0.000 threading.py:399(notifyAll)
        1    0.000    0.000    0.000    0.000 scale.py:56(LinearScale)
        1    0.000    0.000    0.000    0.000 docstring.py:58(Appender)
        1    0.000    0.000    0.000    0.000 Dialog.py:12(Dialog)
        1    0.000    0.000    0.000    0.000 kdtree.py:236(node)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:36(BasinHoppingRunner)
        1    0.000    0.000    0.000    0.000 polar.py:179(RadialLocator)
        1    0.000    0.000    0.000    0.000 index_tricks.py:82(nd_grid)
        1    0.000    0.000    0.000    0.000 distributions.py:2529(cosine_gen)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2059(White)
        1    0.000    0.000    0.000    0.000 distributions.py:7178(dlaplace_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:3787(invweibull_gen)
        1    0.000    0.000    0.000    0.000 scale.py:15(ScaleBase)
        1    0.000    0.000    0.000    0.000 core.py:7120(_convert2ma)
        1    0.000    0.000    0.000    0.000 {_ctypes.set_conversion_mode}
        1    0.000    0.000    0.000    0.000 ticker.py:1035(LinearLocator)
        1    0.000    0.000    0.000    0.000 subprocess.py:402(CalledProcessError)
        1    0.000    0.000    0.000    0.000 __init__.py:230(LogRecord)
        1    0.000    0.000    0.000    0.000 utils.py:1394(WarningManager)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2748(NotAny)
        1    0.000    0.000    0.000    0.000 tricontour.py:8(TriContourSet)
        1    0.000    0.000    0.000    0.000 distributions.py:4145(lognorm_gen)
        1    0.000    0.000    0.000    0.000 csv.py:162(Sniffer)
        1    0.000    0.000    0.000    0.000 distributions.py:3544(halfcauchy_gen)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2824(OneOrMore)
        1    0.000    0.000    0.000    0.000 legend_handler.py:264(HandlerRegularPolyCollection)
        1    0.000    0.000    0.000    0.000 blocking_input.py:293(BlockingContourLabeler)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2262(WordEnd)
        1    0.000    0.000    0.000    0.000 nonlin.py:649(GenericBroyden)
        1    0.000    0.000    0.000    0.000 arrayprint.py:655(LongFloatFormat)
        1    0.000    0.000    0.000    0.000 mathtext.py:1390(List)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1198(LocationEvent)
        1    0.000    0.000    0.000    0.000 distributions.py:2601(dweibull_gen)
        1    0.000    0.000    0.000    0.000 rcsetup.py:37(ValidateInStrings)
        1    0.000    0.000    0.000    0.000 ticker.py:1503(SymmetricalLogLocator)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:113(TimerTk)
        1    0.000    0.000    0.000    0.000 patches.py:2995(_Curve)
        1    0.000    0.000    0.000    0.000 __init__.py:6(ProjectionRegistry)
        1    0.000    0.000    0.000    0.000 mathtext.py:1210(Node)
        1    0.000    0.000    0.000    0.000 ticker.py:1148(MultipleLocator)
        1    0.000    0.000    0.000    0.000 distributions.py:3854(johnsonsu_gen)
        8    0.000    0.000    0.000    0.000 {thread.get_ident}
        1    0.000    0.000    0.000    0.000 widgets.py:406(CheckButtons)
        1    0.000    0.000    0.000    0.000 distributions.py:3921(levy_gen)
        1    0.000    0.000    0.000    0.000 distributions.py:3748(invgauss_gen)
        1    0.000    0.000    0.000    0.000 gaussianlayer.py:9(GaussianLayer)
        1    0.000    0.000    0.000    0.000 distributions.py:2841(foldcauchy_gen)
        1    0.000    0.000    0.000    0.000 threading.py:549(_Event)
        1    0.000    0.000    0.000    0.000 index_tricks.py:505(ndindex)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 numeric.py:2497(errstate)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1477(XView)
        1    0.000    0.000    0.000    0.000 csv.py:123(DictWriter)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2900(SkipTo)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2734(FollowedBy)
        1    0.000    0.000    0.000    0.000 arrayprint.py:635(IntegerFormat)
        1    0.000    0.000    0.000    0.000 mlab.py:2443(FormatDate)
        1    0.000    0.000    0.000    0.000 core.py:126(MAError)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3191(_setit)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3059(Combine)
        1    0.000    0.000    0.000    0.000 core.py:5807(_extrema_operation)
        1    0.000    0.000    0.000    0.000 mathtext.py:1787(Kern)
        1    0.000    0.000    0.000    0.000 decimal.py:161(DecimalException)
        1    0.000    0.000    0.000    0.000 geo.py:555(InvertedLambertTransform)
        1    0.000    0.000    0.000    0.000 importance.py:13(ImportanceDataSet)
        2    0.000    0.000    0.000    0.000 tokenize.py:46(maybe)
        1    0.000    0.000    0.000    0.000 miobase.py:306(MatVarReader)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1988(CharsNotIn)
        1    0.000    0.000    0.000    0.000 cbook.py:447(Bunch)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:261(_ParseResultsWithOffset)
        1    0.000    0.000    0.000    0.000 dates.py:403(IndexDateFormatter)
        1    0.000    0.000    0.000    0.000 core.py:5918(_frommethod)
        1    0.000    0.000    0.000    0.000 utils.py:97(_Deprecate)
        1    0.000    0.000    0.000    0.000 patches.py:1794(Square)
        1    0.000    0.000    0.000    0.000 tanhlayer.py:8(TanhLayer)
        1    0.000    0.000    0.000    0.000 nonlin.py:409(TerminationCondition)
        1    0.000    0.000    0.000    0.000 Tkinter.py:321(DoubleVar)
        1    0.000    0.000    0.000    0.000 analyzer.py:447(BatchFileTrainer)
        1    0.000    0.000    0.000    0.000 idl.py:146(Pointer)
        1    0.000    0.000    0.000    0.000 scale.py:181(NaturalLogTransform)
        1    0.000    0.000    0.000    0.000 mio5_params.py:235(MatlabFunction)
        1    0.000    0.000    0.000    0.000 gradientdescent.py:97(NaturalGradient)
        1    0.000    0.000    0.000    0.000 subsampling.py:9(SubsamplingConnection)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 unsupervised.py:10(UnsupervisedDataSet)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3202(OptionMenu)
        1    0.000    0.000    0.000    0.000 offsetbox.py:293(VPacker)
        1    0.000    0.000    0.000    0.000 gate.py:13(MultiplicationLayer)
        1    0.000    0.000    0.000    0.000 analyzer.py:410(RealtimeAnalyzer)
        1    0.000    0.000    0.000    0.000 gradientdescent.py:124(IRpropPlus)
        1    0.000    0.000    0.000    0.000 fitpack2.py:589(SmoothBivariateSpline)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2754(Menubutton)
        1    0.000    0.000    0.000    0.000 distributions.py:3430(gompertz_gen)
        1    0.000    0.000    0.000    0.000 dviread.py:478(Vf)
        1    0.000    0.000    0.000    0.000 case.py:98(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 cbook.py:107(todatetime)
        1    0.000    0.000    0.000    0.000 warnings.py:14(warnpy3k)
        1    0.000    0.000    0.000    0.000 __init__.py:134(get_projection_names)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3143(OnlyOnce)
        1    0.000    0.000    0.000    0.000 threading.py:787(_set_ident)
        1    0.000    0.000    0.000    0.000 {cmp}
        1    0.000    0.000    0.000    0.000 six.py:78(_LazyDescr)
        1    0.000    0.000    0.000    0.000 orthogonal.py:111(orthopoly1d)
        1    0.000    0.000    0.000    0.000 distributions.py:3821(johnsonsb_gen)
        1    0.000    0.000    0.000    0.000 patches.py:1837(LArrow)
        1    0.000    0.000    0.000    0.000 distributions.py:4110(loglaplace_gen)
        1    0.000    0.000    0.000    0.000 dates.py:143(_UTC)
        3    0.000    0.000    0.000    0.000 {nt.getpid}
        1    0.000    0.000    0.000    0.000 dviread.py:397(DviFont)
        1    0.000    0.000    0.000    0.000 mathtext.py:277(MathtextBackendPdf)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1552(DraggableAnnotation)
        1    0.000    0.000    0.000    0.000 moduleslice.py:6(ModuleSlice)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1498(YView)
        1    0.000    0.000    0.000    0.000 arpack.py:289(ArpackError)
        1    0.000    0.000    0.000    0.000 polyint.py:426(BarycentricInterpolator)
        1    0.000    0.000    0.000    0.000 anneal.py:16(base_schedule)
        3    0.000    0.000    0.000    0.000 _inspect.py:159(<lambda>)
        1    0.000    0.000    0.000    0.000 rcsetup.py:356(ValidateInterval)
        1    0.000    0.000    0.000    0.000 colors.py:934(LogNorm)
        4    0.000    0.000    0.000    0.000 __init__.py:429(__init__)
        1    0.000    0.000    0.000    0.000 mlab.py:2391(FormatFloat)
        1    0.000    0.000    0.000    0.000 urllib.py:1000(addinfourl)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:184(Tokenizer)
        1    0.000    0.000    0.000    0.000 numbers.py:13(Number)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 decorators.py:57(setastest)
        1    0.000    0.000    0.000    0.000 csv.py:57(excel)
        1    0.000    0.000    0.000    0.000 core.py:728(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 npyio.py:82(BagObj)
        1    0.000    0.000    0.000    0.000 dates.py:428(AutoDateFormatter)
        1    0.000    0.000    0.000    0.000 ndgriddata.py:21(NearestNDInterpolator)
        1    0.000    0.000    0.000    0.000 decorator.py:58(getfullargspec)
        1    0.000    0.000    0.000    0.000 scale.py:355(InvertedSymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:171(Token)
        1    0.000    0.000    0.000    0.000 calendar.py:536(LocaleHTMLCalendar)
        1    0.000    0.000    0.000    0.000 anneal.py:130(boltzmann_sa)
        1    0.000    0.000    0.000    0.000 cbook.py:1826(_InstanceMethodPickler)
        1    0.000    0.000    0.000    0.000 __init__.py:573(Filterer)
        1    0.000    0.000    0.000    0.000 cbook.py:121(todate)
        2    0.000    0.000    0.000    0.000 __init__.py:359(_FuncPtr)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3105(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1671(NullHandler)
        1    0.000    0.000    0.000    0.000 patches.py:2660(Arc)
        1    0.000    0.000    0.000    0.000 distributions.py:4261(mielke_gen)
        1    0.000    0.000    0.000    0.000 core.py:1032(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 urllib.py:110(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:14(Storage)
        1    0.000    0.000    0.000    0.000 linalg.py:37(LinAlgError)
        1    0.000    0.000    0.000    0.000 mathtext.py:305(MathtextBackendSvg)
        1    0.000    0.000    0.000    0.000 mathtext.py:1243(Box)
        1    0.000    0.000    0.000    0.000 ticker.py:298(OldScalarFormatter)
        1    0.000    0.000    0.000    0.000 distributions.py:3678(gausshyper_gen)
        1    0.000    0.000    0.000    0.000 extras.py:222(_fromnxfunction)
        1    0.000    0.000    0.000    0.000 arpack.py:387(_SymmetricArpackParams)
        2    0.000    0.000    0.000    0.000 {method 'title' of 'str' objects}
        1    0.000    0.000    0.000    0.000 rrule.py:228(rrule)
        1    0.000    0.000    0.000    0.000 dviread.py:771(Encoding)
        1    0.000    0.000    0.000    0.000 version.py:32(Version)
        1    0.000    0.000    0.000    0.000 pickle.py:58(PickleError)
        1    0.000    0.000    0.000    0.000 container.py:98(ErrorbarContainer)
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 utilities.py:133(XMLBuildable)
        1    0.000    0.000    0.000    0.000 rrule.py:826(_genitem)
        1    0.000    0.000    0.000    0.000 legend_handler.py:361(HandlerErrorbar)
        1    0.000    0.000    0.000    0.000 mbcs.py:23(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 typeconv.py:51(_oldtypecodes)
        1    0.000    0.000    0.000    0.000 mathtext.py:237(MathtextBackendPs)
        1    0.000    0.000    0.000    0.000 tzwin.py:77(tzwin)
        1    0.000    0.000    0.000    0.000 numerictypes.py:770(_typedict)
        1    0.000    0.000    0.000    0.000 Tkinter.py:274(StringVar)
        1    0.000    0.000    0.000    0.000 fitpack2.py:718(RectBivariateSpline)
        1    0.000    0.000    0.000    0.000 colors.py:755(ListedColormap)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1662(CaselessKeyword)
        1    0.000    0.000    0.000    0.000 core.py:804(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 units.py:49(AxisInfo)
        1    0.000    0.000    0.000    0.000 __init__.py:881(FileHandler)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3359(BitmapImage)
        1    0.000    0.000    0.000    0.000 streamplot.py:289(StreamMask)
        1    0.000    0.000    0.000    0.000 mathtext.py:1673(Glue)
        1    0.000    0.000    0.000    0.000 utf_8.py:22(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 string.py:131(__init__)
        1    0.000    0.000    0.000    0.000 arpack.py:316(_ArpackParams)
        1    0.000    0.000    0.000    0.000 __init__.py:428(LibraryLoader)
        1    0.000    0.000    0.000    0.000 cbook.py:676(Xlator)
        1    0.000    0.000    0.000    0.000 numeric.py:37(ComplexWarning)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1457(CallWrapper)
        1    0.000    0.000    0.000    0.000 <string>:2(<module>)
        1    0.000    0.000    0.000    0.000 Image.py:407(_E)
        1    0.000    0.000    0.000    0.000 __init__.py:494(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 font_manager.py:347(FontEntry)
        1    0.000    0.000    0.000    0.000 lines.py:1127(VertexSelector)
        2    0.000    0.000    0.000    0.000 mlab.py:2381(__init__)
        1    0.000    0.000    0.000    0.000 _endian.py:26(_swapped_meta)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3100(Dict)
        1    0.000    0.000    0.000    0.000 cbook.py:368(Timeout)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 cbook.py:135(tofloat)
        1    0.000    0.000    0.000    0.000 arrayprint.py:696(ComplexFormat)
        1    0.000    0.000    0.000    0.000 neuronlayer.py:6(NeuronLayer)
        1    0.000    0.000    0.000    0.000 ticker.py:952(IndexLocator)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.set_typeDict}
        1    0.000    0.000    0.000    0.000 mio4.py:588(MatFile4Writer)
        1    0.000    0.000    0.000    0.000 mlab.py:2459(FormatDatetime)
        1    0.000    0.000    0.000    0.000 mathtext.py:1451(Hlist)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2723(__str__)
        1    0.000    0.000    0.000    0.000 distributions.py:3995(levy_stable_gen)
        1    0.000    0.000    0.000    0.000 dates.py:848(YearLocator)
        1    0.000    0.000    0.000    0.000 arrayprint.py:740(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 tz.py:554(tzstr)
        1    0.000    0.000    0.000    0.000 errors.py:79(LibError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:63(ShowBase)
        1    0.000    0.000    0.000    0.000 compat.py:113(Pickler)
        1    0.000    0.000    0.000    0.000 __init__.py:159(py_object)
        1    0.000    0.000    0.000    0.000 rcsetup.py:154(validate_nseq_int)
        1    0.000    0.000    0.000    0.000 collections.py:865(StarPolygonCollection)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 subprocess.py:420(STARTUPINFO)
        1    0.000    0.000    0.000    0.000 calendar.py:501(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 rprop.py:9(RPropMinusTrainer)
        1    0.000    0.000    0.000    0.000 mathtext.py:1361(Accent)
        1    0.000    0.000    0.000    0.000 dates.py:499(rrulewrapper)
        1    0.000    0.000    0.000    0.000 io.py:69(IOBase)
        1    0.000    0.000    0.000    0.000 distributions.py:1996(kstwobign_gen)
        1    0.000    0.000    0.000    0.000 interpolate.py:89(NNInterpolator)
        1    0.000    0.000    0.000    0.000 threading.py:299(_is_owned)
        1    0.000    0.000    0.000    0.000 fitpack2.py:277(InterpolatedUnivariateSpline)
        1    0.000    0.000    0.000    0.000 interpolate.py:68(interp2d)
        1    0.000    0.000    0.000    0.000 distributions.py:4866(rdist_gen)
        1    0.000    0.000    0.000    0.000 arrayprint.py:685(LongComplexFormat)
        1    0.000    0.000    0.000    0.000 ticker.py:222(IndexFormatter)
        1    0.000    0.000    0.000    0.000 polyint.py:187(KroghInterpolator)
        1    0.000    0.000    0.000    0.000 __init__.py:243(c_char_p)
        1    0.000    0.000    0.000    0.000 colors.py:1073(NoNorm)
        1    0.000    0.000    0.000    0.000 decimal.py:5418(_WorkRep)
        1    0.000    0.000    0.000    0.000 Tkinter.py:340(BooleanVar)
        1    0.000    0.000    0.000    0.000 urllib.py:946(addbase)
        1    0.000    0.000    0.000    0.000 cbook.py:1050(maxdict)
        1    0.000    0.000    0.000    0.000 arpack.py:939(IterInv)
        1    0.000    0.000    0.000    0.000 arpack.py:604(_UnsymmetricArpackParams)
        1    0.000    0.000    0.000    0.000 ImageMode.py:22(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 utf_8.py:18(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 _fortran_format_parser.py:30(BadFortranFormat)
        1    0.000    0.000    0.000    0.000 case.py:34(_ExpectedFailure)
        1    0.000    0.000    0.000    0.000 __init__.py:388(PyDLL)
        1    0.000    0.000    0.000    0.000 polyint.py:108(_Interpolator1DWithDerivatives)
        3    0.000    0.000    0.000    0.000 core.py:783(__init__)
        1    0.000    0.000    0.000    0.000 gridspec.py:314(GridSpecFromSubplotSpec)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3091(Group)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1524(DraggableOffsetBox)
        1    0.000    0.000    0.000    0.000 mathtext.py:362(MathtextBackendCairo)
        1    0.000    0.000    0.000    0.000 six.py:53(X)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3529(LabelFrame)
        1    0.000    0.000    0.000    0.000 colorbar.py:1082(ColorbarPatch)
        1    0.000    0.000    0.000    0.000 threading.py:1056(_Timer)
        1    0.000    0.000    0.000    0.000 patches.py:3194(CurveFilledA)
        1    0.000    0.000    0.000    0.000 __init__.py:945(PlaceHolder)
        1    0.000    0.000    0.000    0.000 biasunit.py:7(BiasUnit)
        1    0.000    0.000    0.000    0.000 __init__.py:536(Filter)
        1    0.000    0.000    0.000    0.000 mathtext.py:334(MathtextBackendPath)
        1    0.000    0.000    0.000    0.000 cbook.py:147(toint)
        1    0.000    0.000    0.000    0.000 gate.py:81(SwitchLayer)
        1    0.000    0.000    0.000    0.000 patches.py:3449(Simple)
        1    0.000    0.000    0.000    0.000 fitpack2.py:646(LSQBivariateSpline)
        1    0.000    0.000    0.000    0.000 six.py:91(MovedModule)
        1    0.000    0.000    0.000    0.000 parser.py:337(_result)
        1    0.000    0.000    0.000    0.000 patches.py:2017(Sawtooth)
        1    0.000    0.000    0.000    0.000 blocking_input.py:346(BlockingKeyMouseInput)
        2    0.000    0.000    0.000    0.000 calendar.py:71(__init__)
        1    0.000    0.000    0.000    0.000 mlab.py:2420(FormatBool)
        1    0.000    0.000    0.000    0.000 errors.py:29(DistutilsArgError)
        1    0.000    0.000    0.000    0.000 legend_handler.py:231(HandlerLineCollection)
        2    0.000    0.000    0.000    0.000 sre_parse.py:214(isdigit)
        1    0.000    0.000    0.000    0.000 shared.py:69(SharedSubsamplingConnection)
        1    0.000    0.000    0.000    0.000 scale.py:131(Log10Transform)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2759(Message)
        1    0.000    0.000    0.000    0.000 distributions.py:4970(rice_gen)
        1    0.000    0.000    0.000    0.000 mio5_params.py:242(MatlabOpaque)
        1    0.000    0.000    0.000    0.000 identity.py:6(IdentityConnection)
        2    0.000    0.000    0.000    0.000 core.py:795(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:1126(_DummyThread)
        1    0.000    0.000    0.000    0.000 ticker.py:689(LogFormatterExponent)
        1    0.000    0.000    0.000    0.000 fitpack2.py:514(BivariateSpline)
        1    0.000    0.000    0.000    0.000 decimal.py:3748(_ContextManager)
        1    0.000    0.000    0.000    0.000 windowing.py:22(FocusManager)
        1    0.000    0.000    0.000    0.000 cbook.py:819(__Full)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2124(GoToColumn)
        1    0.000    0.000    0.000    0.000 ticker.py:274(FuncFormatter)
        1    0.000    0.000    0.000    0.000 fitpack2.py:1083(RectSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 _ode.py:507(IntegratorConcurrencyError)
        1    0.000    0.000    0.000    0.000 core.py:5874(_maximum_operation)
        1    0.000    0.000    0.000    0.000 patches.py:3337(BracketAB)
        1    0.000    0.000    0.000    0.000 distributions.py:1984(ksone_gen)
        1    0.000    0.000    0.000    0.000 mlab.py:2409(FormatInt)
        1    0.000    0.000    0.000    0.000 analyzer.py:480(FileAnalyzer)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3042(TokenConverter)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1507(Token)
        1    0.000    0.000    0.000    0.000 core.py:750(_DomainTan)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3048(Upcase)
        1    0.000    0.000    0.000    0.000 reinforcement.py:8(ReinforcementDataSet)
        1    0.000    0.000    0.000    0.000 anneal.py:117(cauchy_sa)
        1    0.000    0.000    0.000    0.000 __init__.py:126(MatplotlibDeprecationWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:390(checkdep_ps_distiller)
        1    0.000    0.000    0.000    0.000 shutil.py:31(Error)
        1    0.000    0.000    0.000    0.000 core.py:5862(_minimum_operation)
        2    0.000    0.000    0.000    0.000 pyparsing_py2.py:428(<lambda>)
        1    0.000    0.000    0.000    0.000 linearlayer.py:6(LinearLayer)
        1    0.000    0.000    0.000    0.000 __init__.py:10(__init__)
        1    0.000    0.000    0.000    0.000 copy_reg.py:27(constructor)
        1    0.000    0.000    0.000    0.000 __init__.py:810(StreamHandler)
        1    0.000    0.000    0.000    0.000 calendar.py:21(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1157(DrawEvent)
        1    0.000    0.000    0.000    0.000 suite.py:299(_DebugResult)
        1    0.000    0.000    0.000    0.000 inspect.py:632(BlockFinder)
        1    0.000    0.000    0.000    0.000 shared.py:15(MotherConnection)
        1    0.000    0.000    0.000    0.000 polyutils.py:48(RankWarning)
        1    0.000    0.000    0.000    0.000 cbook.py:785(GetRealpathAndStat)
        1    0.000    0.000    0.000    0.000 utf_32.py:99(StreamWriter)
        1    0.000    0.000    0.000    0.000 dates.py:222(strpdate2num)
        1    0.000    0.000    0.000    0.000 fitpack2.py:440(_BivariateSplineBase)
        1    0.000    0.000    0.000    0.000 cbook.py:786(__init__)
        1    0.000    0.000    0.000    0.000 gate.py:51(DoubleGateLayer)
        1    0.000    0.000    0.000    0.000 softmax.py:10(SoftmaxLayer)
        1    0.000    0.000    0.000    0.000 ticker.py:974(FixedLocator)
        1    0.000    0.000    0.000    0.000 patches.py:1878(RArrow)
        1    0.000    0.000    0.000    0.000 cbook.py:1806(_NestedClassGetter)
        1    0.000    0.000    0.000    0.000 core.py:766(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 stride_tricks.py:12(DummyArray)
        1    0.000    0.000    0.000    0.000 patches.py:1898(Round)
        1    0.000    0.000    0.000    0.000 threading.py:56(_Verbose)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2499(Frame)
        1    0.000    0.000    0.000    0.000 collections.py:872(AsteriskPolygonCollection)
        1    0.000    0.000    0.000    0.000 patches.py:2521(Arc3)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3756(Tributton)
        1    0.000    0.000    0.000    0.000 utf_16.py:75(StreamWriter)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:232(ParseSyntaxException)
        1    0.000    0.000    0.000    0.000 legend_handler.py:473(HandlerStem)
        1    0.000    0.000    0.000    0.000 _endian.py:49(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2057(Toplevel)
        1    0.000    0.000    0.000    0.000 fitpack2.py:347(LSQUnivariateSpline)
        1    0.000    0.000    0.000    0.000 parser.py:147(_resultbase)
        1    0.000    0.000    0.000    0.000 patches.py:1962(Round4)
        1    0.000    0.000    0.000    0.000 ticker.py:286(FormatStrFormatter)
        1    0.000    0.000    0.000    0.000 patches.py:2597(Angle)
        1    0.000    0.000    0.000    0.000 cbook.py:101(tostr)
        1    0.000    0.000    0.000    0.000 legend_handler.py:149(HandlerNpointsYoffsets)
        1    0.000    0.000    0.000    0.000 gate.py:28(GateLayer)
        1    0.000    0.000    0.000    0.000 patches.py:3258(_Bracket)
        1    0.000    0.000    0.000    0.000 legend_handler.py:163(HandlerLine2D)
        1    0.000    0.000    0.000    0.000 patches.py:2755(Bar)
        1    0.000    0.000    0.000    0.000 Tkinter.py:126(Event)
        1    0.000    0.000    0.000    0.000 axes.py:9092(_PicklableSubplotClassConstructor)
        1    0.000    0.000    0.000    0.000 idl.py:154(ObjectPointer)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2390(_ErrorStop)
        1    0.000    0.000    0.000    0.000 utf_16.py:53(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 decimal.py:5676(__init__)
        1    0.000    0.000    0.000    0.000 errors.py:59(DistutilsInternalError)
        1    0.000    0.000    0.000    0.000 extras.py:1415(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 legend_handler.py:541(__init__)
        1    0.000    0.000    0.000    0.000 scale.py:156(Log2Transform)
        1    0.000    0.000    0.000    0.000 mlab.py:2369(FormatString)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:156(GaussianBlur)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2517(Label)
        1    0.000    0.000    0.000    0.000 distributions.py:3140(genexpon_gen)
        2    0.000    0.000    0.000    0.000 index_tricks.py:142(__init__)
        1    0.000    0.000    0.000    0.000 utf_32.py:119(StreamReader)
        1    0.000    0.000    0.000    0.000 contour.py:36(ClabelText)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:253(RecursiveGrammarException)
        1    0.000    0.000    0.000    0.000 csv.py:67(excel_tab)
        1    0.000    0.000    0.000    0.000 dates.py:922(WeekdayLocator)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3134(Suppress)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1398(KeyEvent)
        1    0.000    0.000    0.000    0.000 index_tricks.py:458(ndenumerate)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1529(NoMatch)
        1    0.000    0.000    0.000    0.000 distributions.py:4803(powerlognorm_gen)
        1    0.000    0.000    0.000    0.000 mlab.py:2429(FormatPercent)
        1    0.000    0.000    0.000    0.000 mlab.py:2380(FormatFormatStr)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:106(MinFilter)
        1    0.000    0.000    0.000    0.000 feedforward.py:11(FeedForwardNetworkComponent)
        1    0.000    0.000    0.000    0.000 tokenize.py:178(Untokenizer)
        1    0.000    0.000    0.000    0.000 pickle.py:82(_Stop)
        1    0.000    0.000    0.000    0.000 core.py:781(_DomainGreater)
        1    0.000    0.000    0.000    0.000 errors.py:16(DistutilsModuleError)
        1    0.000    0.000    0.000    0.000 sre_parse.py:208(seek)
        1    0.000    0.000    0.000    0.000 __init__.py:233(c_byte)
        1    0.000    0.000    0.000    0.000 numpytest.py:10(IgnoreException)
        1    0.000    0.000    0.000    0.000 index_tricks.py:337(RClass)
        1    0.000    0.000    0.000    0.000 widgets.py:59(Widget)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:90(MedianFilter)
        1    0.000    0.000    0.000    0.000 patches.py:3637(Wedge)
        1    0.000    0.000    0.000    0.000 urllib.py:990(addinfo)
        1    0.000    0.000    0.000    0.000 decimal.py:5672(_Log10Memoize)
        1    0.000    0.000    0.000    0.000 index_tricks.py:600(IndexExpression)
        1    0.000    0.000    0.000    0.000 urlparse.py:120(SplitResult)
        1    0.000    0.000    0.000    0.000 fitpack2.py:861(SmoothSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 FileDialog.py:234(SaveFileDialog)
        1    0.000    0.000    0.000    0.000 miobase.py:22(MatReadError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1830(AutoHeightChar)
        1    0.000    0.000    0.000    0.000 subprocess.py:426(pywintypes)
        1    0.000    0.000    0.000    0.000 shared.py:9(OwnershipViolation)
        1    0.000    0.000    0.000    0.000 calendar.py:138(setfirstweekday)
        1    0.000    0.000    0.000    0.000 __init__.py:754(setFormatter)
        1    0.000    0.000    0.000    0.000 kdtree.py:244(leafnode)
        1    0.000    0.000    0.000    0.000 hb.py:36(MalformedHeader)
        1    0.000    0.000    0.000    0.000 utf_16.py:95(StreamReader)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1640(CaselessLiteral)
        1    0.000    0.000    0.000    0.000 hb.py:39(LineOverflow)
        1    0.000    0.000    0.000    0.000 precision.py:28(PrecisionError)
        1    0.000    0.000    0.000    0.000 six.py:106(MovedAttribute)
        1    0.000    0.000    0.000    0.000 legend_handler.py:200(HandlerPatch)
        1    0.000    0.000    0.000    0.000 utf_8.py:25(StreamWriter)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:161(_Constants)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2117(_PositionToken)
        1    0.000    0.000    0.000    0.000 numeric.py:2493(_unspecified)
        1    0.000    0.000    0.000    0.000 __init__.py:1328(getEffectiveLevel)
        1    0.000    0.000    0.000    0.000 decimal.py:251(DivisionImpossible)
        1    0.000    0.000    0.000    0.000 tzwin.py:117(tzwinlocal)
        1    0.000    0.000    0.000    0.000 dates.py:961(HourLocator)
        1    0.000    0.000    0.000    0.000 arpack.py:298(ArpackNoConvergence)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:230(MinimizerWrapper)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1082(AnchoredText)
        1    0.000    0.000    0.000    0.000 core.py:793(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 offsetbox.py:360(HPacker)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1520(Empty)
        1    0.000    0.000    0.000    0.000 lobpcg.py:89(CallableLinearOperator)
        1    0.000    0.000    0.000    0.000 patches.py:3134(CurveA)
        1    0.000    0.000    0.000    0.000 _inspect.py:160(<lambda>)
        1    0.000    0.000    0.000    0.000 urllib.py:975(addclosehook)
        1    0.000    0.000    0.000    0.000 zeros.py:21(RootResults)
        1    0.000    0.000    0.000    0.000 dviread.py:584(Tfm)
        1    0.000    0.000    0.000    0.000 interface.py:205(MatrixLinearOperator)
        1    0.000    0.000    0.000    0.000 mlab.py:2438(FormatMillions)
        1    0.000    0.000    0.000    0.000 patches.py:3174(CurveAB)
        1    0.000    0.000    0.000    0.000 arpack.py:905(SpLuInv)
        1    0.000    0.000    0.000    0.000 mathtext.py:1636(Rule)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2172(LineEnd)
        2    0.000    0.000    0.000    0.000 index_tricks.py:643(__init__)
        1    0.000    0.000    0.000    0.000 decimal.py:196(InvalidOperation)
        1    0.000    0.000    0.000    0.000 anneal.py:94(fast_sa)
        1    0.000    0.000    0.000    0.000 fitpack2.py:804(SphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 widgets.py:1150(HorizontalSpanSelector)
        1    0.000    0.000    0.000    0.000 softmax.py:24(PartialSoftmaxLayer)
        1    0.000    0.000    0.000    0.000 streamplot.py:178(StreamplotSet)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:246(Metropolis)
        1    0.000    0.000    0.000    0.000 ticker.py:242(NullFormatter)
        1    0.000    0.000    0.000    0.000 mathtext.py:1859(AutoWidthChar)
        1    0.000    0.000    0.000    0.000 dates.py:979(MinuteLocator)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:140(ModeFilter)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:18(Filter)
        1    0.000    0.000    0.000    0.000 patches.py:3371(BracketA)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2240(WordStart)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2198(StringStart)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:67(Show)
        1    0.000    0.000    0.000    0.000 offsetbox.py:263(PackerBase)
        1    0.000    0.000    0.000    0.000 container.py:90(BarContainer)
        1    0.000    0.000    0.000    0.000 __init__.py:172(c_ushort)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:167(UnsharpMask)
        1    0.000    0.000    0.000    0.000 six.py:250(Iterator)
        1    0.000    0.000    0.000    0.000 polar.py:161(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 mathtext.py:551(CachedFont)
        1    0.000    0.000    0.000    0.000 patches.py:3415(BarAB)
        1    0.000    0.000    0.000    0.000 mlab.py:2433(FormatThousands)
        1    0.000    0.000    0.000    0.000 dates.py:943(DayLocator)
        1    0.000    0.000    0.000    0.000 calendar.py:488(TimeEncoding)
        1    0.000    0.000    0.000    0.000 anneal.py:144(_state)
        1    0.000    0.000    0.000    0.000 ticker.py:724(LogFormatterMathtext)
        1    0.000    0.000    0.000    0.000 FileDialog.py:220(LoadFileDialog)
        1    0.000    0.000    0.000    0.000 core.py:129(MaskError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1128(Event)
        1    0.000    0.000    0.000    0.000 __init__.py:406(HRESULT)
        1    0.000    0.000    0.000    0.000 errors.py:76(CompileError)
        1    0.000    0.000    0.000    0.000 mio5_params.py:208(mat_struct)
        1    0.000    0.000    0.000    0.000 patches.py:3215(CurveFilledB)
        1    0.000    0.000    0.000    0.000 patches.py:3536(Fancy)
        1    0.000    0.000    0.000    0.000 core.py:2257(__init__)
        1    0.000    0.000    0.000    0.000 decimal.py:235(DivisionByZero)
        1    0.000    0.000    0.000    0.000 errors.py:13(DistutilsError)
        1    0.000    0.000    0.000    0.000 sigmoidlayer.py:7(SigmoidLayer)
        1    0.000    0.000    0.000    0.000 threading.py:514(_BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 __init__.py:419(OleDLL)
        1    0.000    0.000    0.000    0.000 patches.py:2558(Angle3)
        1    0.000    0.000    0.000    0.000 pickle.py:69(UnpicklingError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1358(PickEvent)
        1    0.000    0.000    0.000    0.000 threading.py:1086(_MainThread)
        1    0.000    0.000    0.000    0.000 wavfile.py:17(WavFileWarning)
        1    0.000    0.000    0.000    0.000 quadrature.py:16(AccuracyWarning)
        1    0.000    0.000    0.000    0.000 mathtext.py:1770(HCentered)
        1    0.000    0.000    0.000    0.000 relulayer.py:5(ReluLayer)
        1    0.000    0.000    0.000    0.000 case.py:45(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:24(Kernel)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1188(CloseEvent)
        1    0.000    0.000    0.000    0.000 units.py:110(Registry)
        1    0.000    0.000    0.000    0.000 calendar.py:28(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 decimal.py:285(InvalidContext)
        1    0.000    0.000    0.000    0.000 analyzer.py:438(FileProcessor)
        1    0.000    0.000    0.000    0.000 ticker.py:1015(NullLocator)
        1    0.000    0.000    0.000    0.000 errors.py:63(DistutilsTemplateError)
        1    0.000    0.000    0.000    0.000 patches.py:2126(Roundtooth)
        1    0.000    0.000    0.000    0.000 legend_handler.py:537(HandlerTuple)
        1    0.000    0.000    0.000    0.000 decimal.py:225(ConversionSyntax)
        1    0.000    0.000    0.000    0.000 _basinhopping.py:216(RandomDisplacement)
        1    0.000    0.000    0.000    0.000 network.py:18(NetworkConstructionException)
        1    0.000    0.000    0.000    0.000 umfpack.py:242(Struct)
        1    0.000    0.000    0.000    0.000 patches.py:3393(BracketB)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:227(ParseFatalException)
        1    0.000    0.000    0.000    0.000 tz.py:629(_tzicalvtzcomp)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:3038(_ForwardNoRecurse)
        1    0.000    0.000    0.000    0.000 arpack.py:925(LuInv)
        1    0.000    0.000    0.000    0.000 polynomial.py:19(RankWarning)
        1    0.000    0.000    0.000    0.000 dates.py:904(MonthLocator)
        1    0.000    0.000    0.000    0.000 Image.py:34(_imaging_not_installed)
        1    0.000    0.000    0.000    0.000 nonlin.py:137(NoConvergence)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:64(RankFilter)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:1546(Literal)
        1    0.000    0.000    0.000    0.000 extras.py:1481(mr_class)
        1    0.000    0.000    0.000    0.000 utilities.py:638(DivergenceError)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:259(SMOOTH)
        1    0.000    0.000    0.000    0.000 sequential.py:10(EmptySequenceError)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:204(DETAIL)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:57(BuiltinFilter)
        1    0.000    0.000    0.000    0.000 __init__.py:260(c_bool)
        1    0.000    0.000    0.000    0.000 parser.py:707(_attr)
        1    0.000    0.000    0.000    0.000 mathtext.py:1742(Fil)
        1    0.000    0.000    0.000    0.000 kdtree.py:249(innernode)
        1    0.000    0.000    0.000    0.000 mathtext.py:231(MathtextBackendBitmap)
        1    0.000    0.000    0.000    0.000 __init__.py:215(c_longlong)
        1    0.000    0.000    0.000    0.000 triangulate.py:19(DuplicatePointWarning)
        1    0.000    0.000    0.000    0.000 basic.py:38(SpecialFunctionWarning)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1150(IdleEvent)
        1    0.000    0.000    0.000    0.000 __init__.py:255(c_void_p)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2411(NonGuiException)
        1    0.000    0.000    0.000    0.000 __init__.py:205(c_longdouble)
        1    0.000    0.000    0.000    0.000 __init__.py:197(c_float)
        1    0.000    0.000    0.000    0.000 mathtext.py:1269(Vbox)
        1    0.000    0.000    0.000    0.000 patches.py:3154(CurveB)
        1    0.000    0.000    0.000    0.000 core.py:5706(__array_finalize__)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:215(EDGE_ENHANCE)
        1    0.000    0.000    0.000    0.000 tokenize.py:145(TokenError)
        1    0.000    0.000    0.000    0.000 shortcuts.py:18(NetworkError)
        1    0.000    0.000    0.000    0.000 __init__.py:226(c_ubyte)
        1    0.000    0.000    0.000    0.000 io.py:78(TextIOBase)
        1    0.000    0.000    0.000    0.000 mathtext.py:1009(StixSansFonts)
        1    0.000    0.000    0.000    0.000 __init__.py:219(c_ulonglong)
        1    0.000    0.000    0.000    0.000 legend_handler.py:349(HandlerCircleCollection)
        1    0.000    0.000    0.000    0.000 mathtext.py:1766(SsGlue)
        1    0.000    0.000    0.000    0.000 Image.py:1683(_ImageCrop)
        1    0.000    0.000    0.000    0.000 ticker.py:1656(AutoLocator)
        1    0.000    0.000    0.000    0.000 errors.py:50(DistutilsPlatformError)
        1    0.000    0.000    0.000    0.000 rcsetup.py:155(__init__)
        1    0.000    0.000    0.000    0.000 mbcs.py:33(StreamReader)
        1    0.000    0.000    0.000    0.000 axis.py:593(Ticker)
        1    0.000    0.000    0.000    0.000 decimal.py:262(DivisionUndefined)
        1    0.000    0.000    0.000    0.000 _iotools.py:435(ConverterLockError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1653(Hrule)
        1    0.000    0.000    0.000    0.000 mathtext.py:1816(SubSuperCluster)
        1    0.000    0.000    0.000    0.000 __init__.py:1369(RootLogger)
        1    0.000    0.000    0.000    0.000 __init__.py:291(c_wchar_p)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1171(ResizeEvent)
        1    0.000    0.000    0.000    0.000 io.py:72(RawIOBase)
        1    0.000    0.000    0.000    0.000 polyutils.py:52(PolyError)
        1    0.000    0.000    0.000    0.000 __init__.py:168(c_short)
        1    0.000    0.000    0.000    0.000 legend_handler.py:336(HandlerPathCollection)
        1    0.000    0.000    0.000    0.000 mathtext.py:1750(Filll)
        1    0.000    0.000    0.000    0.000 umfpack.py:25(UmfpackWarning)
        1    0.000    0.000    0.000    0.000 errors.py:66(DistutilsByteCompileError)
        1    0.000    0.000    0.000    0.000 shutil.py:34(SpecialFileError)
        1    0.000    0.000    0.000    0.000 urlparse.py:128(ParseResult)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:248(FIND_EDGES)
        1    0.000    0.000    0.000    0.000 mbcs.py:30(StreamWriter)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2050(Widget)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:237(EMBOSS)
        1    0.000    0.000    0.000    0.000 mathtext.py:1754(NegFil)
        1    0.000    0.000    0.000    0.000 mbcs.py:27(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 core.py:756(__init__)
        1    0.000    0.000    0.000    0.000 errors.py:83(LinkError)
        1    0.000    0.000    0.000    0.000 decimal.py:322(Overflow)
        1    0.000    0.000    0.000    0.000 bezier.py:13(NonIntersectingPathException)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:180(BLUR)
        1    0.000    0.000    0.000    0.000 mathtext.py:1758(NegFill)
        1    0.000    0.000    0.000    0.000 polyutils.py:56(PolyDomainError)
        1    0.000    0.000    0.000    0.000 optimize.py:117(OptimizeWarning)
        1    0.000    0.000    0.000    0.000 __init__.py:238(c_char)
        1    0.000    0.000    0.000    0.000 errors.py:55(DistutilsExecError)
        1    0.000    0.000    0.000    0.000 utf_8.py:28(StreamReader)
        1    0.000    0.000    0.000    0.000 _iotools.py:428(ConverterError)
        1    0.000    0.000    0.000    0.000 dates.py:997(SecondLocator)
        1    0.000    0.000    0.000    0.000 feedforward.py:58(FeedForwardNetwork)
        1    0.000    0.000    0.000    0.000 patches.py:3123(Curve)
        1    0.000    0.000    0.000    0.000 base.py:18(SparseEfficiencyWarning)
        1    0.000    0.000    0.000    0.000 inspect.py:630(EndOfBlock)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:218(ParseException)
        1    0.000    0.000    0.000    0.000 errors.py:46(DistutilsSetupError)
        1    0.000    0.000    0.000    0.000 container.py:107(StemContainer)
        1    0.000    0.000    0.000    0.000 nonlin.py:980(BroydenSecond)
        1    0.000    0.000    0.000    0.000 io.py:75(BufferedIOBase)
        1    0.000    0.000    0.000    0.000 __init__.py:294(c_wchar)
        1    0.000    0.000    0.000    0.000 mathtext.py:1746(Fill)
        1    0.000    0.000    0.000    0.000 patches.py:3236(CurveFilledAB)
        1    0.000    0.000    0.000    0.000 shared.py:59(SharedFullConnection)
        1    0.000    0.000    0.000    0.000 decimal.py:273(Inexact)
        1    0.000    0.000    0.000    0.000 mathtext.py:1207(MathTextWarning)
        1    0.000    0.000    0.000    0.000 tokenize.py:147(StopTokenizing)
        1    0.000    0.000    0.000    0.000 base.py:16(SparseWarning)
        1    0.000    0.000    0.000    0.000 errors.py:73(PreprocessError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1276(Hbox)
        1    0.000    0.000    0.000    0.000 pickle.py:1261(_EmptyClass)
        2    0.000    0.000    0.000    0.000 calendar.py:52(__init__)
        1    0.000    0.000    0.000    0.000 fitpack2.py:951(LSQSphereBivariateSpline)
        1    0.000    0.000    0.000    0.000 errors.py:70(CCompilerError)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:270(SMOOTH_MORE)
        1    0.000    0.000    0.000    0.000 miobase.py:26(MatReadWarning)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:122(MaxFilter)
        1    0.000    0.000    0.000    0.000 index_tricks.py:436(CClass)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:226(EDGE_ENHANCE_MORE)
        1    0.000    0.000    0.000    0.000 pickle.py:62(PicklingError)
        1    0.000    0.000    0.000    0.000 patches.py:2433(SimpleEvent)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:283(SHARPEN)
        1    0.000    0.000    0.000    0.000 ImageFilter.py:193(CONTOUR)
        1    0.000    0.000    0.000    0.000 __init__.py:426(checkdep_usetex)
        1    0.000    0.000    0.000    0.000 __init__.py:397(WinDLL)
        1    0.000    0.000    0.000    0.000 decimal.py:360(Underflow)
        1    0.000    0.000    0.000    0.000 dataset.py:14(OutOfSyncError)
        1    0.000    0.000    0.000    0.000 __init__.py:176(c_long)
        1    0.000    0.000    0.000    0.000 pyparsing_py2.py:2216(StringEnd)
        1    0.000    0.000    0.000    0.000 errors.py:20(DistutilsClassError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1664(Vrule)
        1    0.000    0.000    0.000    0.000 neurondecomposable.py:115(RecurrentDecomposableNetwork)
        1    0.000    0.000    0.000    0.000 miobase.py:24(MatWriteError)
        1    0.000    0.000    0.000    0.000 neurondecomposable.py:111(FeedForwardDecomposableNetwork)
        1    0.000    0.000    0.000    0.000 __init__.py:201(c_double)
        1    0.000    0.000    0.000    0.000 decimal.py:311(Subnormal)
        1    0.000    0.000    0.000    0.000 errors.py:38(DistutilsOptionError)
        1    0.000    0.000    0.000    0.000 __init__.py:180(c_ulong)
        1    0.000    0.000    0.000    0.000 errors.py:33(DistutilsFileError)
        1    0.000    0.000    0.000    0.000 Image.py:1722(ImageTransformHandler)
        1    0.000    0.000    0.000    0.000 mathtext.py:1779(VCentered)
        1    0.000    0.000    0.000    0.000 threading.py:1095(_set_daemon)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1762(NegFilll)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 shutil.py:38(ExecError)
        1    0.000    0.000    0.000    0.000 decimal.py:184(Clamped)
        1    0.000    0.000    0.000    0.000 errors.py:87(UnknownFileError)
        1    0.000    0.000    0.000    0.000 decimal.py:299(Rounded)
        1    0.000    0.000    0.000    0.000 six.py:54(__len__)
        1    0.000    0.000    0.000    0.000 Image.py:1718(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 six.py:132(_MovedItems)
        1    0.000    0.000    0.000    0.000 dataset.py:16(NoLinkedFieldsError)
        1    0.000    0.000    0.000    0.000 base.py:17(SparseFormatWarning)
        1    0.000    0.000    0.000    0.000 polyutils.py:69(PolyBase)
        1    0.000    0.000    0.000    0.000 dataset.py:15(VectorFormatError)
        1    0.000    0.000    0.000    0.000 _iotools.py:442(ConversionWarning)
        1    0.000    0.000    0.000    0.000 rcsetup.py:136(__init__)
        1    0.000    0.000    0.000    0.000 errors.py:26(DistutilsGetoptError)
        1    0.000    0.000    0.000    0.000 streamplot.py:338(InvalidIndexError)


